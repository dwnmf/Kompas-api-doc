ksD3GetSpcObjGeometry.
Синтаксис:
LPDISPATCH D3GetSpcObjGeometry (long spcObj);
Входные параметры:
4577



spcObj " указатель на объект спецификации.

Возвращаемое значение:

Указатель на интерфейс ksPart " в случае успешного завершения,
0 " если деталь не подключена или в случае 

ошибки.

ksDeleteSpcDescription  Удалить описание 
спецификации из графического документа
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksDeleteSpcDescription.
Синтаксис:
int ksDeleteSpcDescription (reference pDoc,
int index);
Входной параметр:

pDoc " указатель на документ,
index " индекс (номер) описания спецификации в документе.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

ksEditWindowSpcObject  Запустить окно 
редактирования для объекта спецификации, 
существующего в графическом документе
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksEditWindowSpcObject.
Синтаксис:
int ksEditWindowSpcObject (reference spcObj);
Входной параметр:
4578



spcObj " указатель на объект спецификации.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1.  Функция открывает диалог редактирования для объекта спецификации, расположенно"
го в графическом документе.

2.  Функция запускает процесс. Так как система может работать только с одним процессом,
нужно завершить другие процессные функции: Cursor, Placement, CommandWindow,
ksEditViewObject, ksCreateViewObject;

ksGetApplyLibrarySpcStyle  Получить признак 
использования стиля спецификации
Синтаксис:
int LIB_FUNC  ksGetApplyLibrarySpcStyle();
Возвращаемое значение:

1 " для работы со спецификацией использовать стиль СП из 
библиотеки, а не втянутый в документ,

0 " для работы со спецификацией использовать стиль 
втянутый в документ.

ksGetCurrentSpcObject  Получить указатель 
текущего (выделенного или редактируемого) 
объекта спецификации
Аналог данного метода при использовании использовании Automation " метод
ksGetCurrentSpcObject.
Синтаксис Automation:
long ksGetCurrentSpcObject();
Возвращаемое значение:

указатель на текущий объект " в случае успеха,
0 " в случае неудачи.

Примечание:
Метод работает для видимых таблиц спецификации.
4579



ksGetSpcColumnNumb  Для данного объекта 
спецификации по типу колонки и номеру блока 
получить номер колонки
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcColumnNumb.
Синтаксис:
int ksGetSpcColumnNumb (reference spcObj,
unsigned int columnType,
unsigned int typeNumb,
unsigned int block);
Входные параметры:

spcObj " указатель на объект спецификации,
columnType " тип колонки,
ispoln " номер колонки данного типа, начиная с 1,
block " номер блока исполнений.

Возвращаемое значение:

номер колонки спецификации. " в случае успеха,
0 " в случае неудачи.

Типы колонок спецификации...

ksGetSpcColumnType  По номеру колонки для 
данного объекта спецификации получить 
параметры колонки
Пример...
По номеру колонки для данного объекта спецификации получить параметры колонки:

▼ тип колонки (SPC_CLM_FORMAT...SPC_CLM_USER),
▼ исполнение данного типа,
▼ номер блока,
▼ тип значения (зависит от раздела),
▼ имя колонки.

Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcColumnType.
Синтаксис:
int ksGetSpcColumnType (reference spcObj,
unsigned int colNumb,
SpcColumnParam * par);
Входные параметры:
4580



spcObj " указатель на объект спецификации,
colNumb " номер колонки, начиная с 1.

Выходной параметр:

par " указатель на структуру параметров колонки спецификации SpcColumnParam.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Типы колонок спецификации...
Примечание:

1.  Если число исполнений больше количества колонок для исполнений в бланке специфи"
кации, недостающие колонки исполнений пристыковываются справа от отображаемых
колонок и получают номера, следующие за номерами колонок таблицы спецификации,
затем пристыковываются и нумеруются дополнительные колонки.

2.  При использовании Unicode следует использовать функцию ksGetSpcColumnTypeW.

ksGetSpcColumnTypeW  По номеру колонки для 
данного объекта спецификации получить 
параметры колонки (Unicode)
По номеру колонки для данного объекта получить параметры: 

▼ тип колонки (SPC_CLM_FORMAT...SPC_CLM_USER),
▼ исполнение данного типа,
▼ номер блока,
▼ тип значения( зависит от раздела),
▼ имя колонки.

Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcColumnType.
Синтаксис:
int ksGetSpcColumnTypeW (reference spcObj,
unsigned int colNumb,
SpcColumnParamW *par);
Входные параметры:

spcObj " указатель на объект спецификации,
colNumb " номер колонки, начиная с 1.

Выходной параметр:
4581



par " указатель на структуру параметров колонки 
спецификации SpcColumnParamW.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Типы колонок спецификации...
Примечание:

1.  Если число исполнений больше количества колонок для исполнений в бланке специфи"
кации, недостающие колонки исполнений пристыковываются справа от отображаемых
колонок и получают номера, следующие за номерами колонок таблицы спецификации,
затем пристыковываются и нумеруются дополнительные колонки.

2.  При использовании ANSI следует использовать функцию ksGetSpcColumnType.

ksGetSpcDescription  Получить параметры описания 
спецификации для заданного документа
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcDescription.
Синтаксис:
int ksGetSpcDescription (reference pDoc,
int index,
SpcDescrParam * param,
unsigned char* state);
Входной параметр:

pDoc " указатель на документ,
index " индекс (номер) описания спецификации в документе.

Выходные параметры:

param " структура параметров описания спецификации,
state " состояние описания спецификации:

TRUE " текущее, 
FALSE " не текущее.

Структура параметров описания спецификации....
4582



Описание:
Функция возвращает параметры описания спецификации для указанного документа.
Примечание:

1.  Если index = "1, берется текущее описание. Для документа"спецификации параметр
index не используется.

2.  При использовании Unicode следует использовать функцию ksGetSpcDescriptionW.

ksGetSpcDescriptionW  Получить параметры 
описания спецификации для заданного документа 
(Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcDescription.
Синтаксис:
int ksGetSpcDescriptionW (reference pDoc,
int index,
SpcDescrParamW * param,
unsigned char* state);
Входной параметр:

pDoc " указатель на документ,
index " индекс (номер) описания спецификации в документе.

Выходные параметры:

param " структура параметров описания спецификации,
state " состояние описания спецификации:

TRUE " текущее, 
FALSE " не текущее.

Структура параметров описания спецификации....
Описание:
Функция возвращает параметры описания спецификации для указанного документа.
Примечание:

1.  Если index = "1, берется текущее описание. Для документа"спецификации параметр
index не используется.

2.  При использовании ANSI следует использовать функцию ksGetSpcDescription.
4583



ksGetSpcDocumentPagesCount  Получить количество 
листов документаспецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpcDocument::ksGetSpcDocumentPagesCount.
Синтаксис:
int ksGetSpcDocumentPagesCount (reference spcDoc);
Входные параметры:

spcDoc " указатель на документ"спецификацию (если spcDoc = 0, функция 
работает для текущей спецификации).

Возвращаемое значение:

количество листов документа"спецификации.

ksGetSpcObject  Получить объект спецификации по 
номеру
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObject.
Синтаксис:
reference ksGetSpcObject (double objNumb);
Входной параметр:

objNumb " уникальный номер объекта спецификации.

Возвращаемое значение:

" указатель на объект спецификации.

ksGetSpcObjectAttributeNumber  Получить номер 
атрибута объекта спецификации
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectAttributeNumber.
Синтаксис:
double ksGetSpcObjectAttributeNumber (reference spcObj);
Входные параметры:

spcObj " объект спецификации.
4584



Возвращаемое значение:

" Номер атрибута.

Примечания:
Если spcObj = 0, то возвращается номер редактируемого в текущий момент
объекта спецификации, т.е. внутри блока:
ksSpcObjectEdit(...);  .
ksGetSpcObjectAttributeNumber(...);
ksSpcObjectEnd();

ksGetSpcObjectColumnText  Получить текст из 
колонки определенного типа заданного исполнения 
объекта спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectColumnText
Синтаксис:
int ksGetSpcObjectColumnText (reference spcObj,
unsigned int columnType
unsigned int ispoln,
unsigned int block,
char *s,
unsigned int size_s);   // длина строки s
Входные параметры:

spcObj " указатель на объект спецификации,
columnType " тип колонки  SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln " номер исполнения данного типа,
block " номер блока исполнений, начиная с 0 (если количество исполнений 

меньше количества исполнений в бланке спецификации),
s " указатель на строку, в которую требуется положить полученный текст,
size_s длина строки s.

Типы колонок спецификации...
Выходные параметры:

строка с текстом из колонки.

Возвращаемое значение:

0 " в случае успешного завершения,
количество символов " если длина строки оказалась меньше требуемой size_s,
4585



"1  в случае ошибки.
Примечание:

1.  Для групповой спецификации 2.113"75 число исполнений меньше 10.
2.  При использовании Unicode следует использовать функцию

ksGetSpcObjectColumnTextW.

ksGetSpcObjectColumnTextEx  Получить текст 
объекта спецификации для определенного типа 
колонки и исполнения в виде динамического 
массива TEXT_LINE_ARR
Аналог данной функции при использовании Automation " метод
ksSpecification::GetSpcObjectColumnTextEx.
Синтаксис:
reference ksGetSpcObjectColumnTextEx (reference spcObj, 
unsigned int columnType, 
unsigned int ispoln, 
unsigned int block)
Входные параметры:

spcObj объект спецификации,
columnType тип колонки SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln номер колонки данного типа, начиная с 1,
block номер блока.

Возвращаемое значение:

 " динамический массив строк текста TEXT_LINE_ARR, " в случае успеха,
0 " в случае ошибки.

Примечание:
Если номер блока block = 0 " число исполнений меньше количества исполнений в бланке
спецификации (для групповой спецификации 2.113"75 число исполнений меньше 10).

ksGetSpcObjectColumnTextW  Получить текст из 
колонки определенного типа заданного исполнения 
объекта спецификации (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectColumnText.
Синтаксис:
int ksGetSpcObjectColumnTextW (reference spcObj,
unsigned int columnType
4586



unsigned int ispoln,
unsigned int block,
LPWSTR s,
unsigned int size_s);   // длина строки s
Входные параметры:

spcObj " указатель на объект спецификации,
columnType " тип колонки  SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln " номер исполнения данного типа,
block " номер блока исполнений, начиная с 0 (если количество 

исполнений меньше количества исполнений в бланке 
спецификации),

s " указатель на строку, в которую требуется положить 
полученный текст,

size_s длина строки s.

Типы колонок спецификации...
Выходные параметры:

строка с текстом из колонки.

Возвращаемое значение:

0 " в случае успешного завершения,
количество символов " если длина строки оказалась меньше требуемой size_s,
"1  в случае ошибки.

Примечание:

1.  Для групповой спецификации 2.113"75 число исполнений меньше 10.
2.  При использовании ANSI следует использовать функцию ksGetSpcObjectColumnText.

ksGetSpcObjectColumnTextAlign  Получить 
выравнивание для текста колонки объекта 
спецификации
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectColumnTextAlign.
Синтаксис:
int ksGetSpcObjectColumnTextAlign (reference spcObj,
int columnNumber,
int lineIndex);
Входной параметр:
4587



spcObj " указатель на объект спецификации,
columnNumber " номер колонки, начиная с 1,
lineIndex " индекс строки текста.

Возвращаемое значение:

" Способ выравнивания в ячейке.

Примечания:
Значение переменной align может принимать значения:

▼  0 " Выравнивание влево,
▼  1 " Выравнивание по центру,
▼  2 " Выравнивание вправо, 
▼  3 " Выравнивание по ширине.

ksGetSpcObjectColumnValues  Получить массив 
значений для определенного типа колонки и 
исполнения значений для определенного типа 
колонки и исполнения
Синтаксис:
reference ksGetSpcObjectColumnVa
lues (reference spcObj,
unsigned int columnType,
unsigned int ispoln,
unsigned int block);
Входные параметры:

spcObj " указатель на объект спецификации,
columnType " тип колонки,
ispoln " номер колонки данного типа, начиная с 1,
block " номер блока исполнений.

Возвращаемое значение:

динамический массив типа LTVARIANT_ARR " в случае успеха,
0 " в случае неудачи.

Примечание.
Для колонки типа "запись" функция вернет массив значений записи, а для колонки, со"
стоящей из одного элемента " массив из одного элемента соответствующего типа.
4588



ksGetSpcObjectNumber  Получить уникальный 
номер объекта спецификации 
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectNumber.
Синтаксис:
double ksGetSpcObjectNumber (reference spcObj);
Входной параметр:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

" уникальный номер объекта спецификации.

ksGetSpcObjForGeom  Получить указатель объекта 
СП по геометрии для текущего графического 
документа
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjForGeom.
Синтаксис:
reference ksGetSpcObjForGeom (char * nameLib, 
unsigned int numb, 
reference obj, 
unsigned char equal, 
unsigned char first);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
obj " указатель на графический объект или группу объектов (0 " 

макроэлемент редактирования),
equal " признак вхождения геометрии в состав объекта:

1 " геометрия идентична геометрии объекта спецификации, 
0 " геометрия входит в объект спецификации,

first " 1 "первый объект, 0 " следующий объект.

Возвращаемое значение:

" указатель на объект спецификации.
4589



Примечания:

1.  Данный метод " только для графических документов.
2.  В настоящий момент метод реализован только для equal = 1.

ksGetSpcObjForGeomWithLimit  Получить указатель 
на объект спецификации, подключенный к данному 
графическому объекту с ограничениями по номеру 
раздела и типу атрибута
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjForGeomWithLimit.
Синтаксис:
reference ksGetSpcObjForGeomWithLimit (char * nameLib,
unsigned int numb,
reference obj,
unsigned char equal, 
unsigned char first, 
unsigned short section,
double attrTypeNumb);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
obj " указатель на графический объект или группу объектов (если obj = 

0, функция работает с макроэлементом редактирования),
equal " признак вхождения геометрии в состав объекта:

1 " геометрия идентична геометрии объекта спецификации, 
0 " геометрия входит в объект спецификации,

first " 1 "первый объект, 0 " следующий объект
section " номер раздела, в котором нужно найти объект (0 " номер не 

ограничивается),
attrTypeNumb " номер типа атрибута, для которого нужно найти объект (0 " номер 

не ограничивается).

Возвращаемое значение:

" указатель на объект спецификации.

Примечания:

1.  Данный метод " только для графических документов.
2.  В настоящий момент метод реализован только для equal = 1.
4590



3.  При использовании Unicode следует использовать функцию
ksGetSpcObjForGeomWithLimitW.

ksGetSpcObjForGeomWithLimitW  Получить 
указатель на объект спецификации, подключенный 
к данному графическому объекту с ограничениями 
по номеру раздела и типу атрибута (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjForGeomWithLimit.
Синтаксис:
reference ksGetSpcObjForGeomWithLimitW (LPWSTR nameLib,
unsigned int numb,
reference obj,
unsigned char equal, 
unsigned char first, 
unsigned short section,
double attrTypeNumb);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
obj " указатель на графический объект или группу объектов (если obj = 0, 

функция работает с макроэлементом редактирования),
equal " признак вхождения геометрии в состав объекта:

1 " геометрия идентична геометрии объекта спецификации, 
0 " геометрия входит в объект спецификации,

first " 1 "первый объект, 0 " следующий объект
section " номер раздела, в котором нужно найти объект (0 " номер не 

ограничивается),
attrTypeNumb " номер типа атрибута, для которого нужно найти объект (0 " номер не 

ограничивается).

Возвращаемое значение:

" указатель на объект спецификации.

Примечания:

1.  Данный метод " только для графических документов.
2.  В настоящий момент метод реализован только для equal = 1.
3.  При использовании ANSI следует использовать функцию ksGetSpcObjForGeomWithLimit.
4591



ksGetSpcObjGeometry  Получить деталь или 
подсборку, подключенную к объекту спецификации
Справка системы КОМПАС...
KOMPAS.chm::/1183_135_5_3_Prosmotr_geometrii.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjGeometry.
Синтаксис:
reference ksGetSpcObjGeometry (reference spcObj);
Входные параметры:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

указатель на группу " в случае успешного завершения,
0 " в случае если геометрия не подключена или в случае ошибки.

Примечания:
Функция устарела, рекомендуется вместо нее использовать функцию
ksGetSpcObjGeometryEx.

ksGetSpcObjGeometryEx  Получить графический 
объект, подключенный к объекту спецификации
Справка системы КОМПАС...
KOMPAS.chm::/1183_135_5_3_Prosmotr_geometrii.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjGeometryEx.
Синтаксис:
reference ksGetSpcObjGeometryEx (reference  spcObj, int geomMode);
Входные параметры:

spcObj " указатель на объект спецификации,
geomMode 0 " только геометрия;

1 " только линии выноски;
2 " геометрия и линии выноски.

Возвращаемое значение:

указатель на группу " в случае успешного завершения,
0 " в случае, если геометрия не подключена или в случае ошибки.
4592



ksGetSpcObjectSummaryCount  Получить суммарное 
количество для одинаковых объектов
Справка системы КОМПАС...
KOMPAS.chm::/1218_139_2_Podschet_summy_znach.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectSummaryCount.
Синтаксис:
double ksGetSpcObjectSummaryCount (reference spcObj,
int ispoln,
int blockNumber );
Входные параметры:

spcObj " объект спецификации,
ispoln " номер колонки типа "количество", начиная с 1 (актуально 

для СП типа Б),
blockNumber " номер блока, начиная с 0 (актуально для СП типа A).

Возвращаемое значение:

" cуммарное количество.

ksGetSpcPerformanceName  Получить 
отображаемое имя исполнения
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcPerformanceName.
Синтаксис:
int LIB_FUNC ksGetSpcPerformanceName( int index,
int ispoln,
int blockNumber,
LPSTR name,
int   nameLen );
Входные параметры:

index " индекс описания СП в документе,
ispoln " номер колонки типа "количество", начиная с 

1(актуально для СП типа Б),
blockNumber " номер блока, начиная с 0 ( актуально для СП типа A),
nameLen " длина буфера строки.

Выходные параметры:
4593



name " имя исполнения.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1.  Для групповой спецификации A или Б у объекта спецификации может быть несколько
исполнений.

2.  Количество исполнений настраивается в настройке стиля спецификации. По умолчанию
имя исполнения формируется из номера исполнения: ""01", ""02" и т.д. Имя исполнения
можно отредактировать вручную.

3.  Функция предназначена для получения имени исполнения.
4.  При использовании Unicode следует использовать функцию

ksGetSpcPerformanceNameW.

ksGetSpcPerformanceNameW  Получить 
отображаемое имя исполнения (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcPerformanceName.
Синтаксис:
int LIB_FUNC ksGetSpcPerformanceNameW( int index,
int ispoln,
int blockNumber,
LPWSTR name,
int   nameLen );
Входные параметры:

index " индекс описания СП в документе,
ispoln " номер колонки типа "количество", начиная с 

1(актуально для СП типа Б),
blockNumber " номер блока, начиная с 0 (актуально для СП типа A),
nameLen " длина буфера строки.

Выходные параметры:

name  имя исполнения.

Возвращаемое значение:

1  в случае успешного завершения,
0  в случае неудачи.
4594



Примечание:

1.  Для групповой спецификации A или Б у объекта спецификации может быть несколько
исполнений.

2.  Количество исполнений настраивается в настройке стиля спецификации. По умолчанию
имя исполнения формируется из номера исполнения: ""01", ""02" и т.д. Имя исполнения
можно отредактировать вручную.

3.  Функция предназначена для получения имени исполнения.
4.  При использовании ANSI следует использовать функцию ksGetSpcPerformanceName.

ksGetSpcPropertyFill  Получить признак 
синхронизации текстов объекта спецификации со 
свойствами
Синтаксис:
long LIB_FUNC  ksGetSpcPropertyFill( reference spcObj );
Возвращаемое значение:

1 " флаг Синхронизировать со свойствами 
компонента взведен,

0 " флаг Синхронизировать со свойствами 
компонента не взведен.

ksGetSpcSectionName  Получить название раздела 
спецификации, которому принадлежит указанный 
объект спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcSectionName.
Синтаксис:
int ksGetSpcSectionName (reference spcObj, char* name, int size);
Входной параметр:

spcObj " указатель на объект спецификации.

Выходные параметры:

name " буфер для имени раздела,
size " размер буфера.

Возвращаемое значение:
4595



1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание.
При использовании Unicode следует использовать функцию ksGetSpcSectionNameW.

ksGetSpcSectionNameW  Получить название раздела 
спецификации, которому принадлежит указанный 
объект спецификации (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcSectionName.
Синтаксис:
int ksGetSpcSectionNameW (reference spcObj, LPWSTR name, int size);
Входной параметр:

spcObj " указатель на объект спецификации.

Выходные параметры:

name " буфер для имени раздела,
size " размер буфера.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание.
При использовании ANSI следует использовать функцию ksGetSpcSectionName.

ksGetSpcSheetSB  Получить динамический массив 
листов сборочного чертежа, подключенных к 
спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpcDocument::ksGetSpcSheetSB.
Синтаксис:
reference ksGetSpcSheetSB (reference spcDoc);
Входной параметр:
4596



spcDoc " указатель на спецификацию.

Возвращаемое значение:

указатель на динамический массив листов сборочного чертежа " в случае успеха,
типа CHAR_STR_ARR
0 " в случае неудачи.

ksGetSpcSheetSB_W  Получить динамический 
массив листов сборочного чертежа, подключенных к 
спецификации (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpcDocument::ksGetSpcSheetSB.
Синтаксис:
reference ksGetSpcSheetSB_W (reference spcDoc);
Входной параметр:

spcDoc " указатель на спецификацию.

Возвращаемое значение:

указатель на динамический массив листов " в случае успеха,
сборочного чертежа типа CHAR_STR_ARR_W.
0 " в случае неудачи.

ksGetSpcStyleParam  Получить параметры 
указанного стиля спецификации из заданной 
библиотеки
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_LIB_STYLE_DIALOG.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcStyleParam.
Синтаксис:
int LIB_FUNK ksGetSpcStyleParam (char * nameLib,
unsigned int numb,
void * par,
unsigned int size,
int tPar);
Входные параметры:
4597



nameLib " имя библиотеки стилей спецификаций
(NULL " параметры берутся у текущего документа),

numb " номер стиля спецификации в библиотеке,
tPar " тип возвращаемых параметров.

Выходной параметр:

par " структура параметров стиля спецификации,
size " размер структуры параметров.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1.  Если tPar =ALLPARAM, то заполняется структура параметров стиля спецификации
SpcStyleParam....

2.  Если tPar = SPC_TUNING_PARAM, то заполняется заполняется структура параметров на"
строек спецификации SpcTuningStyleParam....

3.  При использовании Unicode следует использовать функцию ksGetSpcStyleParamW.

ksGetSpcStyleParamW  Получить параметры 
указанного стиля спецификации из заданной 
библиотеки (Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_LIB_STYLE_DIALOG.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcStyleParam.
Синтаксис:
int LIB_FUNK ksGetSpcStyleParamW (LPWSTR nameLib,
unsigned int numb,
void * par,
unsigned int size,
int tPar);
Входные параметры:

nameLib " имя библиотеки стилей спецификаций
(NULL " параметры берутся у текущего документа),

numb " номер стиля спецификации в библиотеке,
tPar " тип возвращаемых параметров.
4598



Выходной параметр:

par " структура параметров стиля спецификации,
size " размер структуры параметров.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1.  Если tPar =ALLPARAM, то заполняется структура параметров стиля спецификации
SpcStyleParam....

2.  Если tPar = SPC_TUNING_PARAM, то заполняется заполняется структура параметров на"
строек спецификации SpcTuningStyleParam....

3.  При использовании ANSI следует использовать функцию ksGetSpcStyleParam.

ksGetSpcTableColumn  Получить количество колонок 
для стиля спецификации в текущем документе
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcTableColumn.
Синтаксис:
int ksGetSpcTableColumn (char * nameLib,
unsigned int numb,
unsigned char additioanalCol);
Входные параметры:

nameLib " имя библиотеки стилей спецификаций,
numb " номер стиля в библиотеке,
additioanalCol " признак колонок: 

0 " колонки таблицы спецификации, 
1 " дополнительные колонки.

Возвращаемое значение:

количество колонок для стиля спецификации в "в случае успеха,
текущем документе.
0 " в случае неудачи.

Примечания:
4599



1.  Если документ " спецификация, то параметры nameLib и numb не используются.
2.  Если количество исполнений больше числа колонок "количество" в бланке специфика"

ции, то количество колонок выдается с учетом всех исполнений.

ksGetTuningSpcStyleParam  Получить параметры 
настройки спецификации документа
Справка системы КОМПАС...
KOMPAS.chm::/1300_Glava145_Stilq_specifikaci.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetTuningSpcStyleParam.
Синтаксис:
int ksGetTuningSpcStyleParam (reference pDoc,
int index,
SpcTuningStyleParam * par);
Входные параметры:

pDoc " указатель на документ,
index " индекс описания спецификации в документе,
par " структура параметров SpcTuningStyleParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1.  Если pDoc == 0, то изменяются параметры настроек для текущего документа;
2.  Если index == "1, то изменяются параметры настроек текущего описания спецификации;
3.  Для документа"спецификации настройки можно заменить всегда; для графического до"

кумента: в случае, если документ подключен к спецификации или включен режим "Спе"
цификация на листе"; для 3d документа: в случае, если документ подключен к специфи"
кации.

4.  При использовании Unicode следует использовать функцию
ksGetTuningSpcStyleParamW.

ksGetTuningSpcStyleParamW  Получить параметры 
настройки спецификации документа (Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/1300_Glava145_Stilq_specifikaci.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetTuningSpcStyleParam.
Синтаксис:
4600



int ksGetTuningSpcStyleParamW (reference pDoc,
int index,
SpcTuningStyleParamW * par);
Входные параметры:

pDoc " указатель на документ,
index " индекс описания спецификации в документе,
par " структура параметров SpcTuningStyleParamW.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1.  Если pDoc == 0, то изменяются параметры настроек для текущего документа;
2.  Если index == "1, то изменяются параметры настроек текущего описания спецификации;
3.  Для документа"спецификации настройки можно заменить всегда; для графического до"

кумента: в случае, если документ подключен к спецификации или включен режим "Спе"
цификация на листе"; для 3d документа: в случае, если документ подключен к специфи"
кации.

4.  При использовании ANSI следует использовать функцию ksGetTuningSpcStyleParam.

ksGetWidthColumnSpc  Получить ширину колонки 
или текста в колонке
Аналог данного метода при использовании Automation " метод
ksSpecification::ksGetWidthColumnSpc.
Синтаксис Automation:
double ksGetWidthColumnSpc (int numColumn, 
unsigned char cellOrText)
Входные параметры:

numColumn " номер колонки,
cellOrText " признак объекта, ширину которого требуется узнать:

1 " колонка,
0 " текст в колонке.

Возвращаемое значение:

ширина колонки или текста в колонке.

Примечание:
Номер колонки должен начинаться с единицы.
4601



ksIsModuleSpecificationActive  Проверить, 
разрешена ли работа со спецификацией
Аналог данной функции при использовании Automation " метод
KompasObject::ksIsModuleSpecificationActive
Синтаксис:
int ksIsModuleSpecificationActive();
Возвращаемое значение:

1 " работа со спецификацией разрешена,
0 " работа со спецификацией запрещена.

Примечание:
Если ksIsModuleSpecificationActive == FALSE, работа со спецификацией запрещена.
Для включения работы со спецификацией используйте функцию ksModuleSpecification.
Эта же функция позволяет отключить работу со спецификацией.

ksIsSlaveSpcOpened  Проверить, открыто ли окно 
спецификации в подчиненном режиме
Справка системы КОМПАС...
KOMPAS.chm::/1155_132_3_Podchinennyj_rezhim.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksIsSlaveSpcOpened.
Синтаксис:
int ksIsSlaveSpcOpened (reference doc);
Входные параметры:

doc " указатель на документ.

Возвращаемое значение:

0 " окно спецификации в Slave режиме не открыто,
1 " окно спецификации в Slave режиме открыто,
2 " окно спецификации в Slave режиме открыто и активно.

Примечание.
Если doc = 0, метод вызывается для активного документа.
4602



и 
ksModuleSpecification  Управление возможностью 
работы со спецификацией
Аналог данной функции при использовании Automation " метод
KompasObject::ksModuleSpecification.
Синтаксис:
int ksModuleSpecification (unsigned char attach);
Входной параметр:

attach признак выполняемого действия:
1 " включить работу со спецификацией,
0 " выключить работу со спецификацией.

Возвращаемое значение:

1 " если был инициирован процесс включения или отключения возможност
работы со спецификацией,

0 " в случае неудачного завершения.

Примечание:
Проверить, включена или отключена работа со спецификацией, можно с помощью фун"
кции ksIsModuleSpecificationActive.

5.  При использовании ANSI следует использовать функцию ksSpcObjectCreate.

ksSetApplyLibrarySpcStyle Установить признак 
использования стиля спецификации
Синтаксис:
int LIB_FUNC  ksSetApplyLibrarySpcStyle( int librarySpcStyle );
Входные параметры:

librarySpcStyle 1 " использовать стиль СП из библиотеки, а не втянутый в 
документ.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksSetCurrentSpcObject  Установить текущий объект 
спецификации по указателю на него либо по его 
индексу
Аналог данного метода при использовании Automation " метод ksSetCurrentSpcObject.
4603



Синтаксис:
long ksSetCurrentSpcObject (long spcObj, long index);
Входные параметры:

spcObj " указатель на объект,
index " индекс объекта.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод работает для видимых таблиц спецификации.

ksSetSpcDescription  Установить параметры 
описания спецификации по индексу для указанного 
документа
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcDescription.
Синтаксис:
int ksSetSpcDescription (reference pDoc,
int index,
SpcDescrParam* param,
unsigned char state);
Входные параметры:

pDoc " указатель на документ,
index " индекс (номер) описания спецификации в документе ("1 " текущее описание),
param " указатель на параметры описания спецификации,
state " состояние описания спецификации:

TRUE " текущее, 
FALSE " не текущее.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.
4604



Структура параметров описания спецификации....
Примечания:

1.  Метод изменяет параметры описания спецификации и/или делает его активным, если
state = TRUE.

2.  Если param = NULL " меняется только состояние.
3.  Для документа"спецификации параметр index не используется.
4.  При использовании Unicode следует использовать функцию ksSetSpcDescriptionW.

ksSetSpcDescriptionW  Установить параметры 
описания спецификации по индексу для указанного 
документа (Unicode) 
Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcDescription.
Синтаксис:
int ksSetSpcDescriptionW (reference pDoc,
int index,
SpcDescrParamW* param,
unsigned char state);
Входные параметры:

pDoc " указатель на документ,
index " индекс (номер) описания спецификации в документе ("1 " текущее описание),
param " указатель на параметры описания спецификации,
state " состояние описания спецификации:

TRUE " текущее, 
FALSE " не текущее.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Структура параметров описания спецификации....
Примечания:

1.  Метод изменяет параметры описания спецификации и/или делает его активным, если
state = TRUE.

2.  Если param = NULL " меняется только состояние.
3.  Для документа"спецификации параметр index не используется.
4.  При использовании ANSI следует использовать функцию ksSetSpcDescription.
4605



ksSetSpcObjectAttributeNumber  Установить номер 
атрибута объекта спецификации
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcObjectAttributeNumber.
Синтаксис:
int ksSetSpcObjectAttributeNumber (reference spcObj, double attrNumber);
Входные параметры:

spcObj " объект спецификации,
attrNumber " номер атрибута.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи." в случае неудачи.

Примечания:
Если spcObj = 0, то возвращается номер редактируемого в текущий момент
объекта спецификации, т.е. внутри блока:
ksSpcObjectEdit(...);  .
...
...
ksSpcObjectEnd();

ksSetSpcObjectColumnText  Установить текст 
колонки определенного типа заданного исполнения 
объекта спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcObjectColumnText.
Синтаксис:
int ksSetSpcObjectColumnText (unsigned int columnType,
unsigned int ispoln,
unsigned int block,
char *s);
Входные параметры:

columnType " тип колонки  SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln " номер исполнения данного типа,
4606



block " номер блока исполнений, начиная с 0 (если количество 
исполнений меньше количества исполнений в бланке 
спецификации),

s " строка, из которой нужно взять текст.
Типы колонок спецификации...
Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1.  Для групповой спецификации 2.113"75 число исполнений меньше 10.
2.  Функция работает в режиме создания нового или редактирования существующего объ"

екта спецификации ksSpcObjectCreate или ksSpcObjectEdit; 
//...
//   ksSetSpcObjectColumnText(...);
//...
// reference spsObj = ksSpcObjectEnd();

3.  При использовании Unicode следует использовать функцию
ksSetSpcObjectColumnTextW.

ksSetSpcObjectColumnTextEx  Задать текст объекта 
спецификации для определенного типа колонки и 
исполнения
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcObjectColumnTextEx.
Синтаксис:
int ksSetSpcObjectColumnTextEx (unsigned int columnType,
unsigned int ispoln, 
unsigned int block, 
reference p);
Входные параметры:

columnType тип колонки SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln номер колонки данного типа, начиная с 1,
block номер блока,
p динамический массив строк текста TEXT_LINE_ARR.

Возвращаемое значение:

1  " в случае успеха,
0 " в случае ошибки.
4607



Примечание:
Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации ksSpcObjectCreate или ksSpcObjectEdit
... ksSetSpcObjectColumnTextEx(...); reference spsObj = ksSpcObjectEnd();.

ksSetSpcObjectColumnTextW  Установить текст 
колонки определенного типа заданного исполнения 
объекта спецификации (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcObjectColumnText.
Синтаксис:
int ksSetSpcObjectColumnTextW (unsigned int columnType,
unsigned int ispoln,
unsigned int block,
LPWSTR s);
Входные параметры:

columnType " тип колонки SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln " номер исполнения данного типа,
block " номер блока исполнений, начиная с 0 (если количество 

исполнений меньше количества исполнений в бланке 
спецификации),

s " строка, из которой нужно взять текст.

Типы колонок спецификации...
Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1.  Для групповой спецификации 2.113"75 число исполнений меньше 10.
2.  Функция работает в режиме создания нового или редактирования существующего объ"

екта спецификации
ksSpcObjectCreate или ksSpcObjectEdit (Unicode)
//...
//ksSetSpcObjectColumnTextW(...);
//...
// reference spsObj = ksSpcObjectEnd();

3.  При использовании ANSI следует использовать функцию ksSetSpcObjectColumnText.
4608



ksSetSpcObjectColumnTextAlign  Установить 
выравнивание для текста колонки объекта 
спецификации
Аналог данной функции при использовании Automation " метод
ksSpecification::ksGetSpcObjectSummaryCount.
Синтаксис:
int ksSetSpcObjectColumnTextAlign (reference spcObj,
int columnNumber,
int lineIndex,
int align );
Входной параметр:

spcObj " указатель на объект спецификации,
columnNumber " номер колонки, начиная с 1,
lineIndex " индекс строки текста,
align " выравнивание.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:
Значение переменной align может принимать значения:

▼  0 " Выравнивание влево
▼  1 " Выравнивание по центру
▼  2 " Выравнивание вправо 
▼  3 " Выравнивание по ширине

ksSetSpcPerformanceName  Установить 
отображаемое имя исполнения
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcPerformanceName.
Синтаксис:
int LIB_FUNC ksSetSpcPerformanceName( int index,
int ispoln,
int blockNumber,
LPSTR name,);
Входные параметры:

Index " индекс описания СП в документе,
4609



Ispoln " номер колонки типа "количество", начиная с 1( актуально 
для СП типа Б ),

blockNumber " номер блока, начиная с 0 ( актуально для СП типа A ),
Name " имя исполнения.
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1.  Для групповой спецификации A или Б у объекта спецификации может быть несколько
исполнений.

2.  Количество исполнений настраивается в настройке стиля спецификации. По умолчанию
имя исполнения формируется из номера исполнения: ""01", ""02" и т.д. Имя исполнения
можно отредактировать вручную. В текст обозначения исполнения, которое редактиру"
ется, нужно включать разделитель.

3.  Функция предназначена для получения имени исполнения.
4.  При использовании Unicode следует использовать функцию

ksSetSpcPerformanceNameW.

ksSetSpcPerformanceNameW  Установить 
отображаемое имя исполнения (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetSpcPerformanceName.
Синтаксис:
int LIB_FUNC ksSetSpcPerformanceName(int index,
int ispoln,
int blockNumber,
LPWSTR name,);
Входные параметры:

Index " индекс описания СП в документе,
Ispoln " номер колонки типа "количество", начиная с 1(актуально 

для СП типа Б),
blockNumber " номер блока, начиная с 0 (актуально для СП типа A),
name " имя исполнения.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
4610



1.  Для групповой спецификации A или Б у объекта спецификации может быть несколько
исполнений.

2.  Количество исполнений настраивается в настройке стиля спецификации. По умолчанию
имя исполнения формируется из номера исполнения: ""01", ""02" и т.д. Имя исполнения
можно отредактировать вручную.

3.  Функция предназначена для получения имени исполнения.
4.  При использовании ANSI следует использовать функцию ksSetSpcPerformanceName.

ksSetSpcPropertyFill  Установить признак 
синхронизации текстов объекта спецификации со 
свойствами
Синтаксис:
int LIB_FUNC  ksSetSpcPropertyFill( reference spcObj, long val );
Входные параметры:

spcObj " указатель на объект спецификации,
 val "   1 " флаг Синхронизировать со свойствами компонента 

взведен
"   0 " флаг Синхронизировать со свойствами компонента не 
взведен.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksSetSpcSheetSB  Установить динамический массив 
листов сборочного чертежа, подключенных к 
спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpcDocument::ksSetSpcSheetSB.
Синтаксис:
int ksSetSpcSheetSB (reference spcDoc, reference arr);
Входной параметр:

spcDoc " указатель на спецификацию,
arr " указатель на динамический массив типа CHAR_STR_ARR 

или CHAR_STR_ARR_W.

Возвращаемое значение:
4611



1 " в случае удачного завершения,
0 " в случае неудачи.

ksSetTuningSpcStyleParam  Установить параметры 
настроек спецификации документа
Справка системы КОМПАС...
KOMPAS.chm::/1300_Glava145_Stilq_specifikaci.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetTuningSpcStyleParam.
Синтаксис:
int ksSetTuningSpcStyleParam (reference pDoc,
int index,
SpcTuningStyleParam * par);
Входные параметры:

pDoc " указатель на документ,
index " индекс описания спецификации в документе,
par " структура параметров SpcTuningStyleParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1.  Если pDoc == 0, то изменяются параметры настроек для текущего документа;
2.  Если index == "1, то изменяются параметры настроек текущего описания спецификации;
3.  Для документа"спецификации настройки можно заменить всегда;
4.  Для графического документа настройки можно заменить в случае, если документ под"

ключен к спецификации или включен режим "Спецификация на листе";
5.  Для документа"модели настройки можно заменить в случае, если документ подключен

к спецификации.
6.  При использовании Unicode следует использовать функцию

ksSetTuningSpcStyleParamW.
4612



ksSetTuningSpcStyleParamW  Установить параметры 
настроек спецификации документа (Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/1300_Glava145_Stilq_specifikaci.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSetTuningSpcStyleParam.
Синтаксис:
int ksSetTuningSpcStyleParamW (reference pDoc,
int index,
SpcTuningStyleParamW * par);
Входные параметры:

pDoc " указатель на документ,
index " индекс описания спецификации в документе,
par " структура параметров SpcTuningStyleParamW.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1.  Если pDoc == 0, то изменяются параметры настроек для текущего документа;
2.  Если index == "1, то изменяются параметры настроек текущего описания спецификации;
3.  Для документа"спецификации настройки можно заменить всегда;
4.  Для графического документа настройки можно заменить в случае, если документ под"

ключен к спецификации или включен режим "Спецификация на листе";
5.  Для документа"модели настройки можно заменить в случае, если документ подключен

к спецификации.
6.  При использовании ANSI следует использовать функцию ksSetTuningSpcStyleParam.

ksSpcChangeValue  Изменить значение компонента 
с указанным номером в указанной колонке
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcChangeValue.
Синтаксис:
int ksSpcChangeValue (unsigned int colNumb, 
unsigned int itemNumb, 
4613



void *val, 
unsigned char typeVal);
Входные параметры:

colNumb " номер колонки, начиная с единицы,
itemNumb " номер компоненты, начиная с единицы,
val " указатель на значение,
typeVal " тип данных.

Типы данных...
Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи." в случае неудачи.

Описание:
Функция позволяет изменить значение компонента с номером itemNumb в колонке с но"
мером colNumb.
Если в колонке содержатся данные типа Запись, она может содержать несколько компо"
нентов. При этом itemNumb может быть не равен 1.
Значение параметра typeVal " может лежать в интервале CHAR_ATTR_TYPE
...STRING_ATTR_TYPE (см. ltdefine.h). Если typeVal== STRING_ATTR_TYPE, то val " строка
char[MAX_TEXT_LENGTH].
Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации ksSpcObjectCreate; или ksSpcObjectEdit;
.....
ksSpcChangeValue();
.....
reference spsObj = ksSpcObjectEnd();
Примечание.
При использовании Unicode следует использовать функцию ksSpcChangeValueW.

ksSpcChangeValueW  Изменить значение 
компоненты с указанным номером в указанной 
колонке (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcChangeValue.
Синтаксис:
int ksSpcChangeValueW (unsigned int colNumb, 
unsigned int itemNumb, 
void* val, 
unsigned char typeVal);
Входные параметры:
4614



colNumb " номер колонки, начиная с единицы,
itemNumb " номер компоненты, начиная с 1,
val " указатель на значение,
typeVal " тип данных.

Типы данных...
Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Описание:
Функция позволяет изменить значение компоненты с номером itemNumb в колонке с но"
мером colNumb.
Если в колонке содержатся данные типа Запись, она может содержать несколько компо"
нент. При этом itemNumb может быть не равен 1.
Значение параметра typeVal " может лежать в интервале CHAR_ATTR_TYPE
...STRING_ATTR_TYPE (см. ltdefine.h). Если typeVal== STRING_ATTR_TYPE, то val " строка
wchar_t[MAX_TEXT_LENGTH].
Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации ksSpcObjectCreate; или ksSpcObjectEdit;
.....
ksSpcChangeValueW();
.....
reference spsObj = ksSpcObjectEnd();
Примечание.
При использовании ANSI следует использовать функцию ksSpcChangeValue.

ksSpcCount  Установить количество деталей для 
определенного исполнения
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcCount.
Синтаксис:
int ksSpcCount (unsigned char ispoln, char * sCount);
Входные параметры:

ispoln " номер исполнения, начиная с 1,
sCount " количество деталей.

Возвращаемое значение:
4615



1 " в случае удачного завершения (если в объекте существует 
колонка с типом Количество),

0 " в случае неудачи.

Примечание:

1.  Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации.
ksSpcObjectCreate или ksSpcObjectEdit;
.....
ksSpcCount(...);
.....
reference spsObj = ksSpcObjectEnd();

2.  При использовании Unicode следует использовать функцию ksSpcCountW.

ksSpcCountW  Установить количество деталей для 
определенного исполнения (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcCount.
Синтаксис:
int ksSpcCountW (unsigned char ispoln, LPWSTR sCount);
Входные параметры:

ispoln " номер исполнения, начиная с 1,
sCount " количество деталей.

Возвращаемое значение:

1 " в случае удачного завершения (если в объекте существует 
колонка с типом Количество).

0 " в случае неудачи.

Примечание:

1.  Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации.
ksSpcObjectCreatek или ksSpcObjectEdit;
.....
ksSpcCountW(...);
.....
reference spsObj = ksSpcObjectEnd();

2.  При использовании ANSI следует использовать функцию ksSpcCount.
4616



ksSpcDocLinksClear  Удалить связки с документом
владельцем объекта спецификации
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcDocLinksClear.
Синтаксис:
int ksSpcDocLinksClear( reference doc );
Входные параметры:

doc " указатель на документ"источник объекта спецификации 
(графический, 3D, спецификация).

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Функция удаляет связки документа"источника объекта спецификации (графический, 3D,
спецификация) с документом"владельцем объекта спецификации;
Если doc = 0, то документом"источником объекта спецификации считается текущий до"
кумент.

ksSpcDocLinksClearEx  Удалить связки документа
источника с документомвладельцем объекта 
спецификации
Синтаксис:
int LIB_FUNC ksSpcDocLinksClearEx( reference pDoc, int mode);
Входные параметры:

doc " указатель на документ"источник объекта спецификации 
(графический, 3D, спецификация),

mode " режим удаления ссылок.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:

1.  Функция удаляет связки документа"источника объекта спецификации (графический,
3D, спецификация) с документом"владельцем объекта спецификации.

2.  Если doc = 0, то документом"источником объекта спецификации считается текущий до"
кумент.
4617



3.  Если mode = 1, то удаляются все ссылки.
4.  Если mode = 0, то удаляются ссылки на не найденные файлы.

ksSpcIncludeReference  Добавить или изменить 
геометрию или линиивыноски в объекте 
спецификации
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/1182_135_5_1_Vkljuchenie_geomet.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcIncludeReference.
Синтаксис:
int ksSpcIncludeReference (reference obj, unsigned char clear);
Входные параметры:

obj " группа объектов или объект вида,
clear " признак обработки существующей геометрии объекта спецификации:

0 " добавить новые объекты к существующей геометрии,
1 " удалить геометрию, 
2 " очистить список линий выносок.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:
Если obj == 0 и clear == 0, очищается список объектов и список линий выносок.

ksSpcMassa  Установить массу детали
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcMassa.
Синтаксис:
int ksSpcMassa (char * sMassa);
Выходной параметр:

sMassa " строка с массой детали.

Возвращаемое значение:
4618



1 " в случае удачного завершения (если в объекте существует 
колонка с типом Масса),

0 " в случае неудачи.

Примечание:

1.  Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации.
ksSpcObjectCreate или ksSpcObjectEdit;
.....
ksSpcMassa(...);
.....
reference spsObj = ksSpcObjectEnd();

2.  При использовании Unicode следует использовать функцию ksSpcMassaW.

ksSpcMassaW  Установить массу детали (Unicode)
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcMassa.
Синтаксис:
int ksSpcMassaW ( LPWSTR sMassa );
Выходной параметр:

sMassa " строка с массой детали.

Возвращаемое значение:

1 " в случае удачного завершения (если в объекте существует 
колонка типа Масса),

0 " в случае неудачи.

Примечание:

1.  Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации.
ksSpcObjectCreate или ksSpcObjectEdit;
.....
ksSpcMassaW(...);
.....
reference spsObj = ksSpcObjectEnd();

2.  При использовании ANSI следует использовать функцию ksSpcMassa.
4619



ksSpcObjectCreate  Создать объект спецификации в 
графическом документе
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/1195_136_1_Sozdanie_obwektov_sp.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcObjectCreate.
Синтаксис:
int  ksSpcObjectCreate (char * nameLib,
unsigned int styleNumb,
unsigned short secNumb,  
unsigned short subSecNumb,
double numb,
unsigned char typeObj);
Входные параметры:

nameLib  " имя библиотеки стилей спецификации,
styleNumb " номер стиля спецификации в библиотеке,
secNumb " номер раздела,
subSecNumb " номер подраздела,
numb " для базового объекта " тип атрибута, который задан по 

ключам, или 0,
для вспомогательного объекта " номер базового объекта, 
к которому прикрепляется вспомогательный, либо 0,

typeObj " тип строки спецификации
(0" базовый объект,
1 – вспомогательный объект).

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:

1.  Объект спецификации " составной объект. Его создание завершается функцией
ksSpcObjectEnd.

2.  При использовании Unicode следует использовать функцию ksSpcObjectCreateW.
4620



ksSpcObjectCreateW  Создать объект спецификации 
в графическом документе (Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/1195_136_1_Sozdanie_obwektov_sp.htm
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcObjectCreate.
Синтаксис:
int  ksSpcObjectCreateW (LPWSTR * nameLib,
unsigned int styleNumb,
unsigned short secNumb,  
unsigned short subSecNumb,
double numb,
unsigned char typeObj);
Входные параметры:

nameLib  " имя библиотеки стилей спецификации,
styleNumb " номер стиля спецификации в библиотеке,
secNumb " номер раздела,
subSecNumb " номер подраздела,
numb " для базового объекта – тип атрибута, который задан по ключам, или 0,

для вспомогательного объекта " номер базового объекта, к которому 
прикрепляется вспомогательный, либо 0,

typeObj " тип объекта спецификации
(0" базовый объект,
1 – вспомогательный объект).

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:

1.  Объект спецификации " составной объект. Его создание завершается функцией
ksSpcObjectEnd.

ksSpcObjectEdit  Редактировать объект 
спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcObjectEdit.
Синтаксис:
4621



int  ksSpcObjectEdit (reference spcObj);
Входной параметр:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:

1.  После вызова данного метода у объекта можно изменить атрибуты, геометрию, линии
выноски, позицию, массу.

2.  Редактирование объекта завершится вызовом функции ksSpcObjectEnd.

ksSpcObjectEnd  Завершить создание или 
редактирование объекта спецификации
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcObjectEnd.
Синтаксис:
reference ksSpcObjectEnd();
Возвращаемое значение:

" указатель на объект спецификации.

Примечание:

1.  Все изменения будут занесены в документ.
2.  Если объект новый, он подключается к соответствующему описанию спецификации те"

кущего документа.

ksSpcPosition  Установить номер позиции
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcPosition.
Синтаксис:
int ksSpcPosition (unsigned short pos);
Входной параметр:

pos " номер позиции.

Возвращаемое значение:
4622



1 " в случае удачного завершения (если в объекте существует 
колонка с типом Позиция),

0 " в случае неудачи.

Примечания:
Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации, например:
ksSpcObjectCreate(...); или ksSpcObjectEdit(...);
..... 
ksSpcPosition(...);
..... 
reference spsObj = ksSpcObjectEnd();

ksSpcVisible  Установить признак видимости 
компонента
Пример...
Аналог данной функции при использовании Automation " метод
ksSpecification::ksSpcVisible.
Синтаксис:
int ksSpcVisible (unsigned int colNumb, 
unsigned int itemNumb, 
unsigned char flagOn);
Входные параметры:

colNumb " номер колонки, начиная с единицы,
itemNumb " номер компоненты, начиная с единицы,
flagOn " признак видимости компонента:

1 "включить, 
0" выключить.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:

1.  Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации.

2.  В случае записи в колонке может быть несколько компонент и itemNumb может быть не
равен 1.
4623



ksSpecificationOnSheet  Включить или выключить 
показ спецификации на листе чертежа
Справка системы КОМПАС...
KOMPAS.chm::/CM_SHEETSPC.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksSpecificationOnSheet.
Синтаксис:
int ksSpecificationOnSheet (unsigned char onSheet);
Входной параметр:

onSheet " признак размещения спецификации на листе
1 " включено, 
0 " выключено.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Функции работы с документами
Общие функции позволяют выполнять операции с документами " создавать, открывать,
сохранять и т.п., а также управлять его печатью.
Функции навигации по объектам обеспечивают обработку объектов чертежа " поиск объ"
екта по характерной точке, вычисление его габаритов, а также навигацию по графиче"
ской модели чертежа. Использование функций работы с моделью позволяет проводить
специализированную обработку изображения (например, перебрать все объекты вида и
выдать их во внешний файл специального формата).
Атрибут " дополнительная информация произвольной структуры, сохраняемая с любым
объектом чертежа, начиная от отрезка и заканчивая видом, штампом или техническими
требованиями. Каждый объект может иметь произвольное количество атрибутов. Опи"
сания типов атрибутов могут храниться как отдельной специальной библиотеке, так и в
конкретном чертеже. Атрибуты используются для хранения в чертеже негеометрической
информации с целью ее дальнейшей обработки в конкретном приложении. Функции ра"
боты с атрибутами позволяют обрабатывать атрибуты объектов.
Функции обработки параметрических переменных и параметрических связей обеспечи"
вают работу с параметрическими переменными в графическом документе.
Функции работы с настройками и стилями документа позволяют получать и изменять на"
стройки системы, документа и примененные стили.
4624



Общие функции
CreateDocument  Создать документ (чертеж, 
фрагмент, текстовый документ, деталь, сборку)
Пример...
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksCreateDocument.
Синтаксис:
reference LIB_FUNC CreateDocument (DocumentParam * par);
Выходной параметр:

par " указатель на структуру параметров документа DocumentParam.

Возвращаемое значение:

указатель на документ " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Документ может быть открыт как в видимом режиме, так и в невидимом (в этом случае
документ не виден на экране, и все операции над ним скрыты от пользователя).

2. Созданный документ автоматически становится текущим.
3. Документ не будет создан в случае, если уже открыт документ с таким же именем.
4. При использовании Unicode следует использовать функцию CreateDocumentW.

CreateDocumentW  Создать документ (чертеж, 
фрагмент, текстовый документ, деталь, сборку) 
(Unicode)
Пример...
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksCreateDocument.
Синтаксис:
reference LIB_FUNC CreateDocumentW (DocumentParamW * par);
Выходной параметр:

par " указатель на структуру параметров документа DocumentParamW.

Возвращаемое значение:

указатель на документ " в случае успешного завершения,
0 " в случае неудачи.
4625



Примечание:

1.  Документ может быть открыт как в видимом режиме, так и в невидимом (в этом случае
документ не виден на экране и все операции над ним скрыты от пользователя).

2. Созданный документ автоматически становится текущим.
3. Документ не будет создан в случае, если уже открыт документ с таким же именем.
4. При использовании ANSI следует использовать функцию CreateDocument.

OpenDocument  Открыть документ (чертеж, 
фрагмент, спецификацию, текстовый документ, 
деталь, сборку)
 Пример...

Справка системы КОМПАС...
KOMPAS.chm::/Glava_13_Otkritie_zakritie_dok.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksOpenDocument.
Синтаксис:
reference OpenDocument (char *name, unsigned char regim);
Входные параметры:

regim режим работы с документом:
0 " видимый, 
1 " невидимый ("слепой")
3 " для спецификации " видимый без синхронизации со сборкой,
4 " для спецификации " "слепой" без синхронизации со сборкой.

Выходные параметры:

name " полное имя файла открываемого документа,

Возвращаемое значение:

указатель на документ " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Невидимый режим применяется при пакетном (скрытом) формировании документа.
2. Открытый документ автоматически становится текущим.
3. При использовании Unicode следует использовать функцию OpenDocumentW.
4626



OpenDocumentW  Открыть документ (чертеж, 
фрагмент, спецификацию, текстовый документ, 
деталь, сборку) (Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/Glava_13_Otkritie_zakritie_dok.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksOpenDocument.
Синтаксис:
reference LIB_FUNC OpenDocumentW (LPWSTR name, unsigned char regim);
Входные параметры:

regim " режим работы с документом:
0 " видимый, 
1 " невидимый ("слепой")
3 " для спецификации " видимый без синхронизации со сборкой,
4 " для спецификации " "слепой" без синхронизации со сборкой.

Выходные параметры:

name " полное имя файла открываемого документа.

Возвращаемое значение:

указатель на документ " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Невидимый режим применяется при пакетном (скрытом) формировании документа.
2. Открытый документ автоматически становится текущим.
3. При использовании ANSI следует использовать функцию OpenDocument.

CloseDocument  Закрыть документ (чертеж, 
фрагмент, спецификацию, текстовый документ, 
деталь, сборку)
 Пример...
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksCloseDocument.
Синтаксис:
int CloseDocument (reference sheet);
Входные параметры:
4627



sheet " указатель на закрываемый документ.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Если sheet = 0, закрывается текущий документ.
2. Если документ не сохранен, взводится флаг соответствующей ошибки.

SaveDocument  Сохранить документ (чертеж, 
фрагмент, спецификацию, текстовый документ, 
деталь, сборку)
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/Glava_12_Sozdanie_sohranenie_dok.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksSaveDocument.
Синтаксис:
int SaveDocument (reference sheet, 
char * fileName);
Входные параметры:

sheet " указатель на сохраняемый документ.

Выходные параметры:

fileName " полное имя файла, в котором требуется сохранить документ.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Если sheet = 0, сохраняется текущий документ.
2. Если fileName " NULL, используется имя файла из документа (т.е. параметр fileName

определяет имя файла при сохранении в режиме Save As...). Если и в документе имя
файла также NULL, появляется ошибка.
4628



SaveDocumentEx  Сохранить документ в выбранной 
версии
Справка системы КОМПАС...
KOMPAS.chm::/Glava_12_Sozdanie_sohranenie_dok.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksSaveDocumentEx.
Синтаксис:
int SaveDocumentEx (reference doc, char * fileName, int version);
Входные параметры:

doc " указатель на документ,
fileName " полное имя файла,
version " версия для сохранения:

"1 " в предыдущую версию,
0 " в текущую версию,
1 " в версию 5.11.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Если doc = 0, метод сохраняет текущий документ.
2. Если fileName = NULL, то используется имя файла из документа. Если же и в документе

отсутствует имя файла, то взводится ошибка.
3. При использовании Unicode следует использовать функцию SaveDocumentExW.

SaveDocumentExW  Сохранить документ в 
выбранной версии (Unicode)
Справка системы КОМПАС...
KOMPAS.chm::/Glava_12_Sozdanie_sohranenie_dok.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksSaveDocumentEx.
Синтаксис:
int LIB_FUNC SaveDocumentExW (reference doc, LPWSTR fileName, int version);
Входные параметры:

doc " указатель на документ,
fileName " полное имя файла,
4629



version " версия для сохранения:
"1 " в предыдущую версию,
0 " в текущую версию,
1 " в версию 5.11.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Если doc = 0, метод сохраняет текущий документ.
2. Если fileName = NULL, то используется имя файла из документа. Если же и в документе

отсутствует имя файла, то взводится ошибка.
3. При использовании ANSI следует использовать функцию SaveDocumentEx.

GetDocOptions  Получить настройки документа
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SID_SETUP_HELP_ID.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksGetDocOptions.
Синтаксис:
int GetDocOptions (int optionsType void * param, int sizePar);
Входной параметр:

optionsType " тип настройки,
sizePar " размер структуры параметров.

Выходной параметр:

param " указатель на структуру параметров.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Соответствие входных и выходных параметров...
Примечание:
Функция позволяет получить настройки текущего документа (в настоящее время фун"
кция реализована только для настроек размеров) и заполнить ими соответствующую
структуру.
4630



SetDocOptions  Задать настройки документа
Пример...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SID_SETUP_HELP_ID.htm
Аналог данной функции при использовании Automation " метод
ksDocument2D::ksSetDocOptions.
Синтаксис:
int SetDocOptions (int optionsType void * param, int sizePar);
Входной параметр:

optionsType " тип настройки,
sizePar " размер структуры параметров.

Выходной параметр:

param " указатель на структуру параметров.

