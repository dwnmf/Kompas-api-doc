double attrTypeNumb);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
part " указатель на интерфейс добавляемого компонента ksPart,
first " 1 "первый объект, 0 " следующий объект,
section " номер раздела, в котором нужно найти объект (0 " номер не 

ограничивается),
attrTypeNumb " номер типа атрибута, для которого нужно найти объект (0 " номер не 

ограничивается).

Возвращаемое значение:

" указатель на объект спецификации.

Синтаксис COM:
ISpecification3D::GetSpcObjForGeomWithLimit

D3GetSpcObjGeometry  Получить деталь или подсборку, 
подключенную к объекту спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksD3GetSpcObjGeometry.
Синтаксис Automation:
LPDISPATCH D3GetSpcObjGeometry (long spcObj);
Входные параметры:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

Указатель на интерфейс ksPart " в случае успешного завершения,
0 " если деталь не подключена или в случае ошибки

D3SpcIncludePart  Добавить или изменить трехмерный 
компонент (деталь или подсборку) в объекте спецификации
Интерфейс...
3566



Справка системы КОМПАС...
KOMPAS.chm::/CM_SPC_SELECTOBJECT.htm
Аналог данного метода при использовании API экспортных функций " D3SpcIncludePart.
Синтаксис Automation:
BOOL D3SpcIncludePart (LPDISPATCH part, VARIANT_BOOL fillTexts);
Входные параметры:

part " указатель на интерфейс компонента ksPart,
fillTexts " признак автоматического заполнения: наименование, обозначение, 

масса из свойств ksPart:
TRUE " автозаполнение включено, 
FALSE " выключено.

Возвращаемое значение:

TRUE " в случае удачного завершения.

Синтаксис COM:
ISpecification3D::SpcIncludePart
Примечание:
Если при подключении компонента присылается флаг fillTexts = true, в объекте специфи"
кации взводится флаг ISpecificationBaseObject::SyncronizeWithProperties.

GetSpcObjectColumnTextEx  Получить текст объекта 
спецификации для определенного типа колонки и 
исполнения в виде динамического массива TEXT_LINE_ARR
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjectColumnTextEx.
Синтаксис Automation:
LPDISPATCH ksGetSpcObjectColumnTextEx (long spcObj, long columnType, long ispoln, long
block);
Входные параметры:

spcObj " указатель на объект спецификации,
columnType " тип колонки, SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln " номер колонки данного типа начиная с 1,
block " номер блока,

если block = 0, то количество исполнений меньше количества 
исполнений в бланке спецификации (для групповой спецификации 
2.113"75 количество исполнений меньше 10).
3567



Возвращаемое значение:

указатель на интерфейс ksDynamicArray " в случае успеха,
0 " в случае неудачи.

GetSpcObjectNotify  Получить источник событий для объекта 
спецификации
Интерфейс...
Синтаксис Automation:
SpcObjectNotify* GetSpcObjectNotify();
Возвращаемое значение:

" указатель на интерфейс источника событий
SpcObjectNotify.

ksAddSpcDescription  Добавить описание спецификации в 
указанный графический документ
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данного метода при использовании API экспортных функций "
ksAddSpcDescription.
Синтаксис Automation:
long ksAddSpcDescription (LPDISPATCH param);
Входной параметр:

param " указатель на интерфейс параметров описа"
ния спецификации ksSpcDescrParam,

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

ksDeleteSpcDescription  Удалить параметры описания 
спецификации в указанном графическом документе
Интерфейс...
3568



Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данного метода при использовании API экспортных функций "
ksDeleteSpcDescription.
Синтаксис Automation:
long ksDeleteSpcDescription (long index);
Входной параметр:

index " индекс (номер) описания спецификации в документе.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

ksEditWindowSpcObject  Запустить окно редактирования для 
объекта спецификации, существующего в графическом 
документе
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksEditWindowSpcObject.
Синтаксис Automation:
long ksEditWindowSpcObject (long obj);
Входной параметр:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

1 " в случае удачного завершения.

Примечание:
Метод запускает процесс. Так как сиcтема   может работать только с одним процессом,
то нужно завершить другие "процессные" функции: ksDocument2D::ksCursor,
ksDocument2D::ksPlacement, ksDocument2D::ksCommandWindow,
ksDocument2D::ksEditViewObject, ksDocument2D::ksCreateViewObject.

ksGetCurrentSpcObject  Получить указатель текущего 
(выделенного или редактируемого) объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetCurrentSpcObject.
3569



Синтаксис Automation:
long ksGetCurrentSpcObject();
Возвращаемое значение:

указатель на текущий объект " в случае успеха,
0 " в случае неудачи.

Примечание:
Метод работает для видимых таблиц спецификации.

ksGetSpcPropertyFill  Получить флаг Синхронизировать со 
свойствами компонента
Интерфейс...
Синтаксис Automation:
BOOL ksGetSpcPropertyFill( long spcObj );
Входные параметры:

 spcObj " указатель на объект спецификации.

Возвращаемое значение:

Значение флага " cинхронизировать со свойствами компонента.

ksSetSpcPropertyFill  Установить флаг Синхронизировать со 
свойствами компонента
Интерфейс...
Синтаксис Automation:
BOOL ksGetSpcPropertyFill( long spcObj, long val );
Входные параметры:

spcObj " указатель на объект спецификации,
val " 1 включить синхронизацию, 0 " выклю"

чить синхронизацию.

Возвращаемое значение:

TRUE " в случае удачного завершения,
FALSE " в случае неудачи.
3570



ksGetSpcColumnNumb  Получить номер колонки для данного 
объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcColumnNumb.
Синтаксис Automation:
long ksGetSpcColumnNumb (long spcObj, 
long columnType, 
long ispoln, 
long block);
Входные параметры:

spcObj " указатель на объект спецификации,
columnType " тип колонки,
ispoln " номер колонки данного типа, начиная с 1,
block " номер блока исполнений.

Возвращаемое значение:

" номер колонки спецификации.

Типы колонок спецификации...

ksGetSpcColumnType  Получить параметры колонки по ее 
номеру для данного объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcColumnType.
Синтаксис Automation:
long ksGetSpcColumnType (long spcObj, 
long colNumb, 
LPDISPATCH par);
Входные параметры:

spcObj " указатель на объект спецификации,
colNumb " номер колонки, начиная с 1.

Выходной параметр:

par " указатель на интерфейс параметров колонки
ksSpcColumnParam.
3571



Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Типы колонок спецификации... 
Примечание:
Если количество исполнений больше числа колонок Количество в бланке спецификации,
то недостающие колонки исполнений "пристыкованы" справа от видимых в таблице ко"
лонок, затем "пристыкованы" дополнительные колонки

ksGetSpcDescription  Получить указатель на интерфейс 
параметров описания спецификации для указанного 
документа
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данного метода при использовании API экспортных функций "
ksGetSpcDescription.
Синтаксис Automation:
long ksGetSpcDescription (long index, 
LPDISPATCH param, 
BOOL* state);
Входной параметр:

index " индекс (номер) описания спецификации в документе ("1 " текущее описание).

Выходные параметры:

param " указатель на интерфейс ksSpcDescrParam параметров описания 
спецификации,

state " состояние описания спецификации:
TRUE " текущее, 
FALSE " не текущее.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Для документа"спецификации параметр index не используется.
3572



ksGetSpcObjForGeom  Получить указатель на объект 
спецификации, подключенный к данному графическому 
объекту
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjForGeom.
Синтаксис Automation:
long ksGetSpcObjForGeom (BSTR nameLib, 
long numb, 
long obj, 
short equal, 
short first);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
obj " указатель на графический объект или группу объектов (0 " 

макроэлемент редактирования),
equal " признак вхождения геометрии в состав объекта:

1 " геометрия идентична геометрии объекта спецификации, 
0 " геометрия входит в объект спецификации,

first " 1 "первый объект, 0 " следующий объект.

Возвращаемое значение:

" указатель на объект спецификации.

Примечания:

1. Данный метод " только для графических документов.
2. В настоящий момент метод реализован только для equal = 1.

ksGetSpcObjForGeomWithLimit  Получить указатель на 
объект спецификации, подключенный к данному 
графическому объекту с ограничениями по номеру раздела 
и типу атрибута
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjForGeomWithLimit.
Синтаксис Automation:
long ksGetSpcObjForGeomWithLimit (BSTR nameLib, 
long numb, 
3573



long obj, 
short equal, 
short first, 
long section, 
double attrTypeNumb);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
obj " указатель на графический объект или группу объектов (0 " 

макроэлемент редактирования),
equal " признак вхождения геометрии в состав объекта:

1 " геометрия идентична геометрии объекта спецификации, 
0 " геометрия входит в объект спецификации,

first " 1 " первый объект, 0 " следующий объект,
section " номер раздела, в котором нужно найти объект (0 " номер не 

ограничивается),
attrTypeNumb " номер типа атрибута, для которого нужно найти объект (0 " номер не 

ограничивается).

Возвращаемое значение:

" указатель на объект спецификации.

Примечания:

1. Данный метод " только для графических документов.
2. В настоящий момент метод реализован только для equal = 1.

ksGetSpcObjGeometry  Получить деталь или подсборку, 
подключенную к объекту спецификации
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1183_135_5_3_Prosmotr_geometrii.htm
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjGeometry.
Синтаксис Automation:
long ksGetSpcObjGeometry (long spcObj);
Входные параметры:

spcObj " указатель на объект спецификации.

Возвращаемое значение:
3574



указатель на группу " в случае успешного завершения,
0 " в случае, если геометрия не подключена или в случае ошибки.

ksGetSpcObjGeometryEx  Получить деталь или подсборку, 
подключенную к объекту спецификации
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1183_135_5_3_Prosmotr_geometrii.htm
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjGeometryEx.
Синтаксис Automation:
long ksGetSpcObjGeometryEx (long spcObj, long geomMode);
Входные параметры:

spcObj " указатель на объект спецификации,
geomMode 0 " только геометрия;

1 " только линии выноски;
2 " геометрия и линии выноски.

Возвращаемое значение:

указатель на группу " в случае успешного завершения,
0 " в случае, если геометрия не под"

ключена или в случае ошибки.

ksGetSpcObject  Получить указатель на объект 
спецификации по номеру
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksGetSpcObject.
Синтаксис Automation:
long ksGetSpcObject (double objNumb);
Входной параметр:

objNumb " уникальный номер объекта спецификации.

Возвращаемое значение:
3575



" указатель на объект спецификации.

ksGetSpcObjectAttributeNumber  Получить номер атрибута 
объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjectAttributeNumber.
Синтаксис Automation:
double ksGetSpcObjectAttributeNumber ( long spcObj );
Входные параметры:

spcObj " объект спецификации.

Возвращаемое значение:

" номер атрибута.

Примечания:
Если spcObj = 0, то возвращается номер редактируемого в текущий момент
объекта спецификации, т.е. внутри блока:
ksSpcObjectEdit(...);
ksGetSpcObjectAttributeNumber(...);
ksSpcObjectEnd();

ksGetSpcObjectColumnText  Получить строку с текстом из 
определенной колонки объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjectColumnText.
Синтаксис Automation:
BSTR ksGetSpcObjectColumnText (long spcObj, 
long columnType, 
long ispoln, 
long block);
Входные параметры:

spcObj " указатель на объект спецификации,
3576



columnType " тип колонки,
ispoln " номер колонки данного типа, начиная с 1,
block " номер блока исполнений, начиная с 0 (если количество исполнений 

больше числа колонок типа Количество).
Типы колонок спецификации...
Возвращаемое значение:

" строка с текстом из колонки.

ksGetSpcObjectColumnTextAlign  Получить выравнивание 
для текста колонки объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjectColumnTextAlign.
Синтаксис Automation:
long ksGetSpcObjectColumnTextAlign( long spcObj,
long columnNumber,
long lineIndex );
Входной параметр:

spcObj " указатель на объект спецификации,
columnNumber " номер колонки, начиная с 1,
lineIndex " индекс строки текста.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:
Значение переменной align может принимать значения:

▼  0 " Выравнивание влево;
▼  1 " Выравнивание по центру;
▼  2 " Выравнивание вправо; 
▼  3 " Выравнивание по ширине.

ksGetSpcObjectNumber  Получить уникальный номер 
объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjectNumber.
3577



Синтаксис Automation:
double ksGetSpcObjectNumber (long spcObj);
Входной параметр:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

" уникальный номер объекта спецификации.

ksGetSpcObjectSummaryCount  Получить суммарное 
количество для одинаковых объектов
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1218_139_2_Podschet_summy_znach.htm
Аналог данного метода при использовании API экспортных функций "
ksGetSpcObjectSummaryCount.
Синтаксис Automation:
double ksGetSpcObjectSummaryCount(long spcObj,
long ispoln,
long blockNumber );
Входные параметры:

spcObj " объект спецификации,
ispoln " номер колонки типа "количество", начиная с 1 (актуально 

для СП типа Б ),
blockNumber " номер блока, начиная с 0 ( актуально для СП типа A).

Возвращаемое значение:

" cуммарное количество.

ksGetSpcPerformanceName  Получить отображаемое имя 
исполнения
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcPerformanceName.
Синтаксис Automation:
3578



BSTR ksGetSpcPerformanceName( long index,
long ispoln,
long block );
Входные параметры:

index " индекс описания СП в документе,
ispoln " номер колонки типа "количество", начиная с

1 (актуально для СП типа Б),
blockNu " номер блока, начиная с 0 (актуально для СП
mber типа A).

Возвращаемое значение:

имя исполнения " в случае успешного завершения,
FALSE " в случае, если геометрия не под"

ключена или в случае ошибки.

ksGetSpcSectionName  Получить название раздела 
спецификации по указателю на объект спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcSectionName.
Синтаксис Automation:
BSTR ksGetSpcSectionName (long spcObj);
Входной параметр:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

" строка с названием раздела спецификации.

ksGetSpcStyleParam  Получить указатель на интерфейс 
параметров ksSpcStyleParam или ksSpcTuningStyleParam для 
указанного стиля спецификации
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_LIB_STYLE_DIALOG.htm
Аналог данного метода при использовании API экспортных функций "
ksGetSpcStyleParam.
3579



Синтаксис Automation:
long ksGetSpcStyleParam (BSTR nameLib, 
long numb, 
LPDISPATCH par, 
long tPar);
Входные параметры:

nameLib " имя библиотеки стилей спецификаций
(NULL " параметры берутся у текущего доку"
мента),

numb " номер стиля спецификации в библиотеке,
tPar " тип возвращаемых параметров.

Выходной параметр:

par " указатель на интерфейс параметров
ksSpcStyleParam или ksSpcTuningStyleParam.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
tPar = ALLPARAM " интерфейс ksSpcStyleParam,
tPar = SPC_TUNING_PARAM " интерфейс ksSpcTuningStyleParam.

ksGetSpcTableColumn  Получить количество колонок для 
стиля спецификации в текущем документе
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetSpcTableColumn.
Синтаксис Automation:
long ksGetSpcTableColumn (BSTR nameLib, 
long numb, 
short additioanalCol);
Входные параметры:

nameLib " имя библиотеки стилей спецификаций,
numb " номер стиля в библиотеке,
3580



additioanalCol " признак колонок: 
0 " видимые колонки таблицы спецификации, 
1 " дополнительные колонки.

Возвращаемое значение:

" количество колонок для стиля спецификации в
текущем документе.

Примечания:

1. Если документ " спецификация, то параметры nameLib и numb не используются.
2. Если количество исполнений больше числа колонок "количество" в бланке специфика"

ции, то количество колонок выдается с учетом всех исполнений.

ksGetTuningSpcStyleParam  Получить параметры настройки 
спецификации документа
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1300_Glava145_Stilq_specifikaci.htm
Аналог данного метода при использовании API экспортных функций "
ksGetTuningSpcStyleParam.
Синтаксис Automation:
long ksGetTuningSpcStyleParam (long index, LPDISPATCH par);
Входные параметры:

index " индекс описания спецификации в документе,
par " указатель на интерфейс ksSpcTuningStyleParam структуры 

параметров настроек спецификации.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Если index = "1, то для текущего описания спецификации.
2. Для документа спецификации настройки можно изменить всегда.
3. Для графического документа в случае, если документ подключен к спецификации или

включен режим "Спецификация на листе".
4. Для документа трехмерного объекта в случае, если документ подключен к специфика"

ции.
3581



ksGetWidthColumnSpc  Получить ширину колонки или текста 
в колонке
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetWidthColumnSpc.
Синтаксис Automation:
double ksGetWidthColumnSpc (long numColumn, BOOL cellOrText);
Входные параметры:

numColumn " номер колонки,
cellOrText " признак объекта, ширину которого требует"

ся узнать:
TRUE " колонка,
FALSE " текст в колонке.

Возвращаемое значение:

" ширина колонки или текста в колонке.

ksSetCurrentSpcObject  Установить текущий объект 
спецификации либо по указателю на него, либо по его 
индексу
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksSetCurrentSpcObject.
Синтаксис Automation:
long ksSetCurrentSpcObject (long spcObj,
long index);
Входные параметры:

spcObj " указатель на объект,
index " индекс объекта.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод работает для видимых таблиц спецификации.
3582



ksSetSpcDescription  Установить указатель на интерфейс 
параметров описания спецификации для указанного 
документа
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/DLG_SPC_DESCRIBE.htm
Аналог данного метода при использовании API экспортных функций "
ksSetSpcDescription.
Синтаксис Automation:
long ksSetSpcDescription (long index, 
LPDISPATCH param, 
short state);
Входные параметры:

index " индекс (номер) описания спецификации в документе ("1 " текущее 
описание),

param " указатель на интерфейс параметров описания спецификации 
ksSpcDescrParam,

state " состояние описания спецификации:
TRUE " текущее, 
FALSE " не текущее.

Возвращаемое значение:

1 " в случае удачного завершения.

Примечания:

1. Метод изменяет параметры описания спецификации и/или делает его активным, если
state = TRUE.

2. Если param = NULL " меняется только состояние.
3. Для документа"спецификации параметр index не используется.

ksSetSpcObjectAttributeNumber  Установить номер атрибута 
объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksSetSpcObjectAttributeNumber.
Синтаксис Automation:
BOOL ksSetSpcObjectAttributeNumber (long spcObj, double attrNumber );
Входные параметры:
3583



spcObj " объект спецификации,
attrNumber " номер атрибута.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи." в случае неудачи.

Примечания:
Если spcObj = 0, то возвращается номер редактируемого в текущий момент объекта спе"
цификации, т.е. внутри блока:
ksSpcObjectEdit(...);   .
ksGetSpcObjectAttributeNumber(...);
ksSpcObjectEnd();

ksSetSpcObjectColumnText  Установить текст в колонке 
определенного типа
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksSetSpcObjectColumnText.
Синтаксис Automation:
long ksSetSpcObjectColumnText (long columnType, 
long ispoln, 
long block, 
BSTR str);
Входные параметры:

colum " тип колонки,
nType
ispoln " номер колонки данного типа,
block " номер блока исполнений, начиная с 0 (если

количество исполнений больше числа колонок
типа Количество),

str " строка, из которой нужно взять текст.

Возвращаемое значение:

1 " в случае удачного завершения.
3584



ksSetSpcObjectColumnTextEx  Задать текст объекта 
спецификации для определенного типа колонки и 
исполнения
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksSetSpcObjectColumnTextEx.
Синтаксис Automation:
long ksSetSpcObjectColumnTextEx (long columnType, long ispoln, long block, LPDISPATCH
arr);
Входные параметры:

columnType " тип колонки, SPC_CLM_FORMAT...SPC_CLM_USER,
ispoln " номер колонки данного типа, начиная с 1,
block " номер блока.

если block = 0, то количество исполнений меньше количества 
исполнений в бланке спецификации (для групповой спецификации 
2.113"75 количество исполнений меньше 10),

arr " указатель на интерфейс ksDynamicArray массива строк, тип массива 
" TEXT_LINE_ARR.

Возвращаемое значение:

1 " в случае успеха,
0 " в случае неудачи.

Примечание:
Функция работает в режиме создания нового или редактирования существующего объ"
екта спецификации ksSpcObjectCreate(...); или ksSpcObjectEdit(...);.
ksSetSpcObjectColumnTextEx(...);...reference spsObj = ksSpcObjectEnd();

ksSetSpcObjectColumnTextAlign  Установить выравнивание 
для текста колонки объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksSetSpcObjectColumnTextAlign.
Синтаксис Automation:
BOOL ksSetSpcObjectColumnTextAlign ( long spcObj,
long columnNumber,
long lineIndex,
long align );
Входной параметр:

spcObj " указатель на объект спецификации.
3585



columnNumber " номер колонки, начиная с 1,
lineIndex " индекс строки текста,
align " выравнивание.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:
Значение переменной align может принимать значения:

▼  0 " Выравнивание влево;
▼  1 " Выравнивание по центру;
▼  2 " Выравнивание вправо; 
▼  3 " Выравнивание по ширине.

ksSetSpcPerformanceName  Установить отображаемое имя 
исполнения
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksSetSpcPerformanceName.
Синтаксис Automation:
BOOL ksSetSpcPerformanceName( long index,
long ispoln,
long block,
BSTR name );
Входные параметры:

Index " индекс описания СП в документе,
Ispoln " номер колонки типа Количество, начиная с

1(актуально для СП типа Б),
blockNumber " номер блока, начиная с 0 (актуально для СП

типа A),
Name " имя исполнения.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае, если геометрия не под"

ключена или в случае ошибки.
3586



ksSetTuningSpcStyleParam  Установить параметры настроек 
спецификации документа
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1300_Glava145_Stilq_specifikaci.htm
Аналог данного метода при использовании API экспортных функций "
ksSetTuningSpcStyleParam.
Синтаксис Automation:
long ksSetTuningSpcStyleParam(long index, LPDISPATCH par);
Входные параметры:

index " индекс описания спецификации в документе,
par " указатель на интерфейс ksSpcTuningStyleParam структуры 

параметров настроек спецификации.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Если index = "1, то для текущего описания спецификации.
2. Для документа спецификации настройки можно изменить всегда.
3. Для графического документа в случае, если документ подключен к спецификации или

включен режим "Спецификация на листе".
4. Для документа трехмерного объекта в случае, если документ подключен к специфика"

ции.

ksSpcChangeValue  Изменить значение компоненты с 
указанным номером в указанной колонке
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcChangeValue.
Синтаксис Automation:
long ksSpcChangeValue (long colNumb, 
long itemNumb, 
LPDISPATCH userPars, 
short typeVal);
Входные параметры:
3587



colNumb " номер колонки, начиная с единицы,
itemNumb " номер компоненты, начиная с единицы,
userPars " указатель на интерфейс ksUserParam,
typeVal " тип данных.

Типы данных..
Возвращаемое значение:

1 " в случае удачного завершения.

Примечания:

1. Метод работает в режиме создания нового или редактирования существующего объекта
спецификации.

2. Если typeVal " запись (RECORD_ATTR_TYPE), в колонке может быть несколько компонент
и itemNumb может быть не равен 1.

ksSpcCount  Установить количество деталей для 
определенного исполнения
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcCount.
Синтаксис Automation:
long ksSpcCount (short ispoln, 
BSTR sCount);
Входные параметры:

ispoln " номер исполнения, начиная с 1,
sCount " количество деталей.

Возвращаемое значение:

1 " в случае удачного завершения (если в объекте
существует колонка с типом Количество).

ksSpcDocLinksClear  Создать объект спецификации в 
графическом документе
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcObjectCreate.
Синтаксис Automation:
BOOL ksSpcDocLinksClear( long doc )
Входные параметры:
3588



doc " указатель на документ"источник объекта
спецификации (графический, 3D, специфи"
кация).

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечания:
Функция удаляет связки документа"источника объекта спецификации (графический, 3D,
спецификация) с документом"владельцем объекта спецификации;
Если doc = 0, то документом"источником объекта спецификации считается текущий до"
кумент.

ksSpcIncludeReference  Добавить или изменить геометрию 
графического объекта или линиювыноску в объекте 
спецификации
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1182_135_5_1_Vkljuchenie_geomet.htm
Аналог данного метода при использовании API экспортных функций "
ksSpcIncludeReference.
Синтаксис Automation:
long ksSpcIncludeReference (long obj, 
short clear);
Входные параметры:

obj " группа объектов или объект вида,
clear " признак обработки существующей геометрии

объекта спецификации:
1 " удалить геометрию, 
0 " добавить новые объекты к существующей
геометрии.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.
3589



ksSpcMassa  Заполнить дополнительную колонку масса для 
объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcMassa.
Синтаксис Automation:
long ksSpcMassa (BSTR sMassa);
Входной параметр:

sMassa " строка с массой детали.

Возвращаемое значение:

1 " в случае удачного завершения (если в объекте
существует колонка с типом Масса),

0 " в случае неудачи.

ksSpcObjectCreate  Создать объект спецификации в 
графическом документе
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/1195_136_1_Sozdanie_obwektov_sp.htm
Аналог данного метода при использовании API экспортных функций " ksSpcObjectCreate.
Синтаксис Automation:
long ksSpcObjectCreate (BSTR nameLib, 
long styleNumb, 
long secNumb, 
long subSecNumb, 
double numb, 
short typeObj);
Входные параметры:

nameLib  " имя библиотеки стилей спецификации,
styleNumb " номер стиля спецификации в библиотеке,
secNumb " номер раздела,
subSecNumb " номер подраздела,
numb " для базового объекта " тип атрибута, который задан по ключам, или 0,

для вспомогательного объекта " номер базового объекта, к которому 
прикрепляется вспомогательный, либо 0,
3590



typeObj " тип строки спецификации
(0" базовый объект,
1 – вспомогательный объект).

Возвращаемое значение:

1 " в случае удачного завершения.

Примечания:

1. Объект спецификации " составной объект. Его создание завершается методом
ksSpecification::ksSpcObjectEnd.

2. Для атрибутов, описанных по ключам, нужно указать тип в numb, потому что типов с оди"
наковыми ключами может быть несколько.

3. Параметры nameLib и styleNumb используются только для объектов спецификации в
графическом документе.

ksSpcObjectEdit  Запустить режим редактирования объекта 
спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcObjectEdit.
Синтаксис Automation:
long ksSpcObjectEdit (long spcObj);
Входной параметр:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечания:

1. После вызова данного метода у объекта можно изменить атрибуты, геометрию, линии
выноски, позицию, массу.

2. Редактирование объекта завершится вызовом метода ksSpecification::ksSpcObjectEnd.

ksSpcObjectEnd  Завершить создание или редактирование 
объекта спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcObjectEnd.
Синтаксис Automation:
long ksSpcObjectEnd();
3591



Возвращаемое значение:

" указатель на объект спецификации.

Примечание:
Предварительно объект спецификации должен быть открыт на редактирование, или дол"
жен быть запущен режим его создания методами ksSpecification::ksSpcObjectEdit или
ksSpecification::ksSpcObjectCreate.

ksSpcPosition  Установить номер позиции
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcPosition.
Синтаксис Automation:
long ksSpcPosition (long pos);
Входной параметр:

pos " номер позиции.

Возвращаемое значение:

1 " в случае удачного завершения (если в объекте
существует колонка с типом Позиция),

0 " в случае неудачи.

ksSpcVisible  Установить признак видимости компонента
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSpcVisible.
Синтаксис Automation:
long ksSpcVisible (long colNumb, 
long itemNumb, 
short flagOn);
Входные параметры:

colNumb " номер колонки, начиная с единицы,
itemNumb " номер компоненты, начиная с единицы,
flagOn " признак видимости компонента:

1 "включить, 
0" выключить.

Возвращаемое значение:

1 " в случае удачного завершения,
3592



0 " в случае неудачи.
Примечания:

1. Метод работает в режиме создания нового или редактирования существующего объекта
спецификации.

2. В случае записи в колонке может быть несколько компонент и itemNumb может быть не
равен 1.

Интерфейс спецификации ISpecification3D
Справка системы КОМПАС...
KOMPAS.chm::/1154_132_2_Obwekty_specifikacii.htm
Интерфейс для работы со спецификацией.
COM  интерфейс.
Примечания:

1. Для Автоматизации используется интерфейс ksSpecification.
2. Для COM используется интерфейс ISpecification3D и группа экспортных функций.
3. Указатель на интерфейс можно получить при помощи метода

IDocument3D::GetSpecification.
Смотрите также: ksDocument3D

ISpecification3D  методы

D3GetSpcObjGeometry  Получить деталь или подсборку, 
подключенную к объекту спецификации
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksD3GetSpcObjGeometry.
Синтаксис Automation:
LPPART D3GetSpcObjGeometry(long spcObj);
Входные параметры:

spcObj " указатель на объект спецификации.

Возвращаемое значение:

Указатель на интерфейс IPart " в случае успешного завершения,
0 " если деталь не подключена или в случае 

ошибки.
3593



GetSpcObjForGeomWithLimit  Получить указатель на объект 
спецификации, подключенный к трехмерному компоненту 
(детали или подсборке) с ограничениями по номеру раздела 
и типу атрибута
Интерфейс...
Синтаксис COM:
long GetSpcObjForGeomWithLimit (LPOLESTR nameLib, 
long numb, 
LPPART part, 
short first, 
short section, 
double attrTypeNumb);
Входные параметры:

nameLib " имя библиотеки стилей спецификации,
numb " номер стиля спецификации в библиотеке,
part " указатель на интерфейс добавляемого компонента IPart,
first " 1 "первый объект, 0 " следующий объект,
section " номер раздела, в котором нужно найти объект (0 " номер не 

ограничивается),
attrTypeNumb " номер типа атрибута, для которого нужно найти объект (0 " 

номер не ограничивается).

Возвращаемое значение:

" указатель на объект спецификации.

Синтаксис Automation:
D3GetSpcObjForGeomWithLimit

SpcIncludePart  Подключить трехмерный компонент (деталь 
или подсборку) к объекту спецификации
Интерфейс...
Синтаксис COM:
BOOL SpcIncludePart (LPPART part, 
BOOL fillTexts);
Входные параметры:

part " указатель на интерфейс компонента IPart,
3594



fillTexts " признак автоматического заполнения: наименование, обозначение, 
масса из свойств ksPart:
TRUE " автозаполнение включено, 
FALSE " выключено.

Возвращаемое значение:

TRUE " в случае удачного завершения.

Синтаксис Automation:
D3SpcIncludePart
Примечание:
Если при подключении компонента присылается флаг fillTexts = true, в объекте специфи"
кации взводится флаг ISpecificationBaseObject::SyncronizeWithProperties.

Интерфейс управления положением компонентов в 
сборке (Интерфейсы ksComponentPositioner, 
IComponentPositioner)
Справка системы КОМПАС...
kompas.chm::/
peremescheniya_komponentov_obzor.htm#displace_general
Интерфейс управления положением компонентов в сборке.

ksComponentPositioner " интерфейс Automation
IComponentPositioner " интерфейс COM

Описание:
Сдвиг проводится в плоскости, которая определена относительно сборки. Для сдвига
точка захвата должна быть определена в системе координат сдвигаемого компонента, а
точка сдвига должна быть в системе координат сборки и преобразована в проекцию на
плоскость сдвига. Перед началом сдвига нужно задать плоскость и точку захвата.
Вращение проводится относительно оси, которая задается относительно сборки. Перед
началом вращения нужно задать ось вращения. Это может быть ось или прямолинейное
ребро. Начало перемещения определяется вызовом метода Prepare. Окончание переме"
щения определяется вызовом метода Finish. Между ними может быть сколько угодно
вызовов MoveComponent или RotateComponent в зависимости от указанного типа пере"
мещения.
Примечание:
Данный интерфейс может быть получен с использованием метода интерфейса
ksDocument3D::ComponentPositioner.
3595



IComponentPositioner  методы

Finish  Завершить перемещение компонента
Интерфейс...
Синтаксис Automation:
BOOL Finish();
Синтаксис COM:
BOOL Finish();
Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Начало перемещения определяется вызовом метода Prepare. Между ними может быть
сколько угодно вызовов MoveComponent или RotateComponent в зависимости от указан"
ного типа перемещения.

MoveComponent  Переместить компонент
Интерфейс...

Справка системы КОМПАС...
kompas.chm::/
peremescheniya_komponentov_obzor.htm#displace_general
Синтаксис Automation:
BOOL MoveComponent (double x, double y, double z);
Синтаксис COM:
BOOL MoveComponent (double x, double y, double z);
Входные параметры:

x, y, z " координаты точки сдвига.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Перед началом сдвига нужно задать плоскость и точку захвата. Сдвиг проводится в пло"
скости, которая определена относительно сборки. Начало перемещения определяется
вызовом метода Prepare с типом pnMove. Окончание перемещения определяется вызо"
вом метода Finish. Между ними может быть сколько угодно вызовов MoveComponent.
3596



Prepare  Подготовиться к перемещению компонента
Интерфейс...
Синтаксис Automation:
long Prepare(ksPart * part, Positioner_Type positionerType);
Синтаксис COM:
long Prepare(LPPART part, Positioner_Type positionerType);
Входные параметры:

part  " указатель на интерфейс компоненты ksPart или
IPart,

positionerType " тип перемещения.

Возвращаемое значение:

0 " в случае успешного завершения,
1 " в случае неудачи.

Примечание:
Окончание перемещения определяется вызовом метода Finish. Между ними может быть
сколько угодно вызовов MoveComponent или RotateComponent в зависимости от указан"
ного типа перемещения.

RotateComponent  Повернуть компонент
Интерфейс...

Справка системы КОМПАС...
kompas.chm::/
peremescheniya_komponentov_obzor.htm#displace_general
Синтаксис Automation:
BOOL RotateComponent (double angl);
Синтаксис COM:
BOOL RotateComponent (double angl);
Входные параметры:

angl " угол поворота компоненты, рад.

Возвращаемое значение:

TRU " в случае успешного завершения,
E

3597



FAL " в случае неудачи.
SE

Примечание:
Перед началом вращения нужно задать ось вращения. Это может быть ось или прямоли"
нейное ребро. Начало перемещения определяется вызовом метода Prepare с типом
pnRotate. Окончание перемещения определяется вызовом метода Finish. Между ними
может быть сколько угодно вызовов RotateComponent.

SetAxis  Задать ось
Интерфейс...
Синтаксис Automation:
BOOL SetAxis (LPDISPATCH axis);
Синтаксис COM:
BOOL SetAxis (LPUNKNOWN axis);
Входные параметры:

axis " указатель на интерфейс конструктивной оси или пря"
молинейного ребра.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

SetAxisByPoints  Задать ось по точкам
Интерфейс...
Синтаксис Automation:
BOOL SetAxisByPoints (double x1, 
double y1, 
double z1, 
double x2, 
double y2, 
double z2);
Синтаксис COM:
BOOL SetAxisByPoints (double x1, 
double y1, 
double z1, 
double x2, 
double y2, 
double z2);
Входные параметры:
3598



x1, y1, z1 " координаты первой точки оси,
x2, y2, z2 " координаты второй точки оси.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Координаты точек, задающих ось, должны быть определены относительно сборки.

SetDragPoint  Задать точку захвата (ручка)
Интерфейс...
Синтаксис Automation:
BOOL SetDragPoint (double x, double y, double z);
Синтаксис COM:
BOOL SetDragPoint (double x, double y, double z);
Входные параметры:

x, y, z " координаты точки захвата.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Точка захвата должна быть определена в системе координат сдвигаемого компонента.

SetPlane  Задать плоскость
Интерфейс...
Синтаксис Automation:
BOOL SetPlane (LPDISPATCH plane);
Синтаксис COM:
BOOL SetPlane (LPUNKNOWN plane);
Входные параметры:

plane " указатель на интерфейс конструктивной пло"
скости или плоской поверхности.

Возвращаемое значение:
3599



ement
TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

SetPlaneByPlacement  Задать плоскость по системе 
координат
Интерфейс...
Синтаксис Automation:
BOOL SetPlaneByPlacement (ksPlacement * plane);
Синтаксис COM:
BOOL SetPlaneByPlacement (LPPLACEMENT plane);
Входные параметры:

plane  " указатель на интерфейс ksPlacement или IPlac
системы координат, задающей плоскость.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Система координат, задающая плоскость, должна быть определена относительно сбор"
ки.

SetPlaneByPoints  Задать плоскость по точкам
Интерфейс...
Синтаксис Automation:
BOOL SetPlaneByPoints (double x1,
double y1, 
double z1, 
double x2, 
double y2, 
double z2, 
double x3, 
double y3, 
double z3);
Синтаксис COM:
BOOL SetPlaneByPoints (double x1, 
double y1, 
double z1, 
double x2, 
3600



double y2, 
double z2, 
double x3, 
double y3, 
double z3);
Входные параметры:

x1, y1, z1 " координаты первой точки на плоскости,
x2, y2, z2 " координаты второй точки на плоскости,
x3, y3, z3 " координаты третьей точки на плоскости.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Координаты точек, задающих плоскость, должны быть определены относительно сбор"
ки.

Источник событий для документа модели
Document3DNotify

Параметры отображения точки, позволяющей 
определить место применения контрола (Интерфейс 
IMouseEnterLeaveParameters)
Примечание:
Интерфейс параметров используется в событии
IProcess2DNotify::GetMouseEnterLeavePoint
Версия: KOMPAS v19

IMouseEnterLeaveParameters  свойства

X  Координата X
Интерфейс...
Тип данных: double
Синтаксис Automation:

X = Object.X Получить свойство
(* )

Object.X = X Установить свойство
(* )
3601



X = Object.GetX() Получить свойст"
во(**)

Object.SetX( X ) Установить свойство
(**)

Y  Координата Y
Интерфейс...
Тип данных: double
Синтаксис Automation:

Y = Object.Y Получить свойство
(* )

Object.Y = Y Установить свойство
(* )

Y = Object.GetY() Получить свойст"
во(**)

Object.SetY( Y ) Установить свойство
(**)

Offset  Смещение символа относительно точки
Интерфейс...
Тип данных: double
Синтаксис Automation:

Offset = Object.Offset Получить свойство
(* )

Object.Offset = Offset Установить свойство
(* )

Offset = Object.GetOffset() Получить свойст"
во(**)

Object.SetOffset( Offset ) Установить свойство
(**)

OffsetAngle  Направление смещения символа 
относительно точки
Интерфейс...
Тип данных: double
Синтаксис Automation:
3602



OffsetAngle = Получить свойство
Object.OffsetAngle (* )
Object.OffsetAngle = Установить свойство
OffsetAngle (* )
OffsetAngle = Получить свойст"
Object.GetOffsetAngle() во(**)
Object.SetOffsetAngle( Установить свойство
OffsetAngle ) (**)

Symbol  Символ, отображаемый в поле документа, при 
наведении на контрол
Интерфейс...
Тип данных: long
Синтаксис Automation:

Symbol = Object.Symbol Получить свойство
(* )

Object.Symbol = Symbol Установить свойство
(* )

Symbol = Object.GetSymbol() Получить свойст"
во(**)

Object.SetSymbol( Symbol ) Установить свойство
(**)

SymbolColor  Цвет символа, отображаемого в поле 
документа, при наведении на контрол
Интерфейс...
Тип данных: long
Синтаксис Automation:

SymbolColor = Получить свойство
Object.SymbolColor (* )
Object.SymbolColor = Установить свойство
SymbolColor (* )
SymbolColor = Получить свойст"
Object.GetSymbolColor() во(**)
Object.SetSymbolColor( Установить свойство
SymbolColor ) (**)
3603



SymbolFont  Шрифт символа, отображаемого в поле 
документа, при наведении на контрол
Интерфейс...
Тип данных: BSTR
Синтаксис Automation:

SymbolFont = Получить свойство
Object.SymbolFont (* )
Object.SymbolFont = Установить свойство
SymbolFont (* )
SymbolFont = Получить свойст"
Object.GetSymbolFont() во(**)
Object.SetSymbolFont( Установить свойство
SymbolFont ) (**)

SymbolScale  Увеличение высоты символа, 
отображаемого в поле документа, при наведении на 
контрол
Интерфейс...
Тип данных: double
Синтаксис Automation:

SymbolScale = Получить свойство
Object.SymbolScale (* )
Object.SymbolScale = Установить свойство
SymbolScale (* )
SymbolScale = Получить свойст"
Object.GetSymbolScale() во(**)
Object.SetSymbolScale( Установить свойство
SymbolScale ) (**)

Синтаксис COM:
   

Object.get_SymbolScale( Получить свойство
&SymbolScale )
Object.put_SymbolScale( Установить свойство
SymbolScale )
3604



Интерфейс коллекции проекций отображения 
модели (Интерфейсы ksViewProjectionCollection, 
IViewProjectionCollection)
Справка системы КОМПАС...
kompas.chm::/674_82_4_Orientacija_modeli.htm
Интерфейс массива проекций отображения модели в окне.

ksViewProjectionCollection " интерфейс Automation
IViewProjectionCollection " интерфейс COM

Типы предопределенных проекций отображения...
Описание:
К предопределенным проекциям можно добавлять пользовательские, индексы которых
могут изменяться.
Примечание:
Получить этот интерфейс можно методом ksDocument3D::GetViewProjectionCollection,
при этом он будет автоматически заполнен проекциями, заданными в данном документе.

IViewProjectionCollection  свойства

viewProjectionScheme  Текущая схема ориентаций 
модели
Интерфейс...
Тип данных: из перечисления ksViewProjectionScheme
Синтаксис Automation:

viewProjectionScheme = Получить свойство
Object.viewProjectionScheme (* )
Object.viewProjectionScheme Установить свойство
= viewProjectionScheme (* )
viewProjectionScheme = Получить свойст"
Object.GetViewProjectionSche во(**)
me()
Object.SetViewProjectionSche Установить свойство
me( viewProjectionScheme ) (**)

IViewProjectionCollection  методы

Add  Добавить элемент в конец массива
Интерфейс...
Синтаксис Automation:
3605



BOOL Add (LPDISPATCH projection);
Синтаксис COM:
BOOL Add (LPVIEWPROJECTION projection);
Входные параметры:

projection " указатель на интерфейс ksViewProjection или
IViewProjection.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Добавить в массив можно только проекцию с индексом vp_None. После добавления про"
екция становится текущей и ей присваивается новый индекс, равный ее индексу в мас"
сиве. После добавления проекции редактирование ее параметров невозможно.

AddUnfoldProjection  Добавить проекцию отображения 
 развертка
Интерфейс...
Синтаксис Automation:
LPDISPATCH AddUnfoldProjection( VARIANT place );
Возвращаемое значение:

" указатель на интерфейс проекции
ksViewProjection.

Синтаксис COM:
LPVIEWPROJECTION AddUnfoldProjection( VARIANT * place );
Возвращаемое значение:

" указатель на интерфейс проекции
IViewProjection.

DetachByBody  Отсоединить элемент по указателю на 
интерфейс
Интерфейс...
Синтаксис Automation:
BOOL DetachByBody (LPDISPATCH projection);
3606



Синтаксис COM:
BOOL DetachByBody (LPVIEWPROJECTION projection);
Входные параметры:

projection " указатель на интерфейс ksViewProjection или
IViewProjection.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Отсоединить можно только пользовательскую проекцию, стандартные проекции не от"
соединяются.

DetachByIndex  Отсоединить элемент по индексу
Интерфейс...
Синтаксис Automation:
BOOL DetachByIndex (long index);
Синтаксис COM:
BOOL DetachByIndex (long index);
Входной параметр:

index " индекс проекции в массиве.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Отсоединить можно только пользовательскую проекцию, стандартные проекции не от"
соединяются.

DetachByName  Отсоединить элемент по имени 
проекции
Интерфейс...
Синтаксис Automation:
BOOL DetachByName (BSTR name);
Синтаксис COM:
3607



BOOL DetachByName (LPOLESTR name);
Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Отсоединить можно только пользовательскую проекцию, стандартные проекции не от"
соединяются.

FindIt  Получить индекс элемента в массиве
Интерфейс...
Синтаксис Automation:
long FindIt (LPDISPATCH projection);
Синтаксис COM:
long FindIt (LPVIEWPROJECTION projection);
Возвращаемое значение:

индекс элемента " если элемент найден в массиве,
"1 " если элемент не найден.

Входные параметры:

projection " указатель на интерфейс ksViewProjection или
IViewProjection.

First  Получить указатель на первый элемент массива
Интерфейс...
Синтаксис Automation:
LPDISPATCH First();
Синтаксис COM:
LPVIEWPROJECTION First();
Возвращаемое значение:

" указатель на интерфейс ksViewProjection или
IViewProjection.

GetByIndex  Получить указатель на элемент массива по 
индексу
Интерфейс...
3608



Синтаксис Automation:
LPDISPATCH GetByIndex (long index);
Синтаксис COM:
LPVIEWPROJECTION GetByIndex (long index);
Входной параметр:

index " индекс проекции в массиве.

Возвращаемое значение:

" указатель на интерфейс ksViewProjection или
IViewProjection.

GetByName  Получить указатель на элемент массива по 
имени
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetByName (BSTR name, BOOL testFullName, BOOL testIgnoreCase);
Синтаксис COM:
LPVIEWPROJECTION GetByName (LPOLESTR name, BOOL testFullName, BOOL
testIgnoreCase);
Входные параметры:

name " имя проекции,
testFullName " признак полного имени:

TRUE " name " полное имя, 
FALSE " имя name может быть частью полного имени,

testIgnoreCase " признак игнорирования регистра символов:
TRUE " игнорировать регистр,
FALSE " учитывать регистр.

Возвращаемое значение:

" указатель на интерфейс ksViewProjection или
IViewProjection.

GetBaseUserOrientation  Получить текущую 
пользовательскую базовую ориентацию модели
Интерфейс...
Синтаксис Automation:
 VARIANT GetBaseUserOrientation();
3609



Синтаксис COM:
 VARIANT GetBaseUserOrientation();
Возвращаемое значение:

" массив SafeAttray типа (VT_ARRAY | VT_R8).

Примечание:

1. Элементы матрицы возвращаются в виде одномерного массива из 16 элементов. Матри"
ца имеет размер 4х4.

2. Метод позволяет получить матрицу, которая может использоваться для отображения
вида спереди.

3. По умолчанию используется единичная матрица без смещения.

GetCount  Получить количество проекций в массиве
Интерфейс...
Синтаксис Automation:
long GetCount();
Синтаксис COM:
long GetCount();
Возвращаемое значение:

" количество проекций в массиве.

Last  Получить указатель на последний элемент массива
Интерфейс...
Синтаксис Automation:
LPDISPATCH Last();
Синтаксис COM:
LPVIEWPROJECTION Last();
Возвращаемое значение:

" указатель на интерфейс ksViewProjection или IViewProjection.

NewViewProjection  Добавить новую проекцию
Интерфейс...
Синтаксис Automation:
LPDISPATCH NewViewProjection();
Синтаксис COM:
3610



LPVIEWPROJECTION NewViewProjection();
Возвращаемое значение:

" указатель на интерфейс ksViewProjection или IViewProjection.

Примечание:
Проекции присваивается индекс vp_None. Созданная проекция в массив не добавляется,
для добавления в массив нужно использовать метод Add.

Next  Получить указатель на следующий элемент 
массива
Интерфейс...
Синтаксис Automation:
LPDISPATCH Next();
Синтаксис COM:
LPVIEWPROJECTION Next();
Возвращаемое значение:

" указатель на интерфейс ksViewProjection или IViewProjection.

Prev  Получить указатель на предыдущий элемент 
массива
Интерфейс...
Синтаксис Automation:
LPDISPATCH Prev();
Синтаксис COM:
LPVIEWPROJECTION Prev();
Возвращаемое значение:

" указатель на интерфейс ksViewProjection или IViewProjection.

Refresh  Обновить массив
Интерфейс...
Синтаксис Automation:
BOOL Refresh();
Синтаксис COM:
BOOL Refresh();
3611



Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Метод перезаполняет массив проекциями, заданными в документе.

SetBaseUserOrientation  Установить пользовательскую 
базовую ориентацию модели
Интерфейс...
Синтаксис Automation:
BOOL SetBaseUserOrientation(VARIANT place);
Синтаксис COM:
BOOL SetBaseUserOrientation(VARIANT * place);
Входные параметры:

plac " массив SafeAttray типа (VT_ARRAY | VT_R8).
e

Примечание:

1. Элементы матрицы возвращаются в виде одномерного массива из 16 элементов. Матри"
ца имеет размер 4х4.

2. Метод позволяет получить матрицу, которая может использоваться для отображения
вида спереди.

3. По умолчанию используется единичная матрица без смещения.

Проекции отображения модели в окне (Интерфейсы 
ksViewProjection, IViewProjection)
Справка системы КОМПАС...
kompas.chm::/674_82_4_Orientacija_modeli.htm
Интерфейс проекции отображения модели в окне.

ksViewProjection " интерфейс Automation
IViewProjection " интерфейс COM

Типы предопределенных проекций отображения...
Описание:
3612



К этим проекциям можно добавлять пользовательские, индексы которых могут изме"
няться. Свойства уже заданных в документе проекций (с индексом больше vp_None) из"
менить нельзя. Эти свойства доступны только для чтения.
Примечание:
Данный интерфейс может быть получен с использованием методов интерфейса
ksViewProjectionCollection.

IViewProjection  свойства

UserProjectionIndex Индекс проекции отображения модели 
в окне
Интерфейс...
Тип данных: long
Синтаксис Automation:

index = iViewProjection.index Получить
свойство (* )

index = iViewProjection.GetIndex() Получить
свойство
(**)

Примечание:

1. Свойство доступно только для чтения.
2. Свойство работает только для пользовательских проекций. Для получения типа проек"

ции нужно использовать метод ksViewProjection::GetViewProjectonType.

name  Имя проекции
Интерфейс...
Тип данных: BSTR
Синтаксис Automation:

name = iViewProjection.name Получить
свойство(* )

iViewProjection.name = name Установить
свойство (* )

name = iViewProjection.GetName() Получить
свойство (**)

iViewProjection.SetName(name) Установить
свойство (**)

scale  Масштаб отображения модели в окне
Интерфейс...
3613



Тип данных: double
Синтаксис Automation:

scale = iViewProjection.scale Получить
свойство(* )

iViewProjection.scale = scale Установить
свойство (* )

scale = iViewProjection.GetScale() Получить
свойство (**)

iViewProjection.SetScale(scale) Установить
свойство (**)

Примечание:
Масштаб можно установить для любой проекции. Если значение масштаба равно "1, то
масштаб отображения будет задан таким образом, чтобы в окне был показан документ
целиком " см. 

Справка системы КОМПАС ...
KOMPAS.chm::/670_82_3_1_Masshtabirovanie_i_s.htm
Если проекция является текущей, SetScale устанавливает нужный масштаб сразу.
Получить масштаб отображения можно для пользовательской проекции, либо для теку"
щей.

IViewProjection  методы

GetPlacement  Получить интерфейс системы координат 
отображения модели в окне
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetPlacement();
Синтаксис COM:
LPPLACEMENT GetPlacement();
Возвращаемое значение:

" указатель на интерфейс ksPlacement или IPlacement.

Примечание:
Изменение параметров системы координат возможно только для проекции с индексом
vp_None.

GetViewProjectonType  Получить тип проекции
Интерфейс...
Синтаксис Automation:
3614



long GetViewProjectonType();
Синтаксис COM:
long GetViewProjectonType();
Возвращаемое значение:
 

" Тип проекции из перечисления ksViewProjectionType.

IsCurrent  Определить, является ли данная проекция 
текущей
Интерфейс...
Синтаксис Automation:
BOOL IsCurrent();
Синтаксис COM:
BOOL IsCurrent();
Возвращаемое значение:

TRUE " данная проекция является текущей,
FALSE " данная проекция не является текущей.

Примечание:
Для проекции с индексом vp_None возвращаемое значение всегда FALSE.

SetCurrent  Установить данную проекцию отображения 
модели в окне текущей
Интерфейс...
Синтаксис Automation:
BOOL SetCurrent();
Синтаксис COM:
BOOL SetCurrent();
Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

Примечание:

1. Для проекции с индексом vp_NormalTo необходимо, чтобы в модели был выбран хотя бы
один плоский объект.

2. Для проекции с индексом vp_None модель разворачивается и масштабируется в соответ"
ствии с заданными параметрами проекции. Сама проекция в массив не добавляется.
3615



SetMatrix3D  Установить систему координат отображения 
модели в окне по матрице
Интерфейс...
Синтаксис Automation:
VARIANT_BOOL SetMatrix3D (VARIANT Matrix3D);
Синтаксис COM:
BOOL SetMatrix3D (VARIANT Matrix3D);
Входные параметры:

Динамический массив SAFEARRAY double (VT_ARRAY | VT_R8).
В массиве должны лежать 16 элементов, которые представляют со"
бой матрицу размера 4х4.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

Примечание:

1. Для отображения данной проекции в модели надо после установки системы координат
вызвать метод SetCurrent.

2. Матрицу можно получить у ассоциативного вида методом
ksDocument2D::ksAssociationViewMatrix3D.

SetPlacement  Установить систему координат отображения 
модели в окне
Интерфейс...
Синтаксис Automation:
BOOL SetPlacement (LPDISPATCH place);
Синтаксис COM:
BOOL SetPlacement (LPPLACEMENT place);
Входные параметры:

" указатель на интерфейс ksPlacement или IPlacement.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

Примечание:
3616



Изменение параметров системы координат возможно только для проекции с индексом
vp_None.

Интерфейс коллекции атрибутов объектов 
модели (Интерфейс Attribute3DCollection) 
Интерфейс коллекции трехмерных координат 
(Интерфейсы ksCoordinate3dCollection, 
ICoordinate3dCollection)
Интерфейс коллекции трехмерных координат.

ksCoordinate3dCollection " интерфейс Automation
ICoordinate3dCollection " интерфейс COM

Примечания.

1. Коллекция содержит список трехмерных координат точек. Используется при получении
результатов расчета пересечений кривой с деталью, телом или поверхностью.

2. Получить интерфейс коллекции можно с помощью метода ksDocument3D::GetInterface с
параметром o3dType = o3d_coordinate3dCollection.

ICoordinate3dCollection  методы

GetByIndex  Получить координаты точки по индексу
Интерфейс...
Синтаксис Automation:
BOOL GetByIndex (long index, double* x, double* y, double* z);
Синтаксис COM:
BOOL GetByIndex (long index, double* x, double* y, double* z);
Входные параметры:

index " индекс точки.

Выходные параметры:

x, y, z " координаты точки.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.
3617



GetCount  Получить количество точек
Интерфейс...
Синтаксис Automation:
long GetCount();
Синтаксис COM:
long GetCount();
Возвращаемое значение:

" количество точек в коллекции.

GetSafeArray  Сформировать массив SAFEARRAY 
координат точек
Интерфейс...
Синтаксис Automation:
BOOL GetSafeArray (VARIANT* pArray);
Синтаксис COM:
BOOL GetSafeArray (VARIANT* pArray);
Выходные параметры:

pArray " одномерный массив вещественных
чисел VT_ARRAR | VT_R8.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

Примечания:
Координаты точек в полученном массиве лежат в следующей последовательности:
x0, y0, z0, x1, y1, z1, ...xi, yi, zi
3618



Интерфейс сопряжения (Интерфейсы 
ksMateConstraint, IMateConstraint)
МЦХ тела вращения или выдавливания 
(Интерфейсы ksMassInertiaParam, 
IMassInertiaParam)
Интерфейс области применения для тел в операции 
(Интерфейсы ksChooseBodies, IChooseBodies)
Интерфейс области применения для тел в операции.

ksChooseBodies " интерфейс Automation
IChooseBodies " интерфейс COM

Примечание.
Интерфейс позволяет выбирать тела, участвующие в операции.

IChooseBodies  свойства
ChooseBodiesType  Тип действия над телами
Интерфейс...
Тип данных: из перечисления
Синтаксис Automation:

chooseBodiesType = chooseBodies.ChooseBodiesType Получить
свойство(* )

chooseBodies.ChooseBodiesType = chooseBodiesType Установить
свойство (* )

Синтаксис COM

chooseBodiesType = chooseBodies.GetChooseBodiesType() Получить
свойство (**)

chooseBodies.SetChooseBodiesType(chooseBodiesType) Установить
свойство (**)

Примечание:
При ручном указании и автоматическом выборе тел в операции участвуют тела, которые
находятся в коллекции тел области применения. Коллекцию можно получить с помощью
методов ksChooseBodies::BodyCollection и IChooseBodies::BodyCollection.
3619



IChooseBodies  методы
BodyCollection  Получить указатель на интерфейс 
массива трехмерных тел
Интерфейс...
Синтаксис Automation:
LPDISPATCH BodyCollection();
Синтаксис COM:
LPBODYCOLLECTION BodyCollection();
Возвращаемое значение:

" указатель на интерфейс массива тел ksBodyCollection или IBodyCollection.

Интерфейсы ksChooseParts, IChooseParts
Справка системы КОМПАС...
kompas.chm::/906_107_2_Oblastq_primenenija_o.htm
Интерфейс области применения для компонентов сборки в сборочной опера
ции.

ksChooseParts " интерфейс Automation
IChooseParts " интерфейс COM

Примечание.
Интерфейс позволяет выбирать компоненты сборки, участвующие в операции.

IChooseParts  свойства

ChoosePartsType  Способ определения области 
применения для компонентов в сборочной операции
Интерфейс...
Тип данных: ksChoosePartsType
Синтаксис Automation:

ChoosePartsType = ChooseParts.ChoosePartsType Получить
свойство(* )

ChooseParts.ChoosePartsType = ChoosePartsType Установить
свойство (* )

ChoosePartsType = ChooseParts.GetChoosePartsType() Получить
свойство (**)

ChooseParts.SetChoosePartsType(ChoosePartsType) Установить
свойство (**)
3620



IChooseParts  методы

PartCollection  Получить указатель на интерфейс 
массива списка компонентов
Интерфейс...
Синтаксис Automation:
LPDISPATCH PartCollection();
Синтаксис COM:
LPPARTCOLLECTION PartCollection();
Возвращаемое значение:

" указатель на интерфейс массива тел
