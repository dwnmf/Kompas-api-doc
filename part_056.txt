BOOL Clear();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Элементы массива из модели не удаляются.
2988



DetachByBody  отсоединить компонент от массива
Интерфейс...
Синтаксис Automation:
BOOL DetachByBody (LPDISPATCH part);
Синтаксис COM:
BOOL DetachByBody (LPPART part);
Входной параметр:

part " указатель на интерфейс отсоединяемого ком"
понента   ksPart или IPart.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Элемент массива из модели не удаляется.

DetachByIndex  Отсоединить от массива компонент с 
указанным индексом
Интерфейс...
Синтаксис Automation:
BOOL DetachByIndex (long index); 
Синтаксис COM:
BOOL DetachByIndex (unsigned long index);
Входной параметр:

index " индекс отсоединяемого компонента в массиве.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Элемент массива из модели не удаляется.

GetByIndex  Получить указатель на интерфейс 
компонента по индексу
Интерфейс...
Синтаксис Automation:
2989



LPDISPATCH GetByIndex (long index);
Синтаксис COM:
LPPART GetByIndex (unsigned long index);
Входной параметр:

index " индекс компонента в массиве.

Возвращаемое значение:

" указатель на интерфейс компонента ksPart или IPart.

GetByName  Получить указатель на интерфейс 
компонента по имени
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetByName (BSTR name, 
BOOL testFullName, 
BOOL testIgnoreCase);
Синтаксис COM:
LPPART GetByName (LPOLESTR name, 
BOOL testFullName, 
BOOL testIgnoreCase);
Входные параметры:

name " имя объекта,
testFullName " признак полного имени

(TRUE " полное имя),
testIgnoreCase " признак учета регистра:

TRUE " игнорировать регистр,
FALSE " учитывать регистр.

Возвращаемое значение:

" указатель на интерфейс компонента ksPart или
IPart.
2990



GetCount  Получить количество элементов массива 
компонентов сборки
Интерфейс...
Синтаксис Automation:
long GetCount();
Синтаксис COM:
unsigned long GetCount();
Возвращаемое значение:

" количество элементов массива.

FindIt  Получить индекс элемента в массиве
Интерфейс...
Синтаксис Automation:
long FindIt(LPDISPATCH entity);
Возвращаемое значение:

индекс элемента " если элемент найден в массиве,
"1 " если элемент не найден.

Синтаксис COM:
unsigned long FindIt (LPPART entity);
Возвращаемое значение:

индекс элемента " если элемент найден в массиве,
SYS_MAX_UINT " если элемент не найден.

Входные параметры:

entity " указатель на интерфейс компонента  ksPart или 
IPart.

First  Получить указатель на интерфейс первого 
компонента
Интерфейс...
Синтаксис Automation:
LPDISPATCH First();
Синтаксис COM:
LPPART First();
2991



Возвращаемое значение:

" указатель на интерфейс компонента ksPart или
IPart.

Last  Получить указатель на интерфейс последнего 
компонента
Интерфейс...
Синтаксис Automation:
LPDISPATCH Last();
Синтаксис COM:
LPPART Last();
Возвращаемое значение:

" указатель на интерфейс компонента ksPart или
IPart.

Next  Получить указатель на интерфейс следующего 
компонента
Интерфейс...
Синтаксис Automation:
LPDISPATCH Next();
Синтаксис COM:
LPPART Next();
Возвращаемое значение:

" указатель на интерфейс компонента ksPart или
IPart.

Prev  Получить указатель на интерфейс предыдущего 
компонента
Интерфейс...
Синтаксис Automation:
LPDISPATCH Prev();
Синтаксис COM:
LPPART Prev();
Возвращаемое значение:
2992



" указатель на интерфейс компонента ksPart или
IPart.

Refresh  Обновить массив компонентов сборки
Интерфейс...
Синтаксис Automation:
BOOL Refresh();
Синтаксис COM:
BOOL Refresh();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
После вызова данной функции возникает полное соответствие массива с массивом ком"
понентов и удаляются все предыдущие изменения в массиве.

SetByIndex  Заменить компонент в массиве по индексу
Интерфейс...
Синтаксис Automation:
BOOL SetByIndex (LPDISPATCH part, 
long index);
Синтаксис COM:
BOOL SetByIndex (LPPART part, 
unsigned long index);
Входные параметры:

part " указатель на интерфейс компонента ksPart или IPart,
index " индекс заменяемого компонента в массиве.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Компонент сборки (деталь или подсборка). 
Интерфейсы ksPart и IPart
Интерфейс детали или подсборки в составе сборки.
2993



ksPart " интерфейс
Automation

IPart " интерфейс COM

Примечание:
Данный интерфейс можно получить от следующих интерфейсов:

▼ интерфейс динамического массива компонентов сборки ksPartCollection или
IPartCollection,

▼ интерфейс документа"модели IDocument3D, или ksDocument3D.

IPart  свойства

DoubleClickEditOff  Получить признак внешнего 
редактирования детали
Интерфейс...
Тип данных:BOOL.
Синтаксис Automation:

off = iPart.DoubleClickEditOff Получить свойство (* )
iPart.DoubleClickEditOff = off Установить свойство (* )
off = iPart.GetDoubleClickEditOff() Получить свойство (**)
iPart.SetDoubleClickEditOff (off) Установить свойство (**)

Примечание:
Свойство позволяет для библиотечных элементов, имеющих макропараметры, оставить
стандартное поведение компонента и объектов, входящих в состав компонента. Для это"
го нужно установить значение свойства равным TRUE.

fileName  Имя файла компонента
Интерфейс...
Тип данных: строка
Синтаксис Automation:

fileName = iPart.fileName Получить свойство (* )
iPart.fileName = fileName Установить свойство (* )
fileName = iPart.GetFileName() Получить свойство (**)
iPart.SetFileName(fileName) Установить свойство (**)

fixedComponent  Состояние фиксации компонента
Интерфейс...
2994



Справка системы КОМПАС...

Тип данных: BOOL 
Значения свойства:

TRUE " компонент зафиксирован,
FALSE " компонент не зафиксирован.

Синтаксис Automation:

fixedComponent = iPart.fixedComponent Получить свойство (* )
iPart.fixedComponent = fixedComponent Установить свойство (* )
fixedComponent = Получить свойство (**)
iPart.GetFixedComponent()
iPart.SetFixedComponent(fixedCompone Установить свойство (**)
nt)

Примечание:
Если компонент зафиксирован, то нельзя изменить его местоположение.

hidden  Состояние видимости объекта
Интерфейс...

Справка системы КОМПАС...

Тип данных: BOOL
Значения свойства:

TRUE " объект скрытый,
FALSE " объект видимый.

Синтаксис Automation:

hidden = iPart.hidden Получить свойство (* )
iPart.hidden = hidden Установить свойство (* )
hidden = iPart.GetHidden() Получить свойство (**)
iPart.SetHidden (hidden) Установить свойство (**)

excluded  Исключить/включить в расчет деталь
Интерфейс...

Справка системы КОМПАС...

Тип данных: BOOL
2995



Значения свойства:

TRUE " исключить деталь из расчета,
FALSE " включить деталь в расчет.

Синтаксис Automation:

excluded = iEntity.excluded Получить свойство (* )
iEntity.excluded = excluded Установить свойство (* )
excluded = Получить свойство (**)
iEntity.GetExcluded()
iEntity.SetExcluded(exclude Установить свойство (**)
d)

Примечание:

1. После установки признака Excluded в True исключение объекта из расчета происходит
сразу, без вызова Update. Поэтому изменение объектов (и вызов Update) нужно делать
до переключения Excluded в True.

2. Начиная с КОМПАС"3D V12, исключенные из расчета объекты считаются не валидными.

marking  Обозначение компонента
Интерфейс...
Тип данных: строка
Синтаксис Automation:

marking = iPart.marking Получить свойство (* )
iPart.marking = marking Установить свойство (* )
marking = iPart.GetMarking() Получить свойство (**)
iPart.SetMarking(marking) Установить свойство (**)

material  Материал детали
Интерфейс...

Справка системы КОМПАС...

Тип данных: строка
Синтаксис Automation:

material = iPart.material Получить свойство (* )
material = iPart.GetMaterial() Получить свойство (**)

Примечания:

1. Данное свойство доступно только для чтения.
2. Обозначение материала можно получить только у детали.
2996



MultiBodyParts  Признак того, что компонент состоит из 
нескольких частей
Интерфейс...
Тип данных: BOOL
Значения свойства:

TRUE " компонент состоит из нескольких 
частей,

FALSE " компонент не состоит из нескольких 
частей.

Синтаксис Automation:

MultiBodyParts = iPart.MultiBodyParts Получить свойство (* )
MultiBodyParts = Получить свойство (**)
iPart.GetMultiBodyParts()

Примечания:
Свойство позволяет узнать состоит ли компонент их нескольких частей.
В результате работы свойства можно получить компонент (деталь), состоящую из не"
скольких частей. С точки зрения конструктора, деталь должна представлять нечто целое.
Частей быть не должно. Следовательно, нужно отыскать в компоненте операции, поро"
ждающие несколько частей, и выключить из расчета не нужные, чтобы образовалось це"
лое тело.

name  Имя детали или подсборки в составе сборки
Интерфейс...
Тип данных: строка
Синтаксис Automation:

name = iPart.name Получить свойство (* )
iPart.name = name Установить свойство (* )
name = iPart.GetName() Получить свойство (**)
iPart.SetName(name) Установить свойство (**)

needRebuild  Необходимость перестроения объектов 
при изменении их свойств
Интерфейс...
Тип данных: BOOL
Значения свойства:
2997



TRUE " При вызове метода ksEntity после установки мо"
дельному объекту новых свойств модель будет пе"
рестроена, 

FALSE " модель перестраиваться не будет.

Синтаксис Automation:

needRebuild = Получить свойство (* )
iPart.needRebuild
iPart.needRebuild = Установить свойство (* )
needRebuild
needRebuild = Получить свойство (**)
iPart.GetNeedRebuild()
iPart.SetNeedRebuild Установить свойство (**)
(needRebuild)

Синтаксис COM:

needRebuild = iPart" Получить свойство
>GetNeedRebuild()
iPart">SetNeedRebuild Установить свойство
(needRebuild)

Примечания:
Если необходимо изменить свойства нескольких объектов, то достаточно одного пере"
строения модели после установки новых свойств всем модельным объектам. Для этого
перед изменением свойств объектов нужно установить значение этого свойства равным
FALSE, поменять свойства объектов и вызвать у каждого из них метод ksEntity::Update, а
затем вызвать метод ksPart::RebuildModelEx с параметром redraw равным TRUE.
Если значению данного свойства установлено FALSE, то после каждого вызова метода
ksEntity::Update у объекта модель будет перестраиваться.

PropertyObjectEditable  Поддерживается интерфейс 
внешних свойств объекта
Интерфейс...
Тип данных: BOOL
Синтаксис Automation:

PropertyObjectEditable = Получить свойство (* )
Object.PropertyObjectEditable
Object.PropertyObjectEditable = Установить свойство (* )
PropertyObjectEditable
PropertyObjectEditable = Получить свойство (**)
Object.GetPropertyObjectEditabl
e()
2998



Object.SetPropertyObjectEditabl Установить свойство (**)
e( PropertyObjectEditable )

standardComponent
Интерфейс...

Справка системы КОМПАС...

Тип данных: BOOL
Значения свойства:

TRUE " компонент стандартный,
FALSE " компонент нестандартный.

Синтаксис Automation:

standardComponent = Получить свойство (* )
iPart.standardComponent
iPart.standardComponent = Установить свойство (* )
standardComponent
standardComponent = Получить свойство (**)
iPart.GetStandardComponent()
iPart.SetStandardComponent(standardC Установить свойство (**)
omponent)

Примечание:
Стандартный компонент не имеет Дерева построения и редактируется только через при"
кладную библиотеку (если он был создан библиотекой, и в нем сохранены имя библио"
теки и номер команды редактирования методом SetUserParam).

useColor  Используемый цвет (цвет источника, цвет 
хозяина, собственный цвет)
Интерфейс...

Справка системы КОМПАС...

Тип данных: long
Значения свойства...Синтаксис Automation:

useColor = iPart.useColor Получить свойство (* )
iPart.useColor = useColor Установить свойство (* )
useColor = iPart.GetUseColor() Получить свойство (**)
iPart.SetUseColor(useColor) Установить свойство (**)
2999



Примечания:

1. Cобственный цвет можно получить или установить, используя методы: 
SetAdvancedColor, GetAdvancedColor и ColorParam. 

2. Свойство применимо для деталей и подсборок в сборке.

IPart  методы

BeginEdit  Запустить режим редактирования на месте 
для данного компонента
Интерфейс...
Синтаксис Automation:
IDispatch * BeginEdit();
Синтаксис COM:
LPDOCUMENT3D BeginEdit();
Возвращаемое значение:

" указатель на интерфейс документа
ksDocument3D или IDocument3D.

Примечание:

1. Данный метод работает только для компонента, вставленного в сборку. Для детали и для
"верхнего" компонента сборки возвращает NULL.

2. Метод работает только для визуального документа.

BodyCollection  Получить указатель на интерфейс 
массива тел
Интерфейс...
Синтаксис Automation:
LPDISPATCH BodyCollection();
Синтаксис COM:
LPBODYCOLLECTION BodyCollection();
Возвращаемое значение:

" указатель на интерфейс документа
ksBodyCollection или IBodyCollection.
3000



ClearAllObj  Удалить все вспомогательные объекты, 
сохранённые в детали
Интерфейс...
Синтаксис Automation:
BOOL ClearAllObj();
Синтаксис COM:
BOOL ClearAllObj();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечания:
Объект " это вспомогательная информация, и визуально никак не отображается. Напри"
мер, если создать болт как макро относительно какого"нибудь объекта (например, от"
верстие " цилиндрическая поверхность) и запомнить это отверстие в макро болта, то при
следующем редактировании можно получить сохранённый указатель на отверстие.

ColorParam  Получить указатель на интерфейс 
параметров цвета и визуальных свойств компонента
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
LPDISPATCH ColorParam();
Синтаксис COM:
LPCOLORPARAM ColorParam();
Возвращаемое значение:

" указатель на интерфейс ksColorParam или
IColorParam.

CreateOrEditObject  Запустить процесс создания или 
редактирования объекта
Интерфейс...
Синтаксис Automation:
LPDISPATCH CreateOrEditObject (short objType, LPDISPATCH editObj);
Синтаксис COM:
LPENTITY CreateOrEditObject (short objType, LPENTITY editObj);
3001



Входные параметры:

objType " тип создаваемого объекта, выбирается из Obj3dType,
editObj " редактируемый объект.

Типы компонентов...
Возвращаемое значение:

" Указатель на интерфейс объекта ksEntity или
IEntity.

Примечание:

1. Для создания нового объекта необходимо передать методу тип objType и нулевой указа"
тель editObj.

2. Для редактирования уже существующего объекта необходимо передать методу указа"
тель editObj на этот объект, переданный тип objType при этом игнорируется.

CurveIntersection  Рассчитать пересечения с кривой
Интерфейс...
Синтаксис Automation:
BOOL CurveIntersection (LPDISPATCH curve,
LPDISPATCH parts,
LPDISPATCH fases,
LPDISPATCH points);
Синтаксис COM:
BOOL CurveIntersection (LPCURVE3D curve,
LPPARTCOLLECTION parts,
LPFACECOLLECTION faces,
LPCOORDINATE3DCOLLECTION points);
Входные параметры:

curve " Указатель на интерфейс 3D кривой ICurve3D

Выходные параметры:

parts " коллекция деталей, пересекаемых кривой IPartCollection,
fases " коллекция граней, пересекаемых кривой IFaceCollection,
points " коллекция координат точек пересечений 

ICoordinate3dCollection.

Возвращаемое значение:
3002



TRUE " в случае успеха,
FALSE " в случае неудачи.

Примечание:

1. Координаты точек сортируются по параметру кривой t.
2. Параметры parts, faces, points являются не обязательными.
3. Заполняются только присланные коллекции.
4. Интерфейсы коллекций для заполнения нужно получить с помощью функций:

▼ ksPartCollection 
▼ ksDocument3D::PartCollection c параметром refresh = FALSE;
▼ ksFaceCollection
▼ ksDocument3D::GetInterface с параметром o3dType = o3d_faceCollection;
▼ ksCoordinate3dCollection 
▼ ksDocument3D::GetInterface с параметром o3dType = o3d_coordinate3dCollection.

EndEdit  Закрыть режим редактирования на месте для 
данного компонента
Интерфейс...
Синтаксис Automation:
VARIANT_BOOL EndEdit (VARIANT_BOOL rebuild);
Синтаксис COM:
BOOL EndEdit (BOOL rebuild);
Входные параметры:

rebuild " перестроить компонент.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Данный метод работает только для компонента, вставленного в сборку.

EntityCollection  Формирует массив объектов и 
возвращает указатель на его интерфейс
Интерфейс...
Синтаксис Automation:
3003



LPDISPATCH EntityCollection (short objType);
Синтаксис COM:
LPENTITYCOLLECTION EntityCollection (short objType);
Входной параметр:

objType " тип объектов, содержащихся в массиве.

Возвращаемое значение:

" указатель на интерфейс ksEntityCollection или
IEntityCollection.

Примечания:

1. При создании массив заполняется объектами указанного типа, содержащимися в компо"
ненте.

2. В возвращаемом массиве включен контроль, не позволяющий добавить в него нулевой
указатель.

3. Параметр objType необходим для создания массива и для правильной работы метода
Refresh.
Типы объектов...

GetAdvancedColor  Возвращает параметры цвета и 
визуальных свойств компонента
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
BOOL GetAdvancedColor (long* color, 
double* ambient, 
double* diffuse, 
double* specularity, 
double* shininess, 
double* transparency, 
double* emission);
Синтаксис COM:
BOOL GetAdvancedColor (COLORREF* color, 
double* ambient, 
double* diffuse,
double* specularity, 
double* shininess, 
3004



double* transparency,
double* emission);
Выходные параметры:

color " цвет,
ambient " общий свет,
diffuse " диффузия,
specularity " зеркальность,
shininess " блеск,
transparency " прозрачность,
emission " излучение.

Возвращаемое значение:

TRU " в случае успешного завершения.
E 

GetCountObj  Получить количество вспомогательных 
объектов, сохранённых в макро
Интерфейс...
Синтаксис Automation:
BOOL GetCountObj();
Синтаксис COM:
long GetCountObj();
Возвращаемое значение:

" Количество вспомогательных объектов, сохранённых
в макро.

Примечания:
Объект " это вспомогательная информация и визуально никак не отображается. Напри"
мер, если создать болт как макро относительно какого"нибудь объекта (например, от"
верстие " цилиндрическая поверхность) и запомнить это отверстие в макро болта, то при
следующем редактирование можно получить сохранённый указатель на отверстие.

GetDefaultEntity  Получить указатель на интерфейс 
объекта, создаваемого системой по умолчанию
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetDefaultEntity (short objType);
Синтаксис COM:
3005



LPENTITY GetDefaultEntity (short objType);
Входной параметр :

objType " тип объекта.

Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

Типы объектов (objType):

o3d_planeXOY 1 " плоскость XOY
o3d_planeXOZ 2 " плоскость XOZ
o3d_planeYOZ 3 " плоскость YOZ
o3d_pointCS 4 " точка начала системы координат
o3d_axisOX 71 " ось OX
o3d_axisOY 72 " ось OY
o3d_axisOZ 73 " ось OZ

GetDensity  Получить плотность детали
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
double GetDensity()
Синтаксис COM:
double GetDensity();
Возвращаемое значение:

плотность (г/ " в случае успешного завершения,
куб.мм)
0 " в случае неудачи (если компонент " не деталь).

GetFeature  Вернуть указатель на интерфейс  объект 
дерева, связанный с данным объектом
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetFeature();
Синтаксис COM:
LPFEATURE GetFeature();
3006



Возвращаемое значение:

" указатель на интерфейс документа ksFeature
или IFeature.

GetGabarit  Получить габарит
Интерфейс...
Синтаксис Automation:
BOOL GetGabarit( BOOL full
BOOL customizable
double * x1
double * y1,
double * z1,
double * x2,
double * y2, 
double * z2 ); 
Синтаксис COM:
BOOL GetGabarit( BOOL full,
BOOL customizable
double * x1,
double * y1,
double * z1,
double * x2,
double * y2,
double * z2 ); 
Входные параметры:

full  " TRUE " полный,
 " FALSE " только тела,

customizable  " TRUE " с учетом настроек видимости,
 " FALSE " без учета; при full == false игнорируется,

x1, y1, z1  " координаты первой точки габаритного параллелепипеда,
x2, y2, z2  " координаты второй точки габаритного параллелепипеда.

Возвращаемое значение:

TRUE  " в случае успеха.

GetMainBody  Получить указатель на интерфейс 
результирующего тела
Интерфейс...
Синтаксис Automation:
3007



LPDISPATCH GetMainBody();
Синтаксис COM:
LPBODY GetMainBody();
Возвращаемое значение:

" указатель на интерфейс ksBody или IBody.

Пример:
Деталь имеет массив интерфейсов тел IBody. Используя этот массив интерфейсов, мож"
но получить доступ к математической модели детали (компонента).

GetMass  Получить массу детали
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
double GetMass();
Синтаксис COM:
double GetMass();
Возвращаемое значение:

масса " в случае успешного завершения,
0 " в случае неудачи.

CalcMassInertiaProperties  Определить массово
центровочные характеристики
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
LPDISPATCH CalcMassInertiaProperties (long bitVector);
Синтаксис COM:
LPMASSINERTIAPARAM CalcMassInertiaProperties (unsigned int bitVector);
Входной параметр:

bitVector " определяет размерность длины, размерность массы.

Возвращаемое значение:
3008



указатель на интерфейс ksMassInertiaParam или
IMassInertiaParam.

Примечание:
Варианты значений для задания значений bitVector находятся в интервале
[ST_MIX_MM..ST_MIX_KG]
Пример:
(метры|кг " ST_MIX_M|ST_MIX_KG)

GetMateConstraintObjects  Получить массив зависимых 
объектов для повторного редактирования детали
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
LPDISPATCH GetMateConstraintObjects();
Синтаксис COM:
LPENTITYCOLLECTION GetMateConstraintObjects();
Возвращаемое значение:

" указатель на интерфейс ksEntityCollection или
IEntityCollection.

Примечание:
Функция работает в сборке. Массив объектов формируется в результате работы фун"
кции UserGetPlacementAndEntity для данной детали. Как правило, на указанные в процес"
се объекты накладываются сопряжения с объектами данной детали. Если массив сохра"
нить, то при повторном входе в процесс связанные объекты будут выделены.

GetMathematic3D  Получить интерфейс 
математических измерений
Интерфейс...
Синтаксис COM:
LPUNKNOWN GetMathematic3D( int type );
Входные параметры:
3009



type " тип запрашиваемого интерфейса, допустимы"
ми значениями являются следующие:
" o3d_sTrackingPointsMeasurer,
" o3d_measurer.

Возвращаемое значение:

указатель на интерфейс IUnknown " в случае успеха,
NULL " в случае неудачи.

Примечание:
Метод позволяет получать интерфейс математических измерений по типу Obj3dType в
виде интерфейса IUnknown. Полученный интерфейс необходимо привести к интерфей"
су, соответствующему типу type с помощью функции IUnknown::QeryInterface.

GetMeasurer  Получить указатель на интерфейс 
измерений
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetMeasurer();
Синтаксис COM:
LPMEASURER GetMeasurer();
Возвращаемое значение:

" указатель на интерфейс ksMeasurer или
IMeasurer.

GetObject  Получить указатель на вспомогательный 
объект, сохраненный в деталь по индексу
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetObject(long index);
Синтаксис COM:
LPUNKNOWN GetObject(long index);
Входные параметры:

index " номер объекта.

Возвращаемое значение:
3010



Указатель на интерфейс IDispatch или IUnknown со"
хранённого объекта.

Примечания:
Объект " это вспомогательная информация, и визуально никак не отображается. Напри"
мер, если создать болт как макро относительно какого"нибудь объекта (например отвер"
стие " цилиндрическая поверхность), и запомнить это отверстие в макро болта, то при
следующем редактировании можно получить сохранённый указатель на отверстие.

См. также: IPart::SetObjectGetObjectByName  Получить компонент 
по имени
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetObjectByName( BSTR name, 
short objType,
BOOL testFullName,
BOOL testIgnoreCase );
Синтаксис COM:
LPUNKNOWN GetObjectByName( LPOLESTR name,
short  objType,
BOOL testFullName,
BOOL testIgnoreCase );
Входные параметры:

name " имя компонента,
objType " тип компонента,
testFullName " полное имя компонента:

TRUE " использовать полное имя,
FALSE " частичное совпадение,

testIgnoreCase " игнорировать регистр.

Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

Примечания:
Объект " это вспомогательная информация, и визуально никак не отображается. Напри"
мер, если создать болт как макро относительно какого"нибудь объекта (например отвер"
стие " цилиндрическая поверхность), и запомнить это отверстие в макро болта, то при
следующем редактирование можно получить сохранённый указатель на отверстие.
См. также: IPart::SetObject
3011



GetObject3DNotify  Получить объект обработки событий 
для объектов 3D документов
Интерфейс...
Синтаксис Automation:
ksObject3DNotify * GetObject3DNotify (long objType, LPDISPATCH obj);
Входные параметры:

Obj " указатель на объект,
objType " тип объекта (o3d_unknown...o3d_sketch, 

o3d_axis2Planes...o3d_thread, o3d_part, o3d_feature).

Возвращаемое значение:

" указатель на интерфейс источника событий
Object3DNotify.

Примечание:
Если задан указатель на объект, события генерируются только для этого объекта. Если
задан тип объекта, события генерируются для всех объектов этого типа. Если задан тип
o3d_unknown, события генерируются для всех объектов.

GetObject3DNotifyResult  Получить интерфейс 
результатов редактирования объекта документа
модели
Интерфейс...
Синтаксис Automation:
ksObject3DNotifyResult * GetObject3DNotifyResult();
Синтаксис COM:
IObject3DNotifyResult * GetObject3DNotifyResult();
Возвращаемое значение:

" указатель на интерфейс источника событий
ksObject3DNotifyResult или
IObject3DNotifyResult.

GetPart  Получить указатель на интерфейс компонента 
в соответствии с заданным типом
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetPart (long type);
3012



Синтаксис COM:
LPPART GetPart(int type);
Входные параметры:

type " тип компонента.

Типы компонентов...
Возвращаемое значение:

" указатель на интерфейс компонента ksPart или
IPart.

Примечание:
Тип задается для нового, редактируемого или главного компонента либо тип равен но"
меру компонента в документе. Функция используется, чтобы получить доступ к компо"
ненту документа. Деталь или сборка являются компонентами. Сборка, в свою очередь,
состоит из компонентов " деталей и подсборок.

GetPlacement  Получить указатель на интерфейс 
местоположения компонента
Пример ...Интерфейс...
Синтаксис Automation:
LPDISPATCH GetPlacement();
Синтаксис COM:
LPPLACEMENT GetPlacement();
Возвращаемое значение:

" указатель на интерфейс ksPlacement или
IPlacement.

GetSummMatrix  Получить суммарную матрицу 
преобразования координат
Интерфейс...
Синтаксис Automation:
VARIANT GetSummMatrix( LPDISPATCH part1 );
Синтаксис COM:
BOOL GetSummMatrix( VARIANT * matrix,
LPPART part1 );
3013



Входные параметры:

part1 " указатель на интерфейс ksPart или IPart детали из которой нужно 
сделать пересчет координат.

Возвращаемое значение:

массив SafeArray типа VT_ARRAY | VT_R8

Примечания:

1. Элементы матрицы возвращаются в виде одномерного массива из шестнадцати элемен"
тов.

2. Матрица имеет размер 4х4.

GetUserLibraryCommand  Получить номер команды 
пользовательской библиотеки, при помощи которой 
можно редактировать компонент
Интерфейс...
Аналог данного метода при использовании Automation " ksUserParam::number.
Пример...
Синтаксис COM:
long GetUserLibraryCommand();
Возвращаемое значение:

Номер библиотечной команды " в случае успешного 
завершения,

"1 " если библиотеки нет.

GetUserLibraryFileName  Получить имя файла 
пользовательской библиотеки, при помощи которой 
можно редактировать компонент
Интерфейс...
Аналог данного метода при использовании Automation " ksUserParam::fileName. При"
мер....
Синтаксис COM:
LPOLESTR GetUserLibraryFileName();
Возвращаемое значение:
3014



Имя файла пользовательской " в случае успешного 
библиотеки завершения,
NULL " если библиотеки нет.

GetUserLibraryName  Получить имя пользовательской 
библиотеки, при помощи которой можно редактировать 
компонент
Интерфейс...
Аналог данного метода при использовании Automation " ksUserParam::libName.
Пример...
Синтаксис COM:
LPOLESTR GetUserLibraryName();
Возвращаемое значение:

Имя пользовательской библиотеки " в случае успеш"
ного завершения,

NULL " если библиотеки
нет.

GetUserParam  Возвращает пользовательские 
параметры, записанные в компоненте
Интерфейс...
Синтаксис Automation:
BOOL GetUserParam (LPDISPATCH userPars);
Выходной параметр:

userPars " указатель на интерфейс пользовательских параметров 
ksUserParam.

Синтаксис COM:
BOOL GetUserParam (void *value, 
unsigned int size);
Входной параметр:

Size " размер структуры параметров.

Выходной параметр :

Value " пользовательская структура параметров.

Возвращаемое значение:
3015



TRUE " в случае успешного завершения.

Примечание:
Способ получения пользовательских данных (userPars) должен совпадать со способом
их сохранения (void*, SAFEARRAY, или DynamicArray) через ksPart::SetUserParam . 

▼ Если пользовательские данные были сохранены через SAFEARRAY (userPars), то перед
их получением нужно создать SAFEARRAY соответствующего размера (размер данных
можно определить при помощи ksPart::GetUserParamSize).

Если пользовательские данные были сохранены через ksUserParam::SetUserArray, то 
перед их получением нужно создать UserArray, аналогичный по структуре 
используемому при сохранении, и передать его в 
ksUserParam::SetUserArray.GetUserParamSize  Возвращает размер 
(в байтах) пользовательских параметров, записанных в 
компоненте
Интерфейс...
Синтаксис Automation:
long GetUserParamSize();
Синтаксис COM:
long GetUserParamSize();

IsDetail  Определить, является ли компонент деталью
Интерфейс...
Синтаксис Automation:
BOOL IsDetail();
Синтаксис COM:
BOOL IsDetail();
Возвращаемое значение:

TRUE " деталь,
FALSE " сборка.

NewEntity  Создать новый интерфейс объекта и 
получить указатель на него
Интерфейс...
Синтаксис Automation:
LPDISPATCH NewEntity (short objType);
Синтаксис COM:
3016



LPENTITY NewEntity (short objType);
Входной параметр:

objType " тип объекта.

Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

Примечание:
Реальный объект создается в модели после вызова метода Create.

PutStorage  Вставить детальзаготовку
Интерфейс...

Справка системы КОМПАС...
ADD_COMPONENT_FROM_FILE.htm
Синтаксис Automation:
BOOL PutStorage (LPOLESTR fileName,
BOOL type,
BOOL mirror);
Синтаксис COM:
BOOL PutStorage (const char* fileName,
BOOL type,
BOOL mirror);
Входные параметры:

fileName " имя файла детали"заготовки,
type " тип вставки детали"заготовки

(TRUE " внешней ссылкой,
FALSE " без истории),

mirror " признак вставки "зеркальной" детали
(TRUE " "зеркальная" деталь,
FALSE " деталь в том виде, в котором она существует в 
файле"источнике).

Возвращаемое значение:

TRUE " в случае успешного завершения.
3017



RebuildModel  Перестроить модель в соответствии с 
новыми значениями свойств объектов и внешних 
переменных
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
BOOL RebuildModel();
Синтаксис COM:
BOOL RebuildModel();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Если изменены значения внешних переменных компонента, то они будут переданы в мо"
дель. Если компонент является фантомом, то он будет перестроен.

RebuildModelEx  Перестроить модель в соответствии с 
новыми значениями свойств объектов и внешних 
переменных
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
BOOL RebuildModelEx (BOOL redraw);
Синтаксис COM:
BOOL RebuildModelEx (BOOL redraw);
Входные параметры:

redraw " признак перестроения документа:
TRUE " перестроить документ,
FALSE " не перестраивать.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
3018



1. Если изменены значения внешних переменных компонента, то они будут переданы в мо"
дель. Если параметру redraw установлено значение TRUE или компонент является фан"
томом, то он будет перестроен.

2. Значение redraw, равное FALSE, предполагается использовать для ускорения работы при
многократном редактировании одной и той же детали. Перерисовка документа в этом
случае не выполняется. Однако следует учитывать, что после завершения редактирова"
ния необходимо вызвать метод с параметром redraw, равным TRUE.

SetAdvancedColor  Установить параметры цвета и 
визуальных свойств объекта
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
BOOL SetAdvancedColor (long color, 
double ambient, 
double diffuse, 
double specularity,
double shininess, 
double transparency, 
double emission);
Синтаксис COM:
BOOL SetAdvancedColor (COLORREF color, 
double ambient, 
double diffuse, 
double specularity,
double shininess, 
double transparency, 
double emission);
Входные параметры:

color " цвет,
ambient " общий свет,
diffuse " диффузия,
specularity " зеркальность,
shininess " блеск,
transparency " прозрачность,
emission " излучение.
3019



Возвращаемое значение:

TRUE " в случае успешного завершения.

SetFileName  Установить имя файла детали
Интерфейс...
Синтаксис Automation:
BOOL SetFileName (BSTR name);
Синтаксис COM:
BOOL SetFileName (LPOLESTR name);
Входной параметр:

name " полное имя файла детали.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечания:

1. Метод используется для компонентов, вставленных в сборку.
2. Документ с указанным именем должен существовать.
3. Компонент не должен быть деталью из библиотеки моделей или стандартным элемен"

том.
4. Изменение вступает в силу после вызова метода ksPart::Update.

SetMateConstraintObjects  Сохранить в детали 
зависимые объекты для повторного редактирования 
детали
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
BOOL SetMateConstraintObjects (LPDISPATCH collection);
Синтаксис COM:
BOOL SetMateConstraintObjects (LPENTITYCOLLECTION collection);
Входной параметр:
3020



collection " указатель на интерфейс ksEntityCollection или 
IEntityCollection.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Функция работает в сборке. Массив объектов формируется в результате работы процес"
са UserGetPlacementAndEntity для данной детали. Как правило, на указанные в процессе
объекты накладываются сопряжения с объектами данной детали. Если массив сохра"
нить, то при повторном входе в процесс связанные объекты будут выделены. Если
collection = NULL, массив будет взят из документа, который получился после работы про"
цесса UserGetPlacementAndEntity для данной детали.

SetMaterial  Установить материал детали
Интерфейс...

Справка системы КОМПАС...

Синтаксис Automation:
BOOL SetMaterial (BSTR name,
double density);
Синтаксис COM:
BOOL SetMaterial (LPOLESTR name,
double density);
Входные параметры:

name " название материала,
density " плотность материала (г/куб.см).

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечания:

1. Компонент, у которого меняется материал, должен быть деталью.
2. Компонент не должен быть деталью из библиотеки моделей или стандартным элемен"

том.
3. Метод используется в детали для верхнего компонента, в сборках " для вставленных де"

талей.
4. Изменение материала вступает в силу после вызова метода ksPart::Update.
3021



SetObject  Сохранить указатель на вспомогательный 
объект в деталь по индексу
Интерфейс...
Синтаксис Automation:
BOOL SetObject(long index, LPDISPATCH obj);
Синтаксис COM:
BOOL SetObject(long index, LPUNKNOWN obj);
Входные параметры:

index " номер объекта,
obj " указатель на интерфейс объекта,

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечания:
Объект " это вспомогательная информация и визуально никак не отображается. Напри"
мер, если создать болт как макро относительно какого"нибудь объекта (например отвер"
стие " цилиндрическая поверхность), и запомнить это отверстие в макро болта, то при
следующем редактирование можно получить сохранённый указатель на отверстие.
См. также: IPart::GetObject

SetPlacement  Установить новое местоположение 
компонента
Интерфейс...
Синтаксис Automation:
BOOL SetPlacement (LPDISPATCH placement);
Синтаксис COM:
BOOL SetPlacement (LPPLACEMENT placement);
Входной параметр:

placement " указатель на интерфейс ksPlacement или IPlacement.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Данный метод вступает в силу после вызова метода UpdatePlacement.
3022



SetSourceVariables  Установить для вставки значения 
переменных из источника
Интерфейс...
Синтаксис Automation:
BOOL SetSourceVariables( BOOL rebuild );
Синтаксис COM:
BOOL SetSourceVariables( BOOL rebuild );
Входной параметр:

rebuild " перестроить вставку.

Примечание:
Функция позволяет сбросить изменения значений переменных во вставке и установить
значения, заданные в источнике.

SetUserParam  Установить параметры компонента, 
указанные пользователем
Интерфейс...
Синтаксис Automation:
BOOL SetUserParam (LPDISPATCH userPars);
Входной параметр:

userPars " указатель на интерфейс пользовательских параметров 
ksUserParam.

Синтаксис COM:
BOOL SetUserParam (void *value, 
unsigned int size, 
LPOLESTR nameFile, 
LPOLESTR nameLib, 
int number);
Входные параметры:

value " указатель на пользовательскую структуру параметров,
size " размер структуры параметров,
3023



nameFile " имя файла прикладной библиотеки для последующего 
редактирования через библиотеку (0 " запоминается текущая 
библиотека),

nameLib " имя прикладной библиотеки для последующего редактирования 
через библиотеку (0 " запоминается текущая библиотека),

number " номер команды в прикладной библиотеке для последующего 
редактирования через библиотеку ("1 " запоминается текущая 
команда).

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Данный метод позволяет сохранить параметры пользователя для последующего редак"
тирования с помощью библиотеки.

TransformPoint  Перевести координаты точки 
присланной детали part1 в систему координат детали
Интерфейс...
Синтаксис Automation:
BOOL TransformPoint (double* x, double* y, double* z, LPDISPATCH part1);
Синтаксис COM:
BOOL TransformPoint (double* x, double* y, double* z, LPPART part1);
Входные параметры:

x, y, z " координаты точки в системе координат детали part1,
part1 указатель на интерфейс детали ksPart, из системы 

координат которой нужно перевести точку.

Выходные параметры:

x, y, z " координаты точки в системе координат детали.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.
3024



TransformPoints  Перевести координаты точек 
присланной детали part1 в систему координат детали
Интерфейс...
Синтаксис Automation:
BOOL TransformPoints( VARIANT * points,
LPDISPATCH part1 );
Синтаксис COM:
BOOL TransformPoints( VARIANT * points,
LPPART part1 );
Входные параметры:

points " массив SAFEARRAY координат точек,
part1 " указатель на интерфейс детали в системе координат которой 

заданы точки.

Выходные параметры:

points " массив SAFEARRAY координат точек.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечания:

1. Значения координат изменяются непосредственно в присланном массиве SAFEARRAY.
2. Тип варианта должен быть VT_ARRAY | VT_R8.
3. Значения в массиве должны лежать в последовательности x1, y1, z1, x2, y2, z2 ... xn, yn,

zn.

VariableCollection  Получить указатель на интерфейс 
массива внешних переменных
Интерфейс...
Синтаксис Automation:
LPDISPATCH VariableCollection();
Синтаксис COM:
LPVARIABLECOLLECTION VariableCollection();
Возвращаемое значение:

" указатель на интерфейс ksVariableCollection
или IVariableCollection .

Примечание:
3025



Изменения в полученном массиве не отображаются в модели немедленно. Чтобы изме"
нения вступили в силу, необходимо вызвать метод RebuildModel.

Update  Изменить свойства компонента (используя 
ранее установленные свойства)
Интерфейс...
Синтаксис Automation:
BOOL Update();
Синтаксис COM:
BOOL Update();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
После вызова этого метода все изменения отображаются в компоненте.

UpdatePlacement  Изменить местоположение 
компонента, заданное методом SetPlacement
Пример...Интерфейс...
Синтаксис Automation:
BOOL UpdatePlacement();
Синтаксис COM:
BOOL UpdatePlacement();
Возвращаемое значение:

TRUE " в случае успешного завершения.

UpdatePlacementEx  Изменить местоположение 
компонента, заданное методом SetPlacement
Интерфейс...
Синтаксис Automation:
BOOL UpdatePlacementEx (BOOL redraw);
Синтаксис COM:
BOOL UpdatePlacementEx (BOOL redraw);
Входные параметры:
3026



redraw " признак перестроения документа после изменения 
местоположения компонента:
(TRUE " перестроить документ, FALSE " не перестраивать).

Возвращаемое значение:

TRUE " в случае успешного завершения.
3027



3028



Массив объектов модели(Интерфейсы ksEntityCollection 
и IEntityCollection)
Интерфейс массива объектов модели.

ksEntityCollection " интерфейс Automation
IEntityCollection " интерфейс COM

Примечание:
Данный интерфейс можно получить от следующих интерфейсов:

▼ Интерфейс вырезанного кинематического элемента ksCutEvolutionDefinition или
ICutEvolutionDefinition.

▼ Интерфейс детали или подсборки в составе сборки ksPart или IPart.
▼ Интерфейс документа"модели ksDocument3D или IDocument3D.
▼ Интерфейс зеркальной копии ksMirrorCopyDefinitiont или IMirrorCopyDefinitiont.
▼ Интерфейс объекта Дерева построения ksFeaturet или IFeaturet.
▼ Интерфейс операции копирования компонентов сборки по кривой

ksCurvePartArrayDefinitiont или ICurvePartArrayDefinitiont.
▼ Интерфейс операции копирования по кривой ksCurveCopyDefinitiont или

ICurveCopyDefinitiont.
▼ Интерфейс операции копирования по окружности ksCircularCopyDefinitiont или

ICircularCopyDefinition.
▼ Интерфейс операции копирования по сетке ksMeshCopyDefinitiont или

ICopyMeshDefinitiont.
▼ Интерфейс параметров вырезанного элемента по сечениям ksCutLoftDefinitiont или

ICutLoftDefinitiont.
▼ Интерфейс параметров запроса к системе ksRequestInfo3D или IRequestInfo.
▼ Интерфейс параметров кинематической поверхности ksEvolutionSurfaceDefinitiont или

IEvolutionSurfaceDefinitiont.
▼ Интерфейс параметров основания " кинематического элемента

ksBaseEvolutionDefinitiont или IBaseEvolutionDefinitiont.
▼ Интерфейс параметров основания " элемента по сечениям ksBaseLoftDefinition или

IBaseLoftDefinition.
▼ Интерфейс параметров поверхности по сечениям ksLoftSurfaceDefinition или

ILoftSurfaceDefinitiont.
▼ Интерфейс параметров фаски ksChamferDefinition или IChamferDefinition,
▼ Интерфейс параметров элемента "скругление" ksFilletDefinition или IFilletDefinition.
▼ Интерфейс приклеенного кинематического элемента ksBossEvolutionDefinition или

IBossEvolutionDefinition.
▼ Интерфейс приклеенного элемента по сечениям ksBossLoftDefinition или

IBossLoftDefinition.
▼ Интерфейс тонкостенной оболочки ksShellDefinition или IShellDefinition.
3029



▼ Интерфейс уклона ksInclineDefinition или IInclineDefinition.

ksEntityCollection  методы

Add  Добавить объект в массив
Интерфейс...
Синтаксис Automation:
BOOL Add (LPDISPATCH entity);
Синтаксис COM:
BOOL Add (LPENTITY entity);
Входной параметр:

entity " интерфейс добавляемого элемента ksEntity или
IEntity.

Возвращаемое значение:
Функция возвращает TRUE в двух случаях:

▼ Если при работе с динамическим массивом объектов модели (метод EntityCollection)
checkEntity " признак проверки для вновь добавляемых объектов на NULL " имеет значе"
ние FALSE (т.е. в массив можно добавить NULL).

▼ Если при работе с динамическим массивом объектов модели checkEntity имеет значение
TRUE (т.е. в массив нельзя добавить NULL) и объект " не NULL.
Функция возвращает FALSE, если при работе с динамическим массивом объектов моде"
ли checkEntity " имеет значение TRUE (т.е. в массив нельзя добавить NULL) и объект "
NULL.

AddAt  Добавить объект в массив с заданным индексом
Интерфейс...
Синтаксис Automation:
BOOL AddAt (LPDISPATCH entity, 
long index);
Синтаксис COM:
BOOL AddAt (LPENTITY entity, 
long index);
Входные параметры:

entity " интерфейс добавляемого элемента ksEntity или
IEntity,

index " индекс в массиве.

Возвращаемое значение:
3030



Функция возвращает TRUE в двух случаях:
▼ Если при работе с динамическим массивом объектов модели (метод EntityCollection)

checkEntity " признак проверки для вновь добавляемых объектов на NULL " имеет значе"
ние FALSE (т.е. в массив можно добавить NULL).

▼ Если при работе с динамическим массивом объектов модели checkEntity имеет значение
TRUE (т.е. в массив нельзя добавить NULL) и объект " не NULL.
Функция возвращает FALSE, если при работе с динамическим массивом объектов моде"
ли checkEntity имеет значение TRUE (т.е. в массив нельзя добавить NULL) и объект "
NULL.

AddBefore  Добавить объект перед указанным объектом в 
массиве
Интерфейс...
Синтаксис Automation:
BOOL AddBefore (LPDISPATCH entity, 
LPDISPATCH base);
Синтаксис COM:
BOOL AddBefore (LPENTITY entity, 
LPENTITY base);
Входные параметры:

entity " интерфейс добавляемого элемента ksEntity или IEntity,
base " интерфейс базового объекта ksEntity или IEntity (не 

должен быть 0).

Возвращаемое значение:
Функция возвращает TRUE в двух случаях:

▼ Если при работе с динамическим массивом объектов модели (метод EntityCollection)
checkEntity " признак проверки для вновь добавляемых объектов на NULL " имеет значе"
ние FALSE (т.е. в массив можно добавить NULL).

▼ Если при работе с динамическим массивом объектов модели checkEntity имеет значение
TRUE (т.е. в массив нельзя добавить NULL) и объект " не NULL.
Функция возвращает FALSE, если при работе с динамическим массивом объектов моде"
ли checkEntity имеет значение TRUE (т.е. в массив нельзя добавить NULL) и объект "
NULL.

Clear  Очистить динамический массив объектов
Интерфейс...
Синтаксис Automation:
BOOL Clear();
Синтаксис COM:
3031



BOOL Clear();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Объекты массива из модели не удаляются.

DetachByBody  Удалить указанный объект из массива
Интерфейс...
Синтаксис Automation:
BOOL DetachByBody(LPDISPATCH entity);
Синтаксис COM:
BOOL DetachByBody(LPENTITY entity);
Входной параметр:

entity " указатель на интерфейс удаляемого элемента ksEntity или 
IEntity.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечания:

1. Указатель на интерфейс удаляемого объекта entity не должен быть 0.
2. Элемент массива из модели не удаляется.

DetachByIndex  Удалить объект из массива по индексу
Интерфейс...
Синтаксис Automation:
BOOL DetachByIndex(long index);
Синтаксис COM:
BOOL DetachByIndex(long index);
Входной параметр:

index " индекс объекта в массиве.

Возвращаемое значение:

TRUE " в случае успешного завершения.
3032



Примечание:
Элемент массива из модели не удаляется.

GetByIndex  Получить указатель на интерфейс объекта в 
массиве по индексу
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetByIndex (long index);
Синтаксис COM:
LPENTITY GetByIndex (long index);
Входной параметр:

index " номер объекта в массиве.

Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

GetByName  Получить указатель на интерфейс объекта в 
массиве по имени
Интерфейс...
Синтаксис Automation:
LPDISPATCH GetByName (BSTR name,
BOOL testFullName,
BOOL testIgnoreCase);
Синтаксис COM:
LPENTITY GetByName (LPOLESTR name, 
BOOL testFullName, 
BOOL testIgnoreCase);
Входные параметры:

name " имя объекта,
testFullName " признак полного имени:

TRUE " name " полное имя, 
FALSE " имя name может быть частью полного имени,

testIgnoreCase " признак игнорирования регистра символов:
TRUE " игнорировать регистр,
FALSE " учитывать регистр.

Возвращаемое значение:
3033



" указатель на интерфейс ksEntity или IEntity.

GetCount  Получить количество элементов в массиве
Интерфейс...
Синтаксис Automation:
long GetCount();
Синтаксис COM:
long GetCount();
Возвращаемое значение:

" количество элементов массива.

FindIt  Получить индекс элемента в массиве
Интерфейс...
Синтаксис Automation:
long FindIt (LPDISPATCH entity);
Возвращаемое значение:

индекс элемента " если элемент найден в массиве,
"1 " если элемент не найден.

Синтаксис COM:
unsigned long FindIt( LPENTITY entity );
Входные параметры:

entity " указатель на интерфейс ksEntity или IEntity.

Возвращаемое значение:

индекс элемента " если элемент найден в массиве,
SYS_MAX_UINT " если элемент не найден.

First  Получить первый объект в массиве
Интерфейс...
Синтаксис Automation:
LPDISPATCH First();
3034



Синтаксис COM:
LPENTITY First();
Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

Last  Получить указатель на интерфейс последнего объекта 
в массиве
Интерфейс...
Синтаксис Automation:
LPDISPATCH Last();
Синтаксис COM:
LPENTITY Last();
Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

Next  Получить указатель на интерфейс следующего 
объекта в массиве
Интерфейс...
Синтаксис Automation:
LPDISPATCH Next();
Синтаксис COM:
LPENTITY Next();
Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.

Prev  Получить указатель на интерфейс предыдущего 
объекта в массиве
Интерфейс...
Синтаксис Automation:
LPDISPATCH Prev();
Синтаксис COM:
LPENTITY Prev();
Возвращаемое значение:

" указатель на интерфейс ksEntity или IEntity.
3035



Refresh  Обновить массив интерфейсов объектов 
трехмерной модели (осей, плоскостей и т.п.)
Интерфейс...
Синтаксис Automation:
BOOL Refresh();
Синтаксис COM:
BOOL Refresh();
Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
После вызова данной функции возникает полное соответствие массива в памяти с мас"
сивом точек ребра (поверхности) и удаляются все предыдущие изменения в массиве.

SetByIndex  Заменить объект с указанным индексом в 
массиве на присланный объект
Интерфейс...
Синтаксис Automation:
BOOL SetByIndex (LPDISPATCH entity, 
long index);
Синтаксис COM:
BOOL SetByIndex (LPENTITY entity, 
long index);
Входные параметры:

entity " указатель на интерфейс присоединяемого элемента 
ksEntity или IEntity,

index " индекс элемента в массиве.

Возвращаемое значение:

TRUE " в случае успешного завершения.

SelectByPoint  Исключить из массива все объекты, не 
содержащие точку с заданными координатами
Интерфейс...
Синтаксис Automation:
3036



BOOL SelectByPoint (double x, 
double y, 
double z);
Синтаксис COM:
BOOL SelectByPoint (double x, 
double y, 
double z);
Входные параметры:

x, y, z " координаты точки,

Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
После выполнения этой функции в массиве останутся только те объекты, которые содер"
жат указанную точку (проходят через нее).
Данная функция временно не работает для формообразующих элементов (элементов
выдавливания, вращения, по сечениям).

Объект модели (Интерфейсы ksEntity и IEntity)

Интерфейсы ksEntity и iEntity  Интерфейс элемента 
модели (оси, плоскости, формообразующего элемента)

ksEntity " интерфейс Automation
IEntity " интерфейс COM

Примечание:
Данный интерфейс можно получить от следующих интерфейсов:

▼ Интерфейс детали или подсборки в составе сборки ksPart или IPart.
▼ Методы интерфейса коллекции элементов модели ksEntityCollection, IEntityCollection.
▼ Метод интерфейса документа"модели ksDocument3D::UserSelectEntity или

IDocument3D::UserSelectEntity.
▼ Интерфейс параметров сопряжения ksMateConstraint или IMateConstraint.
▼ Интерфейс параметров вершины ломаной ksPolyLineVertexParam или

IPolygonalLineVertexParam.
▼ Интерфейсы элементов модели
3037



свойства

excluded  Признак включения или выключения из расчета
Интерфейс...Справка системы КОМПАС...

Тип данных: BOOL
Значения свойства:

TRUE " исключить из расчёта,
FALSE " включить в расчёт.

Синтаксис Automation:

excluded = iEntity.excluded Получить свойство (* )
iEntity.excluded = excluded Установить свойство (* )
excluded = iEntity.GetExcluded() Получить свойство (**)
iEntity.SetExcluded(excluded) Установить свойство (**)

Примечание:

1. После установки признака Excluded в True исключение объекта из расчета происходит
сразу, без вызова Update. Поэтому изменение объектов (и вызов Update) нужно делать
до переключения Excluded в True.

2. Начиная с КОМПАС"3D V12, исключенные из расчета объекты считаются не валидными.

hidden  Состояние видимости объекта
Интерфейс...Справка системы КОМПАС...

Тип данных: BOOL
Значения свойства:

TRUE " объект скрытый,
FALSE " объект видимый.

Синтаксис Automation:

hidden = iEntity.hidden Получить свойство (* )
iEntity.hidden = hidden Установить свойство (* )
hidden = iEntity.GetHidden() Получить свойство (**)
iEntity.SetHidden(hidden) Установить свойство (**)
3038



MultiBodyParts  Признак того, что компонент состоит из 
нескольких частей
Интерфейс...
Тип данных: BOOL
Значения свойства:

TRUE " компонент состоит из нескольких 
частей,

FALSE " компонент не состоит из нескольких 
частей.

Синтаксис Automation:

MultiBodyParts = iEntity.MultiBodyParts Получить свойство (* )
MultiBodyParts = Получить свойство (**)
iEntity.GetMultiBodyParts()

Примечания:
Свойство позволяет узнать. состоит ли компонент их нескольких частей.
В результате работы метода можно получить компонент (деталь), состоящую из не"
скольких частей. С точки зрения конструктора, деталь должна представлять нечто целое.
Частей быть не должно. Следовательно, нужно отыскать в компоненте операции, поро"
ждающие несколько частей, и выключить из расчета не нужные, чтобы образовалось це"
лое тело.

name  Имя элемента трехмерной модели (оси, плоскости, 
формообразующего элемента)
Интерфейс...Тип данных: строка
Синтаксис Automation:

name = iEntity.name Получить свойство (* )
iEntity.name = name Установить свойство (* )
name = iEntity.GetName() Получить свойство (**)
iEntity.SetName(name) Установить свойство (**)

type  Тип объекта трехмерной модели
Интерфейс...Тип данных: short
Значения свойства...
Синтаксис Automation:

type = iEntity.type Получить свойство (* )
3039



iEntity.type = type Установить свойство (* )
type = iEntity.GetType() Получить свойство (**)
iEntity.SetType(type) Установить свойство (**)

Примечание:

1. Числовой идентификатор типа объекта не должен превышать идентификатор объекта,
всегда последнего из Entity.

2. Свойство только для чтения.

useColor  Используемый цвет (цвет источника, цвет хозяина, 
цвет слоя, собственный цвет)
Интерфейс...Тип данных: UseColor
Синтаксис Automation:

useColor = Object.useColor Получить свойство(* )
Object.useColor = useColor Установить свойство (* )
useColor = Получить свойство (**)
Object.GetUseColor()
Object.SetUseColory( Установить свойство (**)
useColor )

методы

BodyCollection  Получить указатель на интерфейс массива 
трехмерных тел
Интерфейс...Синтаксис Automation:
LPDISPATCH BodyCollection();
Синтаксис COM:
LPBODYCOLLECTION BodyCollection();
Возвращаемое значение:

" указатель на интерфейс массива тел
ksBodyCollection или IBodyCollection.

ColorParam  Получить указатель на интерфейс параметров 
цвета и визуальных свойств объекта
Интерфейс...Синтаксис Automation:
LPDISPATCH ColorParam();
3040



Синтаксис COM:
LPCOLORPARAM ColorParam();
Возвращаемое значение:

" указатель на интерфейс ksColorParam или IColorParam.

Create  Создать объект в модели
Интерфейс...Синтаксис Automation:
BOOL Create();
Синтаксис COM:
BOOL Create();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:
Данный метод необходимо вызвать для создания объекта в модели после создания ин"
терфейса с помощью метода NewEntity и изменения параметров создаваемого объекта.
Если до вызова данного метода свойства объекта не изменены, то объект создается с па"
раметрами, принятыми по умолчанию.
Если объект уже создан, то функция вызовет метод Update.

GetAdvancedColor  Получить параметры цвета и визуальных 
свойств объекта
Интерфейс...Справка системы КОМПАС...
CM_NAME_CAPTION
Синтаксис Automation:
BOOL GetAdvancedColor (long* color,
double* ambient,
double* diffuse,
double* specularity,
double* shininess,
double* transparency,
double* emission);
Синтаксис COM:
BOOL GetAdvancedColor (COLORREF* color,
double* ambient,
3041



double* diffuse,
double* specularity,
double* shininess,
double* transparency,
double* emission);
Выходные параметры:

color " цвет,
ambient " общий свет,
diffuse " диффузия,
specularity " зеркальность,
shininess " блеск,
transparency " прозрачность,
emission " излучение.

Возвращаемое значение:

TRUE " в случае успешного завершения.

GetBodyParts  Получить указатель на интерфейс частей тела
Интерфейс...Синтаксис Automation:
LPBODYPARTS  GetBodyParts();
Синтаксис COM:
LPDISPATCH GetBodyParts();
Возвращаемое значение:

указатель на интерфейс " если объект состоит из частей,
массива тел ksBodyParts 
или IBodyParts.
NULL " если объект не имеет частей.

Примечание:o
Метод позволяет получить интерфейс частей тела. Если объект не имеет частей, то метод
вернет NULL. Части тела могут быть у операций вырезания.

GetDefinition  Получить указатель на интерфейс параметров 
объектов и элементов
Интерфейс...Синтаксис Automation:
LPDISPATCH GetDefinition();
Возвращаемое значение:
3042



" указатель на интерфейс IDispatch.

Синтаксис COM:
LPUNKNOWN GetDefinition();
Возвращаемое значение:

" указатель на интерфейс IUnknown.

Примечание:

1. Для доступа к параметрам объекта полученный интерфейс необходимо привести к соот"
ветствующему типу.
Интерфейсы элементов модели...

2. Интерфейсы параметров объектов и элементов выбираются из перечня Obj3dType.

GetFeature  Получить указатель на интерфейс объекта 
дерева, связанного с данным объектом
Интерфейс...Синтаксис Automation:
LPDISPATCH GetFeature();
Синтаксис COM:
LPFEATURE GetFeature();
Возвращаемое значение:

" указатель на интерфейс ksFeature или IFeature "
объект дерева, связанный с данным объектом.

GetParent  Получить указатель на интерфейс компонента, 
владеющего элементом (например, интерфейс детали, 
владеющей указанной гранью)
Интерфейс...Синтаксис Automation:
LPDISPATCH GetParent()
Синтаксис COM:
LPPART GetParent();
Возвращаемое значение:

" указатель на интерфейс ksPart или IPart.
3043



IsCreated  Получить признак существования объекта
Интерфейс...Синтаксис Automation:
BOOL IsCreated();
Синтаксис COM:
BOOL IsCreated();
Возвращаемое значение:

TRUE " если объект уже создан,
FALSE " если объект удален или еще не создан.

IsIt  Проверить объект на соответствие указанному типу
Интерфейс...Синтаксис Automation:
BOOL IsIt (short objType);
Синтаксис COM:
BOOL IsIt (short objType)
Входной параметр:

objType " тип объекта.

Возвращаемое значение:

TRUE " если тип объекта указан правильно.

Типы объектов...
Примечание:
Числовой идентификатор типа объекта не должен превышать идентификатора объекта,
всегда последнего из Entity.

SetAdvancedColor  Изменить параметры цвета и визуальных 
свойств объекта
Интерфейс...Справка системы КОМПАС...

Синтаксис Automation:
BOOL SetAdvancedColor (long color,
double ambient,
double diffuse,
double specularity,
double shininess,
3044



double transparency,
double emission);
Синтаксис COM:
BOOL SetAdvancedColor (COLORREF color,
double ambient,
double diffuse,
double specularity,
double shininess,
double transparency,
double emission);
Входные параметры:

color " цвет,
ambient " общий свет,
diffuse " диффузия,
specularity " зеркальность,
shininess " блеск,
transparency " прозрачность,
emission " излучение.

Возвращаемое значение:

TRUE " в случае успешного завершения.

Update  Изменить свойства объекта (используя ранее 
установленные свойства)
Интерфейс...Синтаксис Automation:
BOOL Update();
Синтаксис COM:
BOOL Update();
Возвращаемое значение:

TRUE " в случае успешного завершения.

Примечание:

1. Изменение параметров объекта через интерфейс его параметров не приводит к пере"
строению модели.

2. Для перестроения объекта в модели (активизации текущих изменений) необходимо выз"
вать данный метод.
Если свойству ksPart::needRebuild компонента, которому принадлежит данный объект,
установлено значение TRUE, то вызов данного метода приведет также к перестроению
модели. Если свойству ksPart::needRebuild установлено значение FALSE, то данный ме"
3045



тод только передаст изменения свойств модельному объекту, и для реального (визуаль"
ного) изменения этих свойств нужно вызвать метод ksPart::RebuildModelEx, с параме"
тром redraw равным TRUE.

3. Объект должен быть предварительно создан методом Create.

Интерфейсы пространственных кривых

Коническая спираль (Интерфейсы ksConicSpiralDefinition и 
IConicSpiralDefinition)
Справка системы КОМПАС...
501_Postroenie_spirali.htm#Conicheskay_spiral
Интерфейс параметров конической спирали.

ksConicSpiralDefini " интерфейс Automation
tion
IConicSpiralDefiniti " интерфейс COM
on

Примечание:
Данный интерфейс можно получить, используя метод интерфейса элемента модели
ksEntity::GetDefinition или IEntity::GetDefinition.

IConicSpiralDefinition  свойства

buildDir  Направление построения спирали
Интерфейс...Справка системы КОМПАС...
501_Postroenie_spirali.htm#Conicheskay_spiral
Тип данных: BOOL
Значения свойства:

TRUE " нормальное (совпадающее с положительным 
направлением нормали к базовой плоскости спирали),

FALSE " обратное.

