Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksAddPowerForm.
Синтаксис Automation:
long ksAddPowerForm (double x, double y);
3676



Входные параметры:

x, y " параметры степенной функции 
(см. Примечание).

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Кусочно"степенная форма состоит из последовательности стыкующихся полиномов:
P0 [0, 1), P1 [1, 2), ... Pk [k, k1),
где Pi " полином, [i, i1) " интервал определения,

Pi( t ).x = a0.x a1.x * (t " i) a2.x * (t " i) * (t " i) ... an.x * (t " i)^n
Pi( t ).y = a0.y a1.y * (t " i) a2.y * (t " i) * (t " i) ... an.y * (t " i)^n

Функция ksAddPowerForm должна вызываться последовательно n1 раз для пар параме"
тров (a0.x, a0.y), (a1.x, a1.y), ... (an.x, an.y).
Затем вызывается функция ksCreatePowerArc, которая создает из переданных параме"
тров дугу NURBS степени n 1 и присоединяет ее к существующей кривой NURBS.

ksBezier  Создать кривую Безье
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Bezier.
Синтаксис Automation:
long ksBezier (short closed, long style);
Входные параметры:

closed " признак замыкания сплайна: 
0 " незамкнутый, 
1 " замкнутый,

style стиль линии.

Системные стили линий...
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
3677



Кривая Безье " составной объект. Объекты ksDocument2D::ksBezierPoint, вводимые меж"
ду методами ksDocument2D::ksBezier и ksDocument2D::ksEndObj, принадлежат кривой.
ksDocument2D::ksEndObj возвращает указатель на кривую Безье.

ksBezierPoint  Создать точку для построения кривой 
Безье
Интерфейс...
Аналог данного метода при использовании API экспортных функций " BezierPoint.
Синтаксис Automation:
long ksBezierPoint (LPDISPATCH param);
Входной параметр:

param " указатель на интерфейс кривой Безье ksBezierPointParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksCreatePowerArc  Построить дугу NURBS кусочно
степенным способом и присоединить ее к 
существующей кривой NURBS
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksCreatePowerArc.
Синтаксис Automation:
long ksCreatePowerArc();
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание :
Параметры для построения дуги определяются функцией ksAddPowerForm.

ksNurbs  Создать кривую NURBS
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Nurbs.
Синтаксис Automation:
long ksNurbs (short degree, BOOL close, long style);
Входные параметры:
3678



degree " порядок NURBS (степень полинома + 1), от 3 до 10,
close " признак замыкания сплайна: 

FALSE " незамкнутый, 
TRUE " замкнутый,

style стиль линии.

Системные стили линий...
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Узлы кривой определяются следующими далее методами ksDocument2D::ksPoint или
ksDocument2D::ksNurbsPoint.
Описание кривой завершается методом ksDocument2D::ksEndObj, возвращающим указа"
тель на созданную кривую.

ksNurbsForConicCurve  Создать кривую NURBS по 
характеристическим точкам конического сечения
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
NurbsForConicCurve.
Синтаксис Automation:
long ksNurbsForConicCurve (LPDISPATCH xArr, 
LPDISPATCH yArr, 
short style);
Входные параметры:

xArr, yArr " указатели на интерфейсы динамических мас"
сивов ksDynamicArray чисел типа DOUBLE_ARR,

style " стиль линии.

Системные стили линий...
Возвращаемое значение:

указатель на кривую NURBS " в случае удачного завершения,
0 " в случае неудачи.

ksNurbsKnot  Создать узел NURBSкривой
Интерфейс...
3679



Аналог данного метода при использовании API экспортных функций " ksNurbsKnot.
Синтаксис Automation:
long ksNurbsKnot (double knot);
Входной параметр:

knot " узел кривой NURBS.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод предназначен для считывания форматов обмена, в частности, DXF.
Для создания кривой NURBS массив узлов (узловой вектор) задавать не обязательно. Но
если он задан, то должен подчиняться следующим правилам:

1. Узловой вектор не должен быть убывающим.
2. Количество узлов (knotCount) должно быть:

▼ для разомкнутого сплайна knotCount= degree + pointCount;
▼ для замкнутого сплайна knotCount= degree + pointCount + ( degree "1);

где:
degree     " степень сплайна,
pointCount " количество точек.

ksNurbsPoint  Создать узел NURBS
Интерфейс...
Аналог данного метода при использовании API экспортных функций " NurbsPoint.
Синтаксис Automation:
long ksNurbsPoint (LPDISPATCH param);
Входной параметр:

param " указатель на интерфейс ksNurbsPointParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
3680



Создать очередной узел кривой NURBS. Узлы кривой определяются методами
ksDocument2D::ksPoint или ksDocument2D::ksNurbsPoint. Описание кривой завершается
методом ksDocument2D::ksEndObj, возвращающим указатель на созданную кривую.

ksPolyline  Создать ломаную линию
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksPolyline.
Синтаксис Automation:
long ksPolyline (long style);
Входной параметр:

style " стиль линии.

Системные стили линий...Возвращаемое значение:

указатель на ломаную линию " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Ломаная линия " составной объект. Объекты ksDocument2D::ksPoint, вводимые между
методами ksDocument2D::ksPolyline и ksDocument2D::ksEndObj, принадлежат ломаной
линии. ksDocument2D::ksEndObj возвращает указатель на ломаную линию.

Окна

ksGetZoomScale  Получить масштаб и центр изменения 
масштаба окна графического документа
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksGetZoomScale.
Синтаксис Automation:
long ksGetZoomScale (double* x, 
double* y, 
double* scale_);
Выходные параметры:

x, y " координаты (в СК вида) точки центра изменения масштаба,
scale_ " коэффициент изменения масштаба изображения.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.
3681



ksZoom  Задать масштаб изображения прямоугольной 
рамкой
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksZoom.
Синтаксис Automation:
long ksZoom (double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

x1, y1 " координаты (в СК вида) первой точки диагонали рамки,
x2, y2 " координаты (в СК вида) второй точки диагонали рамки.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksZoomScale  Задать масштаб изображения по точке и 
коэффициенту масштабирования
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksZoomScale.
Синтаксис Automation:
long ksZoomScale (double x, 
double y, 
double scale_);
Входные параметры:

x1, y1 " координаты (в СК вида) точки центра изменения масштаба,
scale_ " коэффициент изменения масштаба изображения.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.
3682



тель на о
ksZoomPrevNextOrAll  Показать документ в 
предыдущем/последующем масштабе или документ 
целиком
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksZoomPrevNextOrAll.
Синтаксис Automation:
long ksZoomPrevNextOrAll (short type);
Входной параметр:

type тип масштабирования:
0 " следующий масштаб,
1 " предыдущий масштаб,
2 " весь документ.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Параметры

ksGetObjParam  Получить параметры объекта
Интерфейс...
Аналог данного метода при использовании API экспортных функций " GetObjParam.
Синтаксис Automation:
long ksGetObjParam (long reference, 
LPDISPATCH param, 
long paramType);
Входной параметр:

reference " указа

Выходные параметры:

param " указатель на интерфейс параметров,
paramType " тип параметров объекта или номер страницы (габаритного 

прямоугольника) технических требований (TECHNICALDEMAND_OBJ).

Типы объектов и интерфейсы...
Типы параметров объектов...
Возвращаемое значение:
3683



тип объекта " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Вызов метода с нулевыми значениями параметров param и parType позволяет получить
тип объекта по его reference.

ksSetObjParam  Установить параметры объекта
Интерфейс...
Аналог данного метода при использовании API экспортных функций " SetObjParam.
Синтаксис Automation:
long ksSetObjParam (long Reference, 
LPDISPATCH param, 
long paramType);
Входные параметры:

Reference " указатель на объект,
param " тип параметров объекта или индекс строки в

массиве для объектов TECHNICALDEMAND_OBJ
и TEXT_OBJ,

paramType " тип параметров объекта или номер страницы
(габаритного прямоугольника) технических тре"
бований (TECHNICALDEMAND_OBJ).

Типы объектов и интерфейсы...
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Связи и ограничения

ksDestroyObjConstraint  Удалить параметрическую 
связь или ограничение, наложенные на указанный 
объект
Интерфейс...

Справка системы КОМПАС...
493_Glava58_Prosmotr_i_udalenie.htmАналог данного метода при использова"
нии API экспортных функций " ksDestroyObjConstraint.
Синтаксис Automation:
long ksDestroyObjConstraint (long obj, LPDISPATCH par);
3684



Входные параметры:

obj " указатель на объект,
par " указатель на интерфейс параметрических связей и ограничений 

ksConstraintParam.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

ksGetObjConstraints  Получить параметрические связи и 
ограничения, наложенные на указанный объект
Интерфейс...

Справка системы КОМПАС...
493_Glava58_Prosmotr_i_udalenie.htmАналог данного метода при использова"
нии API экспортных функций " ksGetObjConstraints.
Синтаксис Automation:
LPDISPATCH ksGetObjConstraints (long obj);
Входной параметр:

obj " указатель на объект.

Возвращаемое значение:

" указатель на интерфейс динамического мас"
сива ksDynamicArray ограничений типа
CONSTRAINT_ARR.

Смотрите также
ksConstraintParam

ksSetObjConstraint  Установить параметрическую связь 
или ограничение
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций " ksSetObjConstraint 
Синтаксис Automation:
long ksSetObjConstraint (long obj, LPDISPATCH par);
Входные параметры:
3685



obj " объект, на который накладывается связь или
ограничение,

par " указатель на интерфейс параметрических свя"
зей и ограничений ksConstraintParam.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Навигация

ksGetObjGabaritRect  Получить габаритный 
прямоугольник объекта
Интерфейс...
Аналог данного метода при использовании API экспортных функций " GetObjGabaritRect.
Синтаксис Automation:
long ksGetObjGabaritRect (long p, 
LPDISPATCH param);
Входные параметры:

p " указатель на объект,
param " указатель на интерфейс параметров прямоу"

гольника ksRectParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Габаритный прямоугольник возвращается в координатах листа.

ksGetViewObjCount  Получить количество объектов в 
виде
Интерфейс...
Аналог данного метода при использовании API экспортных функций " GetViewObjCount.
Синтаксис Automation:
long ksGetViewObjCount (long p);
Входной параметр:
3686



p " указатель на вид.

Возвращаемое значение:

количество объектов в виде " в случае удачного завершения,
"1 " в случае неудачи.

Примечание:
В случае, если p=0, возвращается число объектов текущего вида или фрагмента.

ksKeepReference  Запомнить указатель на объект
Функция не поддерживается
Интерфейс...
Аналог данного метода при использовании API экспортных функций " KeepReference.
Синтаксис Automation:
long ksKeepReference (long r);
Входной параметр:

r " указатель на графический объект.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

ksReleaseReference  Освободить указатель объекта
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ReleaseReference.
Синтаксис Automation:
long ksReleaseReference (long p);
Входной параметр:

p " указатель на объект.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
3687



Не временный объект не уничтожается. В результате таблица объектов сокращается, а
операции, связанные с перебором объектов, ускоряются.

Параметрические переменные

ksGetDocVariableArray  Получить массив 
параметрических переменных графического документа 
или вставки фрагмента
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetDocVariableArray.
Синтаксис Automation:
LPDISPATCH ksGetDocVariableArray (long p);
Входной параметр:

p " указатель на документ или вставку фрагмента.

Возвращаемое значение:

" указатель на динамический массив
ksDynamicArray параметрических переменных
типа VARIABLE_ARR.

Смотрите также ksVariable

ksGetDimensionVariableName  Получить имя 
параметрической переменной, связанной с размером
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetDimensionVariableName.
Синтаксис Automation:
BSTR ksGetDimensionVariableName (long dimObj);
Входной параметр:

dimObj " указатель на размер.

Возвращаемое значение:

строка " если размеру поставлена в соответствие переменная,
с именем переменной
пустая строка " если размеру не поставлена в соответствие переменная 

или в случае неудачи.
3688



ksSetDocVariableArray  Заменить значения и, если 
нужно, комментарии у параметрических переменных 
графического документа или вставки фрагмента
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций "
ksSetDocVariableArray.
Синтаксис Automation:
long ksSetDocVariableArray (long obj, 
LPDISPATCH arr, 
BOOL setNote);
Входные параметры:

obj " указатель на документ или вставку фрагмента,
arr " указатель на динамический массив

ksDynamicArray параметрических переменных
типа VARIABLE_ARR,

setNot признак редактирования комментариев:
e 0 " комментарии не менять, 

1 " комментарии менять.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Смотрите также ksVariable

Работа с документом

ksGetDocumentType  Получить тип документа
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetDocumentType.
Синтаксис Automation:
long ksGetDocumentType (long doc);
Входные параметры:

doc " указатель на документ,

Возвращаемое значение:
3689



тип документа " в случае успешного завершения,
0 " в случае неудачи.

Типы документов
Примечание:
Если указатель doc = 0, возвращается тип активного документа.

ksRebuildDocument
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksRebuildDocument.
Синтаксис Automation:
BOOL ksRebuildDocument();
Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Позволяет перестроить все ассоциативные виды чертежа. Если в чертеже нет ни одного
ассоциативного вида, перестраиваться ничего не будет. После вызова функции ассоци"
ативные виды перерисовываются в соответствии с деталями, изображение которых в
них содержится.

Оформление чертежа

ksCloseDocument  Закрыть документ (чертеж, 
фрагмент, спецификацию, текстовый документ, деталь, 
сборку) 
Интерфейс...

Справка системы КОМПАС...
Glava_13_Otkritie_zakritie_dok.htm
Аналог данного метода при использовании API экспортных функций " CloseDocument.
Синтаксис Automation:
BOOL ksCloseDocument();
Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.
3690



Примечание:
Если документ не сохранили, взводится флаг соответствующей ошибки.

ksCloseTechnicalDemand  Закрыть технические 
требования
Интерфейс...Справка системы КОМПАС...
CM_VIEW_TDEM_SIMPLE.htm
Аналог данного метода при использовании API экспортных функций "
CloseTechnicalDemand.
Синтаксис Automation:
long ksCloseTechnicalDemand();
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksCreateDocument  Создать документ (чертеж, 
фрагмент, текстовый документ, деталь, сборку)
Интерфейс...Справка системы КОМПАС...
Glava_12_Sozdanie_sohranenie_dok.htm
Аналог данного метода при использовании API экспортных функций " CreateDocument.
Синтаксис Automation:
BOOL ksCreateDocument (LPDISPATCH par);
Входной параметр:

par " указатель на интерфейс параметров документа
ksDocumentParam.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Созданный документ становится текущим.
3691



ksCreateSheetView  Создать вид
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " CreateSheetView.
Синтаксис Automation:
long ksCreateSheetView (LPDISPATCH par, long* number);
Входные параметры:

par " указатель на интерфейс параметров вида ksViewParam,
number " номер вида.

Возвращаемое значение:

указатель на вид " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Созданный вид становится текущим. 
Если вид с указанным номером уже существует, новый вид не создается (ошибка).
Если указать *number = 0, то создается вид с номером по возрастанию.

ksGetDocOptions  Получить настройки графического 
документа
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " GetDocOptions.
Синтаксис Automation:
long ksGetDocOptions (long optionsType, LPDISPATCH param);
Входной параметр:

optionsType " тип настройки.

Выходной параметр:

param " указатель на интерфейс параметров.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.
3692



Соответствие входных и выходных параметров...

ksGetReferenceDocumentPart  Получить указатель на 
объект оформления чертежа
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
GetReferenceDocumentPart.
Синтаксис Automation:
long ksGetReferenceDocumentPart (short t);
Входной параметр:

t " тип объекта оформления чертежа.

Возвращаемое значение:

указатель на объект выбранного типа " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Метод предназначен для использования в листе чертежа.

ksGetReferenceDocumentPartEx  Получить указатель на 
объект оформления чертежа
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
GetReferenceDocumentPartEx.
Синтаксис Automation:
long ksGetReferenceDocumentPartEx (short t, long sheetNumb);
Входные параметры:

t " тип объекта оформления чертежа,
3693



sheetNumb " зависит от типа получаемого объекта офор"
мления чертежа:
для t=0 sheetNumb " номер листа, начиная с 1, 
для t=1 sheetNumb не используется,
для t=2 sheetNumb не используется,
для t=3 sheetNumb не используется,
для t=4 sheetNumb " номер спецификации, на"
чиная с 1 (0 " текущая спецификация), 
для t=5 sheetNumb не используется,
для t=6 sheetNumb " номер листа, начиная с 1.

Типы объектов оформления чертежа...
Возвращаемое значение:

указатель на объект выбранного типа " в случае удачного завершения,
0 " в случае неудачи.

ksGetViewNumber  Получить номер вида по указателю 
на вид
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " GetViewNumber.
Синтаксис Automation:
long ksGetViewNumber (long p);
Входной параметр:

p " указатель на вид.

Возвращаемое значение:

номер вида " в случае удачного завершения,
"1 " в случае неудачи.

Примечание:
Если p " указатель на вид или объект вида, возвращается номер вида этого объекта.

ksGetViewReference  Получить указатель на вид по 
номеру вида
Интерфейс...
3694



Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " GetViewReference 
Синтаксис Automation:
long ksGetViewReference (long number);
Входной параметр:

number " номер вида.

Возвращаемое значение:

указатель на вид " в случае удачного завершения,
0 " в случае неудачи.

ksGetZona  Получить зону текущего чертежа по 
заданной точке
Интерфейс...Справка системы КОМПАС: определение зоны источника...
Справка системы КОМПАС:разбиение на зоны...

Аналог данного метода при использовании API экспортных функций " ksGetZona.
Синтаксис Automation:
BSTR ksGetZona (double x, 
double y, 
long* res);
Входные параметры:

x, y " координаты точки в текущем документе.

Выходной параметр:

res результат работы метода:
 0 " ошибка (например, точка вне документа или
документ " не чертеж),
"1 " в текущем документе нет разбиения на зоны;
 1 " успешное завершение.

Возвращаемое значение:

" строка с названием зоны.
3695



ksNewViewNumber  Определить номер следующего 
вида
Интерфейс...
Аналог данного метода при использовании API экспортных функций " NewViewNumber.
Синтаксис Automation:
long ksNewViewNumber();
Возвращаемое значение:

номер следующего вида " в случае успешного завершения,
0 " в случае неудачи.

ksOpenDocument  Открыть документ (чертеж, 
фрагмент, спецификацию, текстовый документ, деталь, 
сборку)
Интерфейс...Аналог данного метода при использовании API экспортных функций "
OpenDocument.
Синтаксис Automation:
BOOL ksOpenDocument (BSTR nameDoc, BOOL regim);
Входные параметры:

nameDoc " имя документа,
regim " режим работы с документом:

0 " видимый, 
1 " невидимый ("слепой")

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Невидимый режим применяется при пакетном (скрытом) формировании документа.
Открытый документ автоматически становится текущим.

ksOpenTechnicalDemand  Открыть технические 
требования
Интерфейс...Аналог данного метода при использовании API экспортных функций "
OpenTechnicalDemand.
Синтаксис Automation:
long ksOpenTechnicalDemand (LPDISPATCH pGab, 
3696



а
х

long style);
Входные параметры:

pGab " указатель на интерфейс динамического массив
ksDynamicArray параметров листов технически
требований типа RECT_ARR,

style " стиль текста для технических требований.

Системные стили текстов...
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Технические требования " составной объект оформления чертежа. Объекты
ksDocument2D::ksTextLine, вводимые между ksOpenTechnicalDemand и
ksDocument2D::ksCloseTechnicalDemand, принадлежат техническим требованиям.

2. Технические требования могут состоять из нескольких строк, строки могут состоять из
нескольких компонент. Компоненты могут изменять параметры текущего шрифта.
ksCloseTechnicalDemand возвращает указатель на технические требования.
Если style = 0, то стиль текста " умолчательный.

ksOpenView  Сделать текущим существующий вид с 
указанным номером
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " OpenView.
Синтаксис Automation:
long ksOpenView (long number);
Входной параметр:

number " номер вида.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.
3697



ksSaveDocument  Сохранить документ (чертеж, 
фрагмент, спецификацию, текстовый документ, деталь, 
сборку)
Интерфейс...Аналог данного метода при использовании API экспортных функций "
SaveDocument.
Синтаксис Automation:
BOOL ksSaveDocument (BSTR fileName);
Входной параметр:

fileName " полное имя файла.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

ksSaveDocumentEx  Сохранить документ в выбранной 
версии
Интерфейс...Аналог данного метода при использовании API экспортных функций "
SaveDocumentEx.
Синтаксис Automation:
BOOL ksSaveDocumentEx (BSTR fileName, long version);
Входные параметры:

fileName " полное имя файла,
version " версия для сохранения:

"1 " в предыдущую версию,
0 " в текущую версию,
1 " в версию 5.11.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Если fileName = NULL, то используется имя файла из документа. Если же и в документе
отсутствует имя файла, то взводится ошибка.

ksSetDocOptions  Заменить тип настройки графического 
документа
Интерфейс...
3698



Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " SetDocOptions.
Синтаксис Automation:
long ksSetDocOptions (long optionsType, LPDISPATCH param);
Входной параметр:

optionsType " тип настройки.

Выходной параметр:

param " указатель на интерфейс параметров.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Соответствие входных и выходных параметров...

ksSpecRough  Проставить знак неуказанной 
шероховатости в чертеже
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " ksSpecRough.
Синтаксис Automation:
long ksSpecRough (LPDISPATCH par);
Входной параметр:

par " указатель на интерфейс знака неуказанной ше"
роховатости ksSpecRoughParam.

Возвращаемое значение:

указатель на знак неуказанной шероховатости " в случае удачного завершения,
0 " в случае неудачи.
3699



Группы объектов

ksAddObjGroup  Добавить объект в группу
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " AddObjGroup.
Синтаксис Automation:
long ksAddObjGroup (long group, long obj);
Входные параметры:

group " указатель на группу,
obj " указатель на добавляемый объект.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель на группу равен нулю, то добавление производится в группу выделения
(т.е. происходит выделение объекта).

ksClearGroup  Очистить группу объектов
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " ksClearGroup.
Синтаксис Automation:
long ksClearGroup (long group, BOOL deleteTmp);
Входные параметры:

group " указатель на очищаемую группу 
(0 " очищается группа селектирования),

deleteTmp " признак удаления временных элементов: 
TRUE " временные элементы удаляются,
FALSE " временные элементы сохраняются.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.
3700



ksEndGroup  Завершить создание группы
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " EndGroup.
Синтаксис Automation:
long ksEndGroup();
Возвращаемое значение:

1 " в случае успеха,
0 " в случае неудачи.

Примечание:
Объекты вида, виды, слои, если они вводились между методами
ksDocument2D::ksNewGroup и ksDocument2D::ksEndGroup, попадают в группу.
Если группа временная, объекты считаются временными.

ksExcludeObjGroup  Исключить объект из группы
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " ExcludeObjGroup.
Синтаксис Automation:
long ksExcludeObjGroup (long group, long obj);
Входные параметры:

group " указатель на группу,
obj " указатель на исключаемый объект.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель на группу равен нулю, то исключение производится из группы выделения
(т.е. снимается выделение объекта чертежа). Если объект создавался в режиме форми"
рования временной группы, то при исключении он автоматически удаляется.
3701



ksExistGroupObj  Проверить группу на наличие объектов
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " ExistGroupObj.
Синтаксис Automation:
long ksExistGroupObj (long group);
Входной параметр:

group " указатель на группу.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель группы равен нулю, то проверяется группа выделения (есть ли выделен"
ные объекты документа).

ksGetGroup  Получить указатель на группу по ее имени
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " GetGroup.
Синтаксис Automation:
long ksGetGroup (BSTR name);
Входной параметр:

name " имя группы.

Возвращаемое значение:

указатель на группу " в случае удачного завершения,
0 " в случае неудачи.

ksGetGroupName  Получить имя группы по указателю на 
группу
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " ksGetGroupName.
Синтаксис Automation:
3702



BSTR ksGetGroupName (long gr, long* group, long reserve);
Входные параметры:

gr " указатель на группу,
reserve " параметр, зарезервированный для дальнейше"

го использования (в настоящее время его значе"
ние не учитывается).

Выходной параметр:

group " тип указанной группы: 
 0 " ошибка указания группы, 
 1 " именная группа (имя есть),
 2 " рабочая группа (имени нет),

Возвращаемое значение:

" строка с именем группы.

ksNewGroup  Создать новую группу объектов
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " NewGroup.
Синтаксис Automation:
long ksNewGroup (short type);
Входной параметр:

type " тип группы: 
0 " модельная, 
1 " временная.

Возвращаемое значение:

указатель на группу " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1. В модельной группе лежат объекты, которые уже созданы в документе. Во временной
группе могут лежать временные и существующие объекты.
Если для временной группы не будет вызван метод ksDocument2D::ksStoreTmpGroup, то
временные объекты группы будут уничтожены по окончании работы библиотеки.
3703



2. Создаваемые в дальнейшем до вызова метода ksDocument2D::ksEndGroup объекты чер"
тежа записываются в модель или во временный список объектов (например, для фан"
томной прорисовки при вводе).

3. Для дальнейшей обработки группы используются те же методы редактирования, что и
для отдельных объектов, так как указатель на группу ничем не отличается от указателя
на отдельный объект.

4. Группа может объединять объекты вида, виды и слои.
5. При создании новой группы необязательно закрывать предыдущую (т.е. поддерживает"

ся вложенность групп).

ksSaveGroup  Сохранить группу объектов в документе
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " SaveGroup.
Синтаксис Automation:
long ksSaveGroup (long group, 
BSTR name);
Входные параметры:

group " указатель на группу,
name " имя сохраняемой группы.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Данный метод действителен только для модельной группы. После его выполнения груп"
па автоматически сохраняется в чертеже при его записи. В противном случае группа дей"
ствительна только в текущем сеансе работы. Если указатель группы равен нулю, то со"
храняется группа селектирования (выделенные объекты документа).

ksSelectGroup  Автоматически сформировать группу 
объектов
Интерфейс..

Cправка системы КОМПАС: группы объектов...
Cправка системы КОМПАС:команды выделения объектов рамкой...

Аналог данного метода при использовании API экспортных функций " SelectGroup.
3704



Синтаксис Automation:
long ksSelectGroup (long group, 
short selectMode, 
double xmin, 
double ymin, 
double xmax, 
double ymax);
Входные параметры:

group " указатель на группу,
selectMode " тип выделения:

1 " объекты внутри прямоугольника""ловушки",
2 " объекты снаружи прямоугольника""ловушки",
3 " 3 " объекты, целиком или частично попавшие
в прямоугольник""ловушку".

xmin, ymin " координаты левой нижней вершины прямоу"
гольника""ловушки",

xmax, ymax " координаты правой верхней вершины прямоу"
гольника""ловушки".

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель на группу равен нулю, то добавление производится в группу выделения
(т.е. происходит выделение объектов документа).

ksStoreTmpGroup  Вставить временную группу в 
документ (группа "рассыпается")
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " StoreTmpGroup.
Синтаксис Automation:
long ksStoreTmpGroup (long group);
Входной параметр:

group " указатель на группу.

Возвращаемое значение:
3705



1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Временные объекты не записываются в документ и на экране не отображаются. Они со"
храняются только до конца работы создающей их библиотечной команды. Временная
группа чаще всего служит для отрисовки фантомного изображения и используется в ка"
честве параметров в методах ksDocument2D и ksDocument2D::ksCursor. Метод
ksDocument2D::ksStoreTmpGroup записывает все объекты временной группы в документ
(т.е. фиксирует их). Сама же группа получает статус постоянной.

ksViewGetObjectArea  Получить группу графических 
объектов, определяющих область выделения, используя 
визуальный процесс
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksViewGetObjectArea.
Синтаксис Automation:
long ksViewGetObjectArea();
Возвращаемое значение:

указатель на временную группу " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Так как сиcтема может работать только с одним процессом, то нужно завершить другие
процессные функции: ksDocument2D::ksCursor, ksDocument2D::ksPlacement,
ksDocument2D::ksCommandWindow, ksDocument2D::ksEditViewObject.

Операции редактирования

ksApproximationCurve  Аппроксимировать кривую 
дугами и отрезками с определенной точностью
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksApproximationCurve.
Синтаксис Automation:
long ksApproximationCurve (long p, 
double eps, 
3706



ния,
BOOL curentLayer, 
double maxRad, 
BOOL smooth);
Входные параметры:

p " указатель на аппроксимируемую кривую,
eps " точность аппроксимации (от 1e"7 до 1),
curentLayer  " тип размещения получившихся объектов на слоях: 

FALSE " на слой кривой, 
TRUE " в текущий слой,

maxRad " максимально допустимый радиус дуг, 
(0 " ограничение не накладывается),

smooth " признак сопряжения:
1 " гладкое, 
0 " не гладкое.

Возвращаемое значение:

указатель на контур, дугу, отрезок " в случае удачного заверше
0 " в случае неудачи.

Примечание:
Аппроксимируются кривые Безье, NURBS, эквидистанты, эллипсы, дуги эллипсов и кон"
туры. Остальные кривые игнорируются.

ksClearRegion  Очистить указанную область внутри или 
снаружи границ, заданных группой объектов
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций " ksClearRegion.
Синтаксис Automation:
long ksClearRegion (long grClear, 
long grRegion, 
BOOL inside);
Входные параметры:

grClear " группа геометрии, которую нужно очистить
(0 " просматривать все объекты текущего вида),

grRegion " группа объектов, задающая область очистки,
inside " признак расположения удаляемых объектов: 

0 " снаружи области, ограниченной grRegion, 
1 " внутри области.

Возвращаемое значение:
3707



1 " в случае удачного завершения,
0 " в случае неудачи.

ksCopyObj  Скопировать объект
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций " ksCopyObj.
Синтаксис Automation:
long ksCopyObj (long ref, 
double xOld, 
double yOld, 
double xNew, 
double yNew, 
double scale_, 
double angle);
Входные параметры:

ref " указатель на объект,
xOld, yOld " координаты базовой точки объекта,
xNew, yNew " координаты нового положения базовой точки,
scale " масштаб,
angle " угол поворота в градусах.

Возвращаемое значение:

указатель на получившийся объект или группу объектов " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1. Если указатель на объект равен нулю, то копируется группа селектирования (выделен"
ные объекты документа).

2. При копировании одиночного объекта новый объект создается на текущем слое текуще"
го вида.

3. При копировании группы объектов слой сохраняется.
4. При копировании одиночного многослойного макрообъекта он перестает быть много"

слойным. Макро и входящие в него объекты переносятся на текущий слой. Для копиро"
вания многослойного макро с сохранением многослойности требуется добавить его в
группу.
3708



ksDecomposeObj  Разбить объект на составляющие 
части  отрезки, дуги, тексты
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций " DecomposeObj.
Синтаксис Automation:
long ksDecomposeObj (long p, 
short level, 
double arrow, 
BOOL type);
Входные параметры:

p " указатель на разбиваемый объект,
level " степень детализации разбиения:

0 " отрезки, дуги, тексты, точки,
1 " отрезки, тексты, точки,
2 " отрезки, дуги, тексты,
4 " отрезки, дуги, точки, тексты,
5 " отрезки, дуги, тексты, заливки стрелок и тре"
угольников баз,
6 " разбиение объектов из ассоциативного черте"
жа на составляющие с учетом видимых и неви"
димых участков,

arrow " размер "стрелки прогиба",
type " признак выбранной системы координат: 

0 " разбиение объекта в СК вида, 
1 " разбиение объекта в СК листа.

Возвращаемое значение:

указатель на временную " в случае удачного завершения,
группу компонент сложного
объекта
0 " в случае неудачи.

Примечания:

1. Метод используется при разработке различных конверторов, преобразующих информа"
цию из системы КОМПАС во внешние форматы.

2. Текущий документ должен быть графическим.
3. Графический документ разбивается по частям. Такими частями могут быть объекты ви"

да, основная надпись, технические требования, спецификация на листе, знак неуказан"
ной шероховатости.
3709



4. Спецификация разбивается по листам (p " указатель на документ"спецификацию, type "
номер листа спецификации, начиная с 1).

5. Сложные кривые заменяются набором отрезков и дуг (при level=1 " только набором от"
резков).

6. Точность приближения к исходному объекту задается значением параметра arrow " мак"
симальным расстоянием между исходным объектом и аппроксимирующим отрезком.

7. Если level=2, точки превращаются в графические объекты, служащие для отрисовки этих
точек в КОМПАС"ГРАФИК (например, в два отрезка для точки типа "крест"). В остальных
случаях точки (в том числе отрисованные в виде "крестов", "треугольников" и т.д.) прев"
ращаются в объект типа "точка".

8.  Во всех случаях, кроме level=4, сложные тексты (например, тексты, написанные буквами
разного начертания " прямого и курсивного) разбиваются на тексты с одинаковыми при"
знаками. При level=4 тексты не изменяются.

9. Исходный объект после разбиения не изменяется.
См. также:
Метод ksDocument2D::ksConvertTextToCurve " Преобразовать указанный текст в кривые.

ksDeleteObj  Удалить объект
Интерфейс...
Аналог данного метода при использовании API экспортных функций " DeleteObj.
Синтаксис Automation:
long ksDeleteObj (long ref);
Входной параметр:

ref " указатель на объект.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель ref равен нулю, то удаляются выделенные объекты документа.

ksEnableUndo  Включить/отключить отмену 
предыдущих операций
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksEnableUndo.
Синтаксис Automation:
BOOL ksEnableUndo (BOOL enable);
3710



Входные параметры:

enable " признак отмены операций:
FALSE " отключить,
TRUE " включить.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:

1. Если enable=FALSE, количество шагов отмены операций устанавливается равным нулю.
2. Если enable=TRUE, восстанавливается старое значение количества шагов отмены опера"

ций, измененное вызовом этого метода с параметром enable=FALSE.
3. Если метод ранее не вызывался, количество шагов отмены операций будет равно умол"

чательному значению.

ksMoveObj  Сдвинуть объект
Интерфейс...
Аналог данного метода при использовании API экспортных функций " MoveObj.
Синтаксис Automation:
long ksMoveObj (long ref, 
double dx, 
double dy);
Входные параметры:

ref " указатель на объект,
dx, dy " вектор смещения объекта.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель ref равен нулю, то сдвигаются выделенные объекты документа.

ksReadGroupFromClip  Прочитать графические объекты 
из буфера обмена и разместить их во временной группе
Интерфейс...
3711



Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций "
ksReadGroupFromClip.
Синтаксис Automation:
long ksReadGroupFromClip();
Возвращаемое значение:

указатель на группу " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Графические объекты должны принадлежать одному виду. Параметрические связи и ог"
раничения объектов при чтении из буфера теряются, атрибуты сохраняются.

ksRotateObj  Повернуть объект
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций " RotateObj.
Синтаксис Automation:
long ksRotateObj (long ref, 
double x, 
double y, 
double angle);
Входные параметры:

ref " указатель на объект,
x, y " координаты центра поворота,
angle " угол поворота (в градусах).

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если указатель ref равен нулю, то поворачиваются выделенные объекты документа.

ksSymmetryObj  Отразить объект относительно оси
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций " ksSymmetryObj.
3712



Синтаксис Automation:
long ksSymmetryObj (long ref, 
double x1, 
double y1, 
double x2, 
double y2, 
BSTR copy);
Входные параметры:

ref " указатель на объект,
x1, y1 " координаты первой точки на оси,
x2, y2 " координаты второй точки на оси,
copy " режим копирования:

0 " исходные объекты удаляются,
1 " исходные объекты оставляются.

Возвращаемое значение:

указатель на получившийся " в случае удачного заверше"
объект или группу объектов ния,
0 " в случае неудачи.

Примечание:
Если указатель ref равен нулю, то зеркально отображаются выделенные объекты доку"
мента.

ksTransformObj  Преобразовать объект по 
установленной матрице
Интерфейс...
Аналог данного метода при использовании API экспортных функций " TransformObj.
Синтаксис Automation:
long ksTransformObj (long ref);
Входной параметр:

ref " указатель на объект.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
3713



Для работы с матрицами служат методы ksDocument2D::ksMtr и
ksDocument2D::ksDeleteMtr.

ksTrimNurbs  Усечь NURBS
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksTrimNurbs.
Синтаксис Automation:
long ksTrimNurbs (long pObj, 
double tMin, 
double tMax );
Входные параметры:

pObj " указатель на кривую NURBS
или 0 для создаваемой кривой NURBS,

tMin, tMax " границы интервала для усечения.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksTrimmCurve  Усечь кривую, оставив часть между 
указанными точками
Интерфейс...

Справка системы КОМПАС...
CM_CURVEOPER_CUT.htmАналог данного метода при использовании API экспортных
функций " ksTrimCurve.
Синтаксис Automation:
long ksTrimmCurve (long curve,
double x1, double y1,
double x2, double y2,
double x3, double y3,
bool deleteOldCurve );
Входные параметры:

curve " указатель на усекаемую кривую,
x1, y1 " координаты начала оставляемого участка,
x2, y2 " координаты конца оставляемого участка,
3714



x3, y3 " координаты точки, определяющей на"
правление усечения для замкнутых кривых
(эта точка принадлежит оставляемому
участку),

deleteOldCurv " признак удаления усекаемой кривой:
e TRUE " кривая будет удалена после усече"

ния, 
FALSE " кривая не будет удалена после усе"
чения.

Возвращаемое значение:

указатель на усеченную кривую " в случае успеха,
0 " в случае неудачи.

Примечание:
Если указанные точки не лежат на кривой, то усечение производится по их проекциям на
кривую.

ksWriteGroupToClip  Разместить группу в буфере 
обмена с удалением или оставлением геометрии в 
документеисточнике (скопировать или вырезать 
геометрию в буфер обмена)
Интерфейс...

Справка системы КОМПАС...
Аналог данного метода при использовании API экспортных функций "
ksWriteGroupToClip.
Синтаксис Automation:
long ksWriteGroupToClip (long group, 
BOOL copy);
Входные параметры:

group " указатель на группу,
copy " признак копирования или вырезания: 

1 " копирование, 
0 " вырезание.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.
3715



Редактирование графических объектов

ksEditViewObject  Запустить визуальный процесс 
редактирования объекта
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksEditViewObject.
Синтаксис Automation:
int ksEditViewObject (long ref);
Входной параметр:

ref " указатель на объект.

Возвращаемое значение:

1 " объект отредактирован,
0 " объект не отредактирован.

Примечание :
Так как сиcтема может работать только с одним процессом, требуется завершить другие
процессные функции: ksDocument2D::ksCursor ksDocument2D::ksPlacement,
ksDocument2D::ksCommandWindow, ksDocument2D::ksCreateViewObject.

ksExistObj  Проверить существование объекта
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ExistObj.
Синтаксис Automation:
long ksExistObj(long ref);
Входной параметр:

ref " указатель на объект.

Возвращаемое значение:

1 " в случае наличия объекта,
0 " в случае отсутствия объекта.

ksLightObj  Выделить объект цветом ("подсветить" 
объект)
Интерфейс...
Аналог данного метода при использовании API экспортных функций " LightObj.
3716



Синтаксис Automation:
long ksLightObj (long ref, 
short ligth);
Входные параметры:

ref " указатель на объект,
ligth " режим подсветки:

1 " установить выделение,
0 " снять выделение.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksUndoContainer  Включить/отключить объединение 
операций для Undo
Интерфейс...Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " ksUndoContainer.
Синтаксис Automation:
BOOL ksUndoContainer( BOOL add );
Синтаксис COM:
HRESULT ksUndoContainer( BOOL add, BOOL * result );
Входные параметры:

add " false " закрывает текущий контейнер Undo
для объединения операций,
true " создает текущий контейнер Undo для
объединения операций.

Возвращаемое значение:

TRUE " в случае удачного завершения,
FALSE " в случае неудачи.

Примечание:
Метод позволяет включить/отключить объединение операций для Undo.
3717



Создание видов

ksCreateSheetArbitraryView  Создать произвольный 
ассоциативный вид
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksCreateSheetArbitraryView.
Синтаксис Automation:
long ksCreateSheetArbitraryView (LPDISPATCH par, long * number);
Входные параметры:

par " указатель на интерфейс
ksAssociationViewParam параметров ассоциатив"
ного вида,

number " номер создаваемого вида.

Возвращаемое значение:

указатель на вид " в случае успешного завершения,
0 " в случае неудачи.

Примечания:

1. Созданный вид становится текущим.
2. Если значение параметра number = 0, то создается вид с номером по возрастанию.
3. Если значение параметра *number = n, где n = 1 … 255, то создается вид с номером n.

Если вид n существует, то ничего не создается.

ksCreateSheetArrowView  Создать ассоциативный вид 
по стрелке
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksCreateSheetArrowView.
Синтаксис Automation:
long ksCreateSheetArrowView (LPDISPATCH par, long * number, long obj);
Входные параметры:
3718



par " указатель на интерфейс
ksAssociationViewParam параметров ассоциатив"
ного вида,

number " номер создаваемого вида,
obj " указатель на объект "стрелка вида".

Возвращаемое значение:

указатель на вид " в случае успешного завершения,
0 " в случае неудачи.

Примечания:

1. Созданный вид становится текущим.
2. Объект "стрелка вида" должен быть построен в ассоциативном виде. Этот вид будет ба"

зовым для создаваемого вида.
3. Если значение параметра number = 0, то создается вид с номером по возрастанию.
4. Если значение параметра *number = n, где n = 1 … 255, то создается вид с номером n.

Если вид n существует, то ничего не создается.

ksCreateSheetProjectionView  Создать проекционный 
ассоциативный вид
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksCreateSheetStandartViews.
Синтаксис Automation:
long ksCreateSheetProjectionView (LPDISPATCH par, long * number, long view);
Входные параметры:

par " указатель на интерфейс
ksAssociationViewParam параметров ассоциатив"
ного вида,

number " номер создаваемого вида,
view " указатель на базовый вид.

Возвращаемое значение:

указатель на вид " в случае успешного завершения,
0 " в случае неудачи.

Примечания:
3719



1. Созданный вид становится текущим.
2. Базовый вид должен быть ассоциативным.
3. Если значение параметра number = 0, то создается вид с номером по возрастанию.
4. Если значение параметра *number = n, где n = 1 … 255, то создается вид с номером n.

Если вид n существует, то ничего не создается.

ksCreateSheetRemoteView  Создать ассоциативный вид 
выносного элемента
Интерфейс...

Справка системы КОМПАС...
CM_REMOTE_ELEMENT.htm
Аналог данного метода при использовании API экспортных функций "
ksCreateSheetRemoteView.
Синтаксис Automation:
long ksCreateSheetRemoteView (LPDISPATCH par, long * number, long obj);
Входные параметры:

par " указатель на интерфейс
ksAssociationViewParam параметров ассоциатив"
ного вида,

number " номер создаваемого вида,
obj " указатель на объект "Обозначение выносного

элемента".

Возвращаемое значение:

указатель на вид " в случае успешного завершения,
0 " в случае неудачи.

Примечания:

1. Созданный вид становится текущим.
2. Объект "Обозначение выносного элемента" должен быть построен в ассоциативном виде.

Этот вид будет базовым для создаваемого вида.
3. Если значение параметра number = 0, то создается вид с номером по возрастанию.
4. Если значение параметра *number = n, где n = 1 … 255, то создается вид с номером n.

Если вид n существует, то ничего не создается.

ksCreateSheetSectionView  Создать ассоциативный вид 
разреза/сечения
Интерфейс...
3720



Справка системы КОМПАС...
CM_CREATE_SECTION_VIEW.htm
Аналог данного метода при использовании API экспортных функций "
ksCreateSheetSectionView.
Синтаксис Automation:
long ksCreateSheetSectionView (LPDISPATCH par, long * number, long obj);
Входные параметры:

par " указатель на интерфейс
ksAssociationViewParam параметров ассоциатив"
ного вида,

number " номер создаваемого вида,
obj " указатель на объект "линия разреза".

Возвращаемое значение:

указатель на вид " в случае успешного завершения,
0 " в случае неудачи.

Примечания:

1. Созданный вид становится текущим.
2. Объект "линия разреза" должен быть построен в ассоциативном виде. Этот вид будет ба"

зовым для создаваемого вида.
3. Если значение параметра number = 0, то создается вид с номером по возрастанию.
4. Если значение параметра *number = n, где n = 1 … 255, то создается вид с номером n.

Если вид n существует, то ничего не создается.

ksCreateSheetStandartViews  Создать стандартные 
ассоциативные виды
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksCreateSheetStandartViews.
Синтаксис Automation:
BOOL ksCreateSheetStandartViews (LPDISPATCH par, long bitVector, double dx, double dy);
Входные параметры:

par " указатель на интерфейс
ksAssociationViewParam параметров ассоциатив"
ного вида,

bitVector " набор типов, которые нужно создать,
3721



dx " расстояние между видами по горизонтали,
dy " расстояние между видами по вертикали.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Последний из созданных видов становится текущим.

Работа со слоями

ksChangeObjectLayer  Изменить слой одного объекта
Интерфейс...

Справка системы КОМПАС...
CM_SET_OBJECTS_LAYER_3D.htm
Аналог данного метода при использовании API экспортных функций "
ChangeObjectLayer.
Синтаксис Automation:
long ksChangeObjectLayer (long Reference, 
long number);
Входные параметры:

Reference " указатель на объект,
number " номер слоя, на который переносится объект.

Возвращаемое значение:

"1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Слой, на который переносится объект, должен существовать и быть доступным для ре"
дактирования (не фоновым и не выключенным).

ksGetLayerNumber  Получить номер слоя
Интерфейс...
Аналог данного метода при использовании API экспортных функций " GetLayerNumber.
Синтаксис Automation:
long ksGetLayerNumber (long Reference);
3722



Входной параметр:

Reference " указатель на слой.

Возвращаемое значение:

номер слоя " в случае удачного завершения,
"1 " в случае неудачи.

Примечания:

1. Системный слой имеет номер 0.
2. Если Reference " объект слоя, возвращается номер слоя этого объекта.

ksGetLayerReference  Получить указатель на слой по 
номеру слоя текущего вида
Интерфейс...
Аналог данного метода при использовании API экспортных функций " GetLayerReference.
Синтаксис Automation:
long ksGetLayerReference (long number);
Входной параметр:

number " номер слоя.

Возвращаемое значение:

указатель на слой " в случае удачного завершения,
0 " в случае неудачи.

ksLayer  Сделать слой текущим
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " Layer.
Синтаксис Automation:
long ksLayer (long number);
Входной параметр:

number " номер слоя.

Возвращаемое значение:
3723



указатель на слой " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Если слоя с заданным номером нет, он создается.

Текстовые надписи

ksConvertTextToCurve  Преобразовать указанный текст 
в кривые
Интерфейс...

Cправка системы КОМПАС...
CM_CONVERT_TO_NURBS.htm
Аналог данного метода при использовании API экспортных функций "
ksConvertTextToCurve.
Синтаксис Automation:
long ksConvertTextToCurve (long text);
Входной параметр:

text " указатель на текст.

Возвращаемое значение:

указатель на временную группу кривых " в случае удачного завершения,
0 " в случае неудачи.

ksGetTextAlign  Получить тип привязки текста
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksGetTextAlign.
Синтаксис Automation:
long ksGetTextAlign (long pText);
Входной параметр:

pText " указатель на объект "текст".

Возвращаемое значение:

тип привязки текста " в случае успешного завершения,
"1 " в случае неудачи.
3724



Типы привязки текста...

ksGetTextLength  Получить длину текста в миллиметрах
Интерфейс...
Аналог данного метода при использовании API экспортных функций " GetTextLength.
Синтаксис Automation:
double ksGetTextLength (BSTR text, 
long style);
Входные параметры:

text " указатель на строку текста,
style " стиль текста.

Системные стили текстов...
Возвращаемое значение:

" вычисленное значение длины текста (в миллиметрах).

Примечание:
Функция может принимать строку в синтаксисе версии КОМПАС 4 (спецзнаки, дроби, от"
клонения).

ksGetTextLengthFromReference  Получить длину текста в 
миллиметрах
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
GetTextLengthFromReference.
Синтаксис Automation:
double ksGetTextLengthFromReference (long pText);
Входной параметр:

pText " указатель на текст.

Возвращаемое значение:

" вычисленное значение длины текста (в миллиметрах).

Примечание:
Функция может принимать строку в синтаксисе версии КОМПАС 4 (спецзнаки, дроби, от"
клонения).
3725



ksParagraph  Начать параграф
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Paragraph.
Синтаксис Automation:
long ksParagraph (LPDISPATCH param);
Входной параметр:

param " указатель на интерфейс ksParagraphParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Параграф " составной объект. 
2. Объекты ksDocument2D::ksTextLine, вводимые между методами

ksDocument2D::ksParagraph и ksDocument2D::ksEndObj, принадлежат параграфу.
3. Параграф может состоять из нескольких строк, строки могут состоять из нескольких

компонент. Компоненты могут изменять параметры текущего шрифта.
4. ksDocument2D::ksEndObj возвращает указатель на параграф.

ksReadTableFromFile  Создать таблицу, используя 
информацию, хранящуюся в файле *.tbl
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций "
ksReadTableFromFile.
Синтаксис Automation:
long ksReadTableFromFile (BSTR tblFileName);
Входной параметр:

tblFileName " полное имя файла таблицы.

Возвращаемое значение:

указатель на таблицу " в случае удачного завершения,
0 " в случае неудачи.
3726



ksSetTextAlign  Установить тип привязки текста
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSetTextAlign.
Синтаксис Automation:
long ksSetTextAlign (long pText, long align);
Входные параметры:

pText " указатель на объект "текст",
align " тип привязки текста.

Типы привязки текста...
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

ksSetTextLineAlign  Установить выравнивание текста
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksSetTextLineAlign.
Синтаксис Automation:
int ksSetTextLineAlign (short align);
Входной параметр:

align " признак выравнивания:
0 " по левому краю,
1 " по центру,
2 " по правому краю,
3 " по ширине.

Возвращаемое значение:

предыдущий признак выравнивания " в случае успешного завершения,
"1 " в случае неудачи.

Примечание.
Функция ksDocument2D::ksSetTextLineAlign должна использоваться внутри блока, т.е.
необходимо, чтобы был открытый на редактирование текст. Иначе функция не работает.

ksSetTableColumnText  Установить текст ячейки 
таблицы
Интерфейс...
3727



Аналог данного метода при использовании API экспортных функций "
ksSetTableColumnText.
Синтаксис Automation:
long ksSetTableColumnText (long numb, LPDISPATCH param);
Входные параметры:

numb " номер ячейки,
param " указатель на интерфейс ksTextParam.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Функция используется в режиме редактирования таблицы.

ksTable  Создать таблицу в графическом документе
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " Table
Синтаксис Automation:
long ksTable();
Возвращаемое значение:

указатель на таблицу " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Таблица " составной объект. Объекты, вводимые между операторами
ksDocument2D::ksTable и ksDocument2D::ksEndObj, принадлежат таблице. Допустимые
объекты " отрезки, тексты. Отрезки должны быть вертикальными и горизонтальными.
ksDocument2D::ksEndObj возвращает указатель на таблицу.
Допустимые стили линии для отрезков таблицы: 
1 " основная, 
2 " тонкая, 
7 " утолщенная, 
0 " невидимая.
3728



ksText  Создать текст в графическом документе
Интерфейс...

Справка системы КОМПАС...

Аналог данного метода при использовании API экспортных функций " Text.
Синтаксис Automation:
long ksText (double x, 
double y, 
double ang, 
double hStr, 
double ksuStr, 
long bitVector, 
BSTR s);
Входные параметры:

x, y " координаты точки привязки текста,
ang " угол наклона текста,
hStr " высота символов,
ksuStr " сужение текста,
bitVector " битовый вектор, задающий признаки начертания текста,
s " строка символов.

Признаки начертания текста...
Возвращаемое значение:

указатель на текст " в случае удачного завершения,
или 1 при использовании внутри таблицы
0 " в случае неудачи.

Примечание:

1. Строка символов может включать спецсимвол. Например, чтобы задать 10 градусов, не"
обходимо указать значение "10&01". Таблица спецсимволов размещена в файле
SDK\NumbSymb.frw.

2. Не рекомендуется использовать в строке символы, которые могут идентифицироваться
как управляющие символы: @ $ & ; ~ ^ #, кроме случаев, когда эти символы использу"
ются в строке именно как управляющие."

3. Использование управляющих символов:
▼ отклонение: $ верхнее отклонение; нижнее отклонение $,
▼ дробь: $d числитель ; знаменатель $,
▼ спецсимвол: &nn номер спецсимвола 0...99.
4. bitVector формируется с помощью логической операции |. Поддерживаются определе"

ния:
3729



▼ ITALIC_ON ( включить наклон ),
▼ BOLD_ON (включить утолщение),
▼ UNDERLINE_ON (включить подчеркивание). См. ltdefine.h.

ksTextLine  Создать компоненту строки текста или 
целую строку, состоящую из компонент
Интерфейс...
Аналог данного метода при использовании API экспортных функций " TextLine.
Синтаксис Automation:
long ksTextLine (LPDISPATCH textItem);
Входной параметр:

textItem " указатель на интерфейс ksTextItemParam для компоненты 
текста или ksTextLineParam для всей строки.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:

1. Компонента строки должна иметь хотя бы одно cвойство, отличное от текущего шрифта.
2. Строка символов может включать спецсимвол. Например, чтобы задать 10 градусов, не"

обходимо указать значение "10&01". Таблица спецсимволов размещена в файле
SDK\NumbSymb.frw.

3. Не рекомендуется использовать в строке символы, которые могут идентифицироваться
как управляющие символы: @ $ & ; ~ ^ #, кроме случаев, когда эти символы использу"
ются в строке именно как управляющие."

4. Использование управляющих символов:
▼ отклонение: $ верхнее отклонение ; нижнее отклонение $,
▼ дробь: $d числитель ; знаменатель $,
▼ спецсимвол: &nnn номер спецсимвола. 

Работа с таблицей и с допуском формы

ksClearTableColumnText  Очистить ячейку таблицы или 
допуска формы
Интерфейс...
3730



Аналог данного метода при использовании API экспортных функций "
ksClearTableColumnText.
Синтаксис Automation:
long ksClearTableColumnText (long numb);
Входной параметр:

numb " номер ячейки,

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Если numb = 0, очищается вся таблица. 
Нумерация ячеек начинается с 1. 
Функция используется в режиме редактирования таблицы или допуска формы.

ksColumnNumber  задать номер текущей ячейки
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ColumnNumber.
Синтаксис Automation:
long ksColumnNumber (long numb);
Входной параметр:

numb " номер ячейки.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.
