Входные параметры:

fileName " имя фрагмента,
3848



curentLayer " тип размещения объектов фрагмента по слоям:
0 " на "свои" слои, 
1" на текущий слой,

par " указатель на интерфейс ksPlacementParam,
scaleProjLinesSize " признак масштабирования длины выносных линий 

размеров:
TRUE " выносные линии масштабируются,
FALSE " выносные линии не масштабируются.

Возвращаемое значение:

указатель на временную группу " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Допускается задание имени файла следующего вида: "c:\gr\lib1.lfr|детали|литье|фланец", 
где
c:\gr\lib1.lfr " имя файла библиотеки фрагментов,
|детали|литье| " разделы, подразделы внутри библиотеки фрагментов,
фланец " имя фрагмента.
В этом случае фрагмент берется из библиотеки фрагментов.

ksWriteFragment  Записать группу во фрагмент
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/CM_INSERTFRAGMENT.htm
Аналог данного метода при использовании API экспортных функций " WriteFragment.
Синтаксис Automation:
long ksWriteFragment (long gr, 
LPCTSTR fileName, 
LPCTSTR comment, 
double xb, 
double yb);
Входные параметры:

gr " указатель на группу
(0 " записывается группа селектирования),

filename " имя файла фрагмента,
comment " комментарий для фрагмента,
xb, yb " координаты точки привязки.

Возвращаемое значение:
3849



1 " в случае успешного завершения,
0 " в случае неудачи.

Основная надпись (Интерфейс ksStamp)
Справка системы КОМПАС...
KOMPAS.chm::/574_68_2_Osnovnaja_nadpisq_i_fo.htm
Интерфейс основной надписи.
Примечание:
Указатель на интерфейс можно получить при помощи методов ksDocument2D::GetStamp,
ksDocument2D::GetStampEx, ksSpcDocument::GetStamp, ksSpcDocument::GetStampEx,
ksDocumentTxt::GetStamp, ksDocumentTxt::GetStampEx.

ksStamp  свойства

reference  Указатель на основную надпись
Интерфейс...
Тип данных:long.
Синтаксис Automation:

ref = iStamp.reference Получить свойство (* )
iStamp.reference = ref Установить свойство (* )
ref = iStamp.GetReference() Получить свойство (**)
iStamp.SetReference (ref) Установить свойство (**)

ksStamp  методы

GetSheetNumb  Получить номер листа
Интерфейс...
Синтаксис Automation:
long GetSheetNumb ();
Возвращаемое значение:

номер листа

ksClearStamp  Очистить основную надпись
Интерфейс...
3850



Справка системы КОМПАС...
KOMPAS.chm::/574_68_2_Osnovnaja_nadpisq_i_fo.htm
Аналог данного метода при использовании API экспортных функций " ClearStamp.
Синтаксис Automation:
long ksClearStamp (long numb);
Входной параметр:

numb " номер очищаемой ячейки основной надписи
(0 " очищается вся основная надпись).

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод действителен для чертежа и спецификации.

ksCloseStamp  Закрыть основную надпись
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/574_68_2_Osnovnaja_nadpisq_i_fo.htm
Аналог данного метода при использовании API экспортных функций " CloseStamp.
Синтаксис Automation:
long ksCloseStamp();
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод действителен для чертежа и спецификации.

ksColumnNumber  Определить номер ячейки основной 
надписи
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ColumnNumber.
Синтаксис Automation:
long ksColumnNumber (long numb);
Входной параметр:
3851



numb " номер ячейки основной надписи.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод используется в режиме редактирования основной надписи.

ksGetStampColumnText  Получить текст ячейки 
основной надписи
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/574_68_2_Osnovnaja_nadpisq_i_fo.htm
Аналог данного метода при использовании API экспортных функций "
GetStampColumnText.
Синтаксис Automation:
LPDISPATCH ksGetStampColumnText (long* numb);
Выходной параметр:

numb " номер ячейки основной надписи.

Возвращаемое значение:

" указатель на интерфейс динамического мас"
сива ksDynamicArray строк текста типа
TEXT_LINE_ARR или NULL, если все ячейки
пройдены.

Смотрите также : ksTextLineParam
Примечание:
После выполнения метод смещается на следующую ячейку.
Если номер графы не определен с помощью функции ksColumnNumber, метод начинает
работу с первой графы.
После использования полученный массив желательно удалить.
Если numb != NULL, метод возвращает номер графы. 
Функция используется в режиме редактирования штампа.
3852



ksOpenStamp  Открыть основную надпись
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/574_68_2_Osnovnaja_nadpisq_i_fo.htm
Аналог данного метода при использовании API экспортных функций " OpenStamp.
Синтаксис Automation:
long ksOpenStamp();
Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод действителен для чертежа и спецификации.
Операторы ksStamp::ksColumnNumber и ksStamp::ksTextLin, вводимые между оператора"
ми ksStamp::ksOpenStamp и ksStamp::ksCloseStamp, принадлежат основной надписи.
ksStamp::ksColumnNumber определяет номер ячейки, куда помещать текcт.
Номера определены в соответствии с ГОСТом на данную основную надпись.
ksStamp::ksCloseStamp возвращает указатель на штамп.

ksSetStampColumnText  Задать текст в ячейке
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
SetStampColumnText.
Синтаксис Automation:
long ksSetStampColumnText (long numb, 
LPDISPATCH textArr);
Входные параметры:

numb " номер ячейки основной надписи,
textArr " указатель на интерфейс динамического массива

ksDynamicArray строк текста типа TEXT_LINE_ARR.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Метод используется в режиме редактирования штампа.
3853



ksSetTextLineAlign  Установить выравнивание текста
Интерфейс...

Справка системы КОМПАС...
kompas.chm::/528_65_5_1_Izmenenie_parametrov.htm
Аналог данного метода при использовании API экспортных функций " ksSetTextLineAlign.
Синтаксис Automation:
long ksSetTextLineAlign (short align);
Входной параметр:

align " признак выравнивания:
0 " по левому краю,
1 " по центру,
2 " по правому краю,
3 " по ширине.

Возвращаемое значение:

предыдущий признак " в случае успешного завершения,
"1 " в случае неудачи.

ksTextLine  Задать компоненту строки текста или строку 
текста полностью
Интерфейс...
Аналог данного метода при использовании API экспортных функций " TextLine.
Синтаксис Automation:
ksTextLine(LPDISPATCH textItem);
Входной параметр:

textItem " указатель на интерфейс ksTextItemParam для
компоненты текста или указатель на интерфейс
ksTextLineParam для всей строки.

Возвращаемое значение:

1 " в случае успешного завершения,
0 " в случае неудачи.

Примечание:
Данная функция предназначена для задания сложно"структурированного текста, от"
дельные компоненты которого имеют различные параметры.
3854



Интерфейс результатов редактирования объекта 
(Интерфейс ksObject2DNotifyResult, 
IObject2DNotifyResult)
Интерфейс результатов редактирования объекта.

ksObject2DNotifyResult " интерфейс Automation
IObject2DNotifyResult " интерфейс COM

В Automation получить интерфейс результата можно при помощи метода
ksDocument2D::GetObject2DNotifyResult.
В COM получить интерфейс результата можно при помощи экспортной функции
ksGetObject2DNotifyResult.
Примечание:
В процессе обработки события Object2DNotifyEnum можно получить информацию о ре"
дактировании объекта.

ksObject2DNotifyResult,IObject2DNotifyResult  методы

GetAngle  Получить угол поворота объекта
Интерфейс...
Синтаксис Automation:
double GetAngle();
Синтаксис COM:
double GetAngle();
Возвращаемое значение:

" угол поворота объекта.

GetCopyObject  Получить копию объекта, если 
выполнялась операция копирования
Интерфейс...
Синтаксис Automation:
long GetCopyObject();
Синтаксис COM:
long GetCopyObject();
Возвращаемое значение:

" указатель на объект.
3855



GetSheetPoint  Получить координаты точки в системе 
координат листа
Интерфейс...
Синтаксис Automation:
BOOL GetSheetPoint (BOOL from, double *x, double *y);
Синтаксис COM:
BOOL GetSheetPoint (BOOL from, double *x, double *y);
Входные параметры:

from " TRUE " начало сдвига, центр поворота, центр
масштабирования, первая точка оси симметрии,
начало копирования,
" FALSE " конец сдвига, вторая точка оси симме"
трии, конец копирования.

Выходные параметры:

x, y, " значения координат точки в системе координат
листа.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

GetNotifyType  Получить тип события
Интерфейс...
Синтаксис Automation:
long GetNotifyType();
Синтаксис COM:
long GetNotifyType();
Возвращаемое значение:

" тип события.

GetProcessType  Тип процесса
Интерфейс...
Синтаксис:
3856



long GetProcessType();
Возвращаемое значение:

Тип процесса из перечисления " в случае успеха.
ProcessTypeEnum

GetScale  Получить коэффициенты масштабирования 
по координатным осям
Интерфейс...
Синтаксис Automation:
BOOL GetScale (double *sx, double *sy);
Синтаксис COM:
BOOL GetScale (double *sx, double *sy);
Выходные параметры:

Sx " масштаб по оси X,
Sy " масштаб по оси Y.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

IsCopy  Получить признак копирования исходных 
объектов
Интерфейс...
Синтаксис Automation:
BOOL IsCopy();
Синтаксис COM:
BOOL IsCopy();
Возвращаемое значение:

TRUE " процесс с копированием,
FALSE " процесс без копирования.

IsRedoMode  Признак работы команды Redo
Интерфейс...
Синтаксис Automation:
BOOL IsRedoMode();
3857



Синтаксис COM:
BOOL IsRedoMode();
Возвращаемое значение:

TRUE  " если работает команда Redo.

Примечание:
Свойство требуется проверять в событиях, если необходимо отличать событие, получен"
ное от визуальной работы пользователя, от действий, вызванных командой Повторить
(т.е. вернуть отмененное действие).
См. также: ksObject2DNotifyResult::IsUndoMode

IsUndoMode  Признак работы команды Undo
Интерфейс...
Синтаксис Automation:
BOOL IsUndoMode();
Синтаксис COM:
BOOL IsUndoMode();
Возвращаемое значение:

TRUE  " если работает команда Undo.

Примечание:
Свойство требуется проверять в событиях, если необходимо отличать событие, получен"
ное от визуальной работы пользователя, от действий, вызванных командой Отменить.
Например, при отмене создания объекта посылается событие удаления объекта.
При отмене удаления объекта посылается событие создания объекта.
См. также: ksObject2DNotifyResult::IsRedoMode

Источник событий менеджера выделенных 
объектов (Интерфейс SelectionMngNotify)
Источник событий менеджера выделенных объектов.
В Automation источник событий для графического документа SelectionMngNotify можно
получить при помощи метода ksDocument2D::GetSelectionMngNotify.
Для документа"модели источником является Менеджер выделенных объектов
ksSelectionMng.
В СOM контейнером для подписки на данный интерфейс является указатель на графи"
ческий документ или документ"модель.
Интерфейс событий менеджера выделенных объектов...
Примечание:
3858



Интерфейс позволяет следить за выделением объектов в документе.

Источник событий объектов графического 
документа (Интерфейс Object2DNotify)
Источник событий объектов графического документа.
В Automation источник событий для графического документа Object2DNotify можно по"
лучить при помощи метода ksDocument2D::GetObject2DNotify.
В СOM контейнером для подписки на данный интерфейс является указатель на графи"
ческий документ или документ"модель.
Интерфейс событий объектов графического документа...
Примечание:
Интерфейс позволяет следить и управлять редактированием объектов графического до"
кумента.

Источник событий графического документа 
(Интерфейс Document2DNotify)
Источник событий графического документа.
В Automation источник событий для подписки Document2DNotify можно получить при по"
мощи метода ksDocument2D::GetDocument2DNotify.
В COM источником для подписки является графический документ.
Интерфейс событий графического документа...

Интерфейс привязки (Интерфейс ksSnapOptions)
Справка системы КОМПАС...
KOMPAS.chm::/85_8_2_1_Globalqnaja_privjazka.htm
Интерфейс параметров привязок в графическом документе.
Аналог данных параметров при использовании API экспортных функций " SnapOptrions.
Примечание:
Указатель на интерфейс можно получить при помощи метода
KompasObject::GetParamStruct.
Смотрите также: KompasObject

ksSnapOptions  свойства

angSnap  Глобальная "Угловая привязка"
Интерфейс...
Тип данных: BOOL.
Значения свойства:
3859



TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:

angSnap = iSnapOptrions.angSnap Получить свойство (* )
iSnapOptrions.angSnap = angSnap Установить свойство (* )
angSnap = iSnapOptrions.GetAngSnap() Получить свойство (**)
iSnapOptrions.SetAngSnap (angSnap) Установить свойство (**)

angleStep  Шаг угловой привязки (в градусах)
Интерфейс...
Тип данных: double.
Синтаксис Automation:

angleStep = iSnapOptrions.angleStep Получить свойство (* )
iSnapOptrions.angleStep = angleStep Установить свойство (* )
angleStep = iSnapOptrions.GetAngleStep() Получить свойство (**)
iSnapOptrions.SetAngleStep (angleStep) Установить свойство (**)

commonOpt  Общие настройки привязок
Интерфейс...
Тип данных:long.
Общие настройки привязок...
Синтаксис Automation:

commonOpt = iSnapOptrions.commonOpt Получить свойство (* )
iSnapOptrions.commonOpt = commonOpt Установить свойство (* )
commonOpt = iSnapOptrions.GetCommonOpt() Получить свойство (**)
iSnapOptrions.SetCommonOpt (commonOpt) Установить свойство (**)

grid  Глобальная привязка "По сетке"
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:
3860



grid = iSnapOptrions.grid Получить свойство (* )
iSnapOptrions.grid = grid Установить свойство (* )
grid = iSnapOptrions.GetGrid() Получить свойство (**)
iSnapOptrions.SetGrid (grid) Установить свойство (**)

intersect  Глобальная привязка "Пересечение"
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:

intersect = iSnapOptrions.intersect Получить свойство (* )
iSnapOptrions.intersect = intersect Установить свойство (* )
intersect = iSnapOptrions.GetIntersect() Получить свойство (**)
iSnapOptrions.SetIntersect (intersect) Установить свойство (**)

lolcalSnap Тип локальной привязки
Интерфейс...
Тип данных:short.
Типы локальной привязки...
Синтаксис Automation:

localSnap = iSnapOptrions.localSnap Получить свойство (* )
iSnapOptrions.localSnap = localSnap Установить свойство (* )
localSnap = iSnapOptrions.GetLocalSnap() Получить свойство (**)
iSnapOptrions.SetLocalSnap (localSnap) Установить свойство (**)

nearestMiddle  Глобальная привязка "Середина"
Интерфейс...
Тип данных: BOOL.
Значения свойства:

TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:
3861



nearestMiddle = iSnapOptrions.nearestMiddle Получить свойство (* )
iSnapOptrions.nearestMiddle = nearestMiddle Установить свойство (* )
nearestMiddle = iSnapOptrions.GetNearestMiddle() Получить свойство (**)
iSnapOptrions.SetNearestMiddle (nearestMiddle) Установить свойство (**)

nearestPoint  Глобальная привязка "Ближайшая точка"
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:

nearestPoint = iSnapOptrions.nearestPoint Получить свойство (* )
iSnapOptrions.nearestPoint = nearestPoint Установить свойство (* )
nearestPoint = iSnapOptrions.GetNearestPoint() Получить свойство (**)
iSnapOptrions.SetNearestPoint (nearestPoint) Установить свойство (**)

pointOnCurve  Глобальная привязка "Точка на кривой"
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:

pointOnCurve = iSnapOptrions.pointOnCurve Получить свойство (* )
iSnapOptrions.pointOnCurve = pointOnCurve Установить свойство (* )
pointOnCurve = iSnapOptrions.GetPointOnCurve() Получить свойство (**)
iSnapOptrions.SetPointOnCurve (pointOnCurve) Установить свойство (**)

tangentToCurve  Глобальная привязка "Касание"
Интерфейс...
Тип данных:BOOL.
Значения свойства:
3862



TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:

tangentToCurve = iSnapOptrions.tangentToCurve Получить свойство (* )
iSnapOptrions.tangentToCurve = tangentToCurve Установить свойство (* )
tangentToCurve = iSnapOptrions.GetTangentToCurve() Получить свойство (**)
iSnapOptrions.SetTangentToCurve (tangentToCurve) Установить свойство (**)

xyAlign  Глобальная привязка "Выравнивание"
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " привязка включена,
FALSE " привязка выключена.

Синтаксис Automation:

xyAlign = iSnapOptrions.xyAlign Получить свойство (* )
iSnapOptrions.xyAlign = xyAlign Установить свойство (* )
xyAlign = iSnapOptrions.GetXyAlign() Получить свойство (**)
iSnapOptrions.SetXyAlign (xyAlign) Установить свойство (**)

ksSnapOptions  методы

GetCommonOptValue  Получить значение одного из 
флагов признака  commonOpt
Интерфейс...
Синтаксис Automation:
BOOL GetCommonOptValue (long commonOpt);
Входной параметр:

commonOpt " битовый флаг, характеризующий определен"
ную общую настройку привязок.

Возвращаемое значение:

TRUE " данный битовый флаг включен,
FALSE " данный битовый флаг выключен.
3863



Init  Инициализировать параметры
Интерфейс...
Синтаксис Automation:
BOOL Init();
Возвращаемое значение:

TRUE " в случае удачного завершения.

Примечание:
Метод обнуляет все параметры привязок в графическом документе.

SetCommonOptValue  Установить значение одного из 
флагов признака commonOpt
Синтаксис Automation:
BOOL SetCommonOptValue (long commonOpt, 
BOOL state);
Входные параметры:

commonOpt " битовый флаг, характеризующий определен"
ную общую настройку привязок,

state " состояние указанного битового флага: 
TRUE " включен, 
FALSE " выключен.

Возвращаемое значение:

TRUE " в случае удачного завершения.

Интерфейс параметров перекрывающихся объектов 
(Интерфейсы ksOverlapObjectOptions)
Справка системы КОМПАС...
KOMPAS.chm::/343_36_7_Ochistka_fona.htm
Интерфейс параметров перекрывающихся объектов.

ksOverlapObjectOptions " интерфейс Automation

Аналог данных параметров при использовании API экспортных функций "
OverlapObjectOptions.
Примечание:
3864



ии,
Указатель на интерфейс можно получить при помощи метода
KompasObject::GetParamStruct.

ksOverlapObjectOptions  свойства

gap  Зазор при перекрывании объектов
Интерфейс...
Тип данных:double.
Синтаксис Automation:

gap = iOverlapObjectOptions.gap Получить свойство (* )
iOverlapObjectOptions.gap = gap Установить свойство (* )
gap = iOverlapObjectOptions.GetGap() Получить свойство (**)
iOverlapObjectOptions.SetGap(gap) Установить свойство (**)

overlap  Перекрытие объектов
Интерфейс...
Тип данных:BOOL.
Синтаксис Automation:

overlap = iOverlapObjectOptions.overlap Получить свойство (* )
iOverlapObjectOptions.overlap = overlap Установить свойство (* )
overlap = iOverlapObjectOptions.GetOverlap() Получить свойство (**)
iOverlapObjectOptions.SetOverlap(overlap) Установить свойство (**)

Значения свойства:

TRUE " перекрывать штриховки и линии при пересечен
FALSE " не перекрывать.

ksOverlapObjectOptions  методы

Init  Инициализировать параметры
Интерфейс...
Синтаксис Automation:
BOOL Init();
Возвращаемое значение:

TRUE " в случае удачного завершения.
3865



Интерфейс математических функций (Интерфейс 
ksMathematic2D)
Интерфейс математических функций.
Примечание:
Указатель на интерфейс можно получить при помощи метода
KompasObject::GetMathematic2D.
Смотрите также: KompasObject

ksMathematic2D  методы

ksAngle  Получить угол (в градусах) между осью OX и 
вектором, заданным двумя точками
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Angle.
Синтаксис Automation:
double ksAngle (double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

x1, y1 " координаты начальной точки вектора,
x2, y2 " координаты конечной точки вектора.

Возвращаемое значение:

угол в градусах.

ksAtanD  Получить арктангенс аргумента
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/74_8_1_3_Vvod_znachenij_v_polja.htm
Аналог данного метода при использовании API экспортных функций " ATanD.
Синтаксис Automation:
double ksAtanD (double x);
Входной параметр:

x " тангенс угла.
3866



Возвращаемое значение:

" угол (в градусах).

ksCalcInertiaProperties  Получить плоские массово
центровочные характеристики кривой или группы 
кривых
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/CM_MIX.htm
Аналог данного метода при использовании API экспортных функций "
ksCalcInertiaProperties.
Синтаксис Automation:
long ksCalcInertiaProperties (long p, 
LPDISPATCH properties, 
short dimension);
Входные параметры:

p " указатель на кривую или группу кривых,
dimension " размерность длины.

Выходные параметры:

properties " указатель на интерфейс параметров для расчета
МЦХ ksInertiaParam.

Размерности длины...
Возвращаемое значение:

1 " в случае удачного завершения.

Примечание:
Кривые должны быть замкнутыми и представлять собой наружные и внутренние конту"
ра.

ksCalcMassInertiaProperties  Получить объемные 
массовоцентровочные характеристики тел вращения 
или выдавливания, заданных кривой или группой 
кривых
Интерфейс...
3867



Справка системы КОМПАС...
KOMPAS.chm::/CM_MEASURE_MIX3D.htm
Аналог данного метода при использовании API экспортных функций "
ksCalcMassInertiaProperties.
Синтаксис Automation:
long ksCalcMassInertiaProperties (long p,
LPDISPATCH properties,
double density,
double param);
Входные параметры:

p " указатель на кривую или группу кривых,
density " плотность тела (г/куб.мм),
param " параметр тела (для тела вращения " угол раствора

в градусах, для тела выдавливания " толщина).

Выходные параметры:

properties " указатель на интерфейс параметров для расчета массово"
центровочных характеристик ksMassInertiaParam.

Возвращаемое значение:

1 " в случае удачного завершения.

Примечания:

1. Кривые должны быть замкнутыми и представлять собой наружные и внутренние конту"
ра.

2. Тип тела (тело вращения или выдавливания) устанавливается перед вызовом метода в
интерфейсе ksMassInertiaParam.

ksCosD  Получить косинус аргумента
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/74_8_1_3_Vvod_znachenij_v_polja.htm
Аналог данного метода при использовании API экспортных функций " CosD.
Синтаксис Automation:
double ksCosD (double x);
Входной параметр:
3868



x " угол в градусах.

Возвращаемое значение:

" косинус аргумента.

ksCouplingCircleCircle  Получить параметры 
сопрягающих окружностей определенного радиуса и 
точки сопряжения для двух окружностей
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksCouplingCircleCircle.
Синтаксис Automation:
BOOL ksCouplingCircleCircle (double xc1, 
double yc1, 
double radc1, 
double xc2, 
double yc2,
double radc2, 
double rad, 
LPDISPATCH param);
Входные параметры:

xc1, yc1 " координаты центра первой окружности,
rad1 " радиус первой окружности,
xc2, yc2 " координаты центра второй окружности,
Rad " радиус второй окружности.

Выходной параметр:

param " указатель на интерфейс массива координат точек
сопряжения ksCON.

Возвращаемое значение:

TRUE " точки касания обнаружены,
FALSE " точки касания не обнаружены.
3869



ksCouplingLineCircle  Получить параметры сопрягающих 
окружностей определенного радиуса и точки касания 
при сопряжении окружности и прямой
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksCouplingLineCircle.
Синтаксис Automation:
BOOL ksCouplingLineCircle (double xc, 
double yc, 
double radc, 
double x1, 
double y1,
double angle1, 
double rad, 
LPDISPATCH param);
Входные параметры:

xc, yc " координаты центра окружности,
radc " радиус окружности,
x1, y1 " координаты точки на прямой,
angle1 " угол наклона прямой,
rad " радиус окружности сопряжения.

Выходной параметр:

param " указатель на интерфейс массива координат точек
сопряжения ksCON.

Возвращаемое значение:

TRUE " точки касания обнаружены,
FALSE " точки касания не обнаружены.

ksCouplingLineLine  Получить параметры окружностей, 
касательных к двум прямым
Интерфейс...
Аналог данного метода при использовании API экспортных функций " CouplingLineLine.
Синтаксис Automation:
BOOL ksCouplingLineLine (double x1, 
double y1, 
double angle1, 
3870



чек
double x2, 
double y2,
double angle2, 
double rad, 
LPDISPATCH param);
Входные параметры:

x1, y1 " координаты точки на первой прямой,
angle1 " угол наклона первой прямой,
x2, y2 " координаты точки на второй прямой,
angle2 " угол наклона второй прямой.

Выходной параметр:

param " указатель на интерфейс массива координат то
сопряжения ksCON.

Возвращаемое значение:

TRUE " точки касания обнаружены,
FALSE " точки касания не обнаружены.

ksDistanceCurveCurve  Добавить проекцию 
отображения  развертка
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksDistanceCurveCurve.
Синтаксис Automation:
long ksDistanceCurveCurve( long p1, long p2, double * distanse, double * t1, double * t2 );

Входные параметры:

p1 " указатель на первую кривую,
p2 " указатель на вторую кривую.

Выходные параметры:

distanse " расстояние,
 t1 " параметр на кривой 1 в точке с минимальным удалением,
 t2 " параметр на кривой 2 в точке с минимальным удалением.

Возвращаемое значение:
3871



1 " успешное завершение,
0 " построить касательную нельзя (кривые совпадают или одна 

кривая вложена в другую),
"1 " первый объект не существует,
"2 " второй объект не существует,
"3 " кривые расположены в разных видах,
"4 " не совпадают СК определения кривых (геометрическая и 

аннотационная),
"5 " первый объект не является кривой,
"6 " второй объект не является кривой,
"7 " ошибка.

ksDistancePntArc  Получить расстояние между точкой и 
дугой
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksDistancePntArc.
Синтаксис Automation:
double ksDistancePntArc (double x, 
double y, 
double xac, 
double yac, 
double rada,
double fa1, 
double fa2, 
short directa);
Входные параметры:

x, y " координаты точки,
xac, yac " координаты центра дуги,
rada " радиус дуги,
fa1, fa2 " начальный и конечный углы дуги,
directa " направление дуги:

 1 " против часовой стрелки,
"1 – по часовой стрелке.

Возвращаемое значение:

" расстояние между точкой и дугой.

ksDistancePntCircle  Получить расстояние между точкой 
и окружностью
Интерфейс...
3872



Аналог данного метода при использовании API экспортных функций "
ksDistancePntCircle.
Синтаксис Automation:
double ksDistancePntCircle (double x, 
double y, 
double xc, 
double yc, 
double rad);
Входные параметры:

x, y " координаты точки,
xc, yc " координаты центра окружности,
rad " радиус окружности.

Возвращаемое значение:

" расстояние между точкой и окружностью.

ksDistancePntLine  Получить расстояние между точкой и 
прямой, заданной точкой и углом
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksDistancePntLine.
Синтаксис Automation:
double ksDistancePntLine (double x, 
double y, 
double x1, 
double y1, 
double angle);
Входные параметры:

x, y " координаты точки,
x1, y1 " координаты точки на прямой,
angle " угол наклона прямой.

Возвращаемое значение:

" расстояние между точкой и прямой.

ksDistancePntLineForPoint  Получить расстояние между 
точкой и прямой, заданной двумя точками
Интерфейс...
3873



Аналог данного метода при использовании API экспортных функций "
ksDistancePntLineForPoint.
Синтаксис Automation:
double ksDistancePntLineForPoint (double x, 
double y, 
double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

x, y " координаты точки,
x1, y1 " координаты первой точки на прямой,
x2, y2 " координаты второй точки на прямой.

Возвращаемое значение:

" расстояние между точкой и прямой.

ksDistancePntLineSeg  Получить расстояние между 
точкой и отрезком
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksDistancePntLineSeg.
Синтаксис Automation:
double ksDistancePntLineSeg (double x, 
double y, 
double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

x, y " координаты точки,
x1, y1 " координаты начальной точки отрезка,
x2, y2 " координаты конечной точки отрезка.

Возвращаемое значение:

" расстояние между точкой и отрезком.
3874



ksDistancePntPnt  Получить расстояние между двумя 
точками
Интерфейс...
Аналог данного метода при использовании API экспортных функций " DistancePntPnt.
Синтаксис Automation:
double ksDistancePntPnt (double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

x1, y1 " координаты первой точки,
x2, y2 " координаты второй точки.

Возвращаемое значение:

" расстояние между двумя точками.

ksDistancePntPntOnCurve  Получить расстояние между 
двумя точками на кривой
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/CM_MEASURE_DISTANCE_2CURVES.htm
Аналог данного метода при использовании API экспортных функций "
ksDistancePntPntOnCurve.
Синтаксис Automation:
double ksDistancePntPntOnCurve (long curve,
double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

curve " указатель на кривую,
x1, y1 " координаты первой точки,
x2, y2 " координаты второй точки.

Возвращаемое значение:
3875



расстояние между двумя точками на кривой " в случае успеха,
0 " в случае неудачи.

Примечание:
Если заданные точки не находятся на кривой, то определяется расстояние между их про"
екциями на кривую.

ksDistanceT1T2OnCurve  Получить расстояние между 
двумя точками на кривой по параметрам кривой в 
данных точках
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksDistanceT1T2OnCurve.
Синтаксис Automation:
long ksDistanceT1T2OnCurve (long curve,
double t1,
double t2);
Входные параметры:

curve " указатель на кривую,
t1 " параметр кривой в точке 1,
t2 " параметр кривой в точке 2.

Возвращаемое значение:

" Расстояние между двумя точками на кривой.

ksEqualPoints  Определить эквивалентность 
(совпадение) двух точек 
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksEqualPoints.
Синтаксис Automation:
long ksEqualPoints (double x1, 
double y1, 
double x2, 
double y2);
Входные параметры:

x1, y1 " координаты первой точки,
3876



x2, y2 " координаты второй точки.
Возвращаемое значение:

1 " точки совпадают,
0 " точки не совпадают.

ksGetCurveMinMaxParametr  Получить минимальный и 
максимальный параметр кривой
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetCurveMinMaxParametr.
Синтаксис Automation:
long ksGetCurveMinMaxParametr (long curve,
double *tMin,
double *tMax);
Входные параметры:

curve " указатель на кривую.

Выходные параметры:

tMin " минимальный параметр кривой,
tMax " максимальный параметр кривой.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

ksGetCurvePerimeter  Получить периметр кривой
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/CM_PERIMETER.htm
Аналог данного метода при использовании API экспортных функций "
ksGetCurvePerimeter.
Синтаксис Automation:
double ksGetCurvePerimeter (long curve, 
short dimension);
Входные параметры:
3877



curve " указатель на кривую,
dimension " размерность длины.

Размерности длины...
Возвращаемое значение:

" периметр кривой.

ksGetCurvePerpendicular  Получить угол нормали к 
кривой в заданной точке
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetCurvePerpendicular.
Синтаксис Automation:
double ksGetCurvePerpendicular (long curve, 
double x, 
double y);
Входные параметры:

curve " указатель на кривую,
x, y " координаты точки.

Возвращаемое значение:

" угол нормали к кривой в заданной точке (в градусах).

Примечание:
Если указанная точка не находится на кривой, она проецируется на кривую.

ksGetCurvePoint  Преобразовать параметр кривой t в 
координаты вида
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksGetCurvePoint.
Синтаксис Automation:
long ksGetCurvePoint (long curve,
double t,
double *x,
double *y);
Входные параметры:
3878



curve " указатель на кривую,
t " параметр кривой.

Выходные параметры:

kx, ky " координаты проекции точки на кривую,

Возвращаемое значение:

1 " в случае удачного завершения.
0 " в случае неудачи.

Примечание:
См. также ksMathematic2D::ksGetCurvePointProjectionEx.

ksGetCurvePointProjection  Получить координаты 
проекции точки на кривую
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetCurvePointProjection.
Синтаксис Automation:
long ksGetCurvePointProjection (long curve, 
double x, 
double y, 
double* kx, 
double* ky);
Входные параметры:

curve " указатель на кривую,
x, y " координаты проецируемой точки.

Выходные параметры:

kx, ky " координаты проекции точки на кривую.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
3879



1. См. также ksMathematic2D::ksGetCurvePointProjectionEx.
2. При выполнении метода ksGetCurvePointProjection проекция на кривую из данной точки

может быть не найдена, например, если проекция находится на продолжении кривой. В
таком случае возвращаются координаты ближайшей к проекции начальной или конеч"
ной точки кривой.

3. В метод ksGetCurvePointProjection нужно передавать координаты в системе координат
кривой, то есть в системе координат макроэлемента, которому принадлежит кривая.
Возвращаются координаты также в системе координат кривой.

ksGetCurvePointProjectionEx  Получить координаты 
проекции точки на кривую
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetCurvePointProjectionEx.
Синтаксис Automation:
long ksGetCurvePointProjectionEx (long curve,
double x, double y,
double *kx, double *ky,
double *t);
Входные параметры:

curve " указатель на кривую,
x, y " координаты проецируемой точки.

Выходные параметры:

kx, ky " координаты проекции точки на кривую,
t " параметр кривой.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:

1. См. также ksMathematic2D::ksGetCurvePointProjection.
2. При выполнении метода ksGetCurvePointProjectionEx проекция на кривую из данной точ"

ки может быть не найдена, например, если проекция находится на продолжении кривой.
В таком случае возвращаются координаты ближайшей к проекции начальной или конеч"
ной точки кривой.

3. В метод ksGetCurvePointProjectionEx нужно передавать координаты в системе координат
кривой, то есть в системе координат макроэлемента, которому принадлежит кривая.
Возвращаются координаты также в системе координат кривой.
3880



ksLinePointTangentCurve  Получить прямую через точку 
перпендикулярно данной кривой
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksLinePointTangentCurve.
Синтаксис Automation:
BOOL ksLinePointTangentCurve( long p, double x, double y, LPDISPATCH param );
Входные параметры:

p " указатель на кривую,
x, y " координаты точки.

Выходной параметр:

param " указатель на интерфейс динамического масси"
ва ksDynamicArray углов касательных типа
DOUBLE_ARR.

Возвращаемое значение:

TRUE " в случае удачного завершения,
FALSE " в случае неудачи.

ksMovePointOnCurveEx  Переместить точку на 
расстояние len по кривой
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksMovePointOnCurveEx.
Синтаксис Automation:
BOOL ksMovePointOnCurveEx( long curve, double* x, double* y, double* t, double len, long
dir, long ext );
Входные параметры:

curve " указатель на кривую,
len " расстояние, на которое нужно сместить точку,
dir " направление продвижения точки:

            1 " в направлении построения кривой
           "1 " в обратном направлении,

ext " учитывать продолжение кривой.

Выходной параметр:

x, y " координаты точки.
3881



 t " параметр кривой.
Возвращаемое значение:

TRUE " в случае удачного завершения,
FALSE " в случае неудачи.

Примечание:
▼ Если в функцию перелается указатель на параметр кривой t, он используется в качестве

начального параметра кривой для сдвига.
▼ Если указатель не передается, начальный параметр кривой определяется по координа"

там x, y.

ksGetCurvePerpendicularByT  Функция возвращает угол 
нормали к кривой в заданной точке по параметру 
кривой
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksGetCurvePerpendicularByT.
Синтаксис Automation:
double ksGetCurvePerpendicularByT( long curve, double t );
Входные параметры:

 p " указатель на кривую,
 t " параметр кривой.

Выходной параметр:

param " указатель на интерфейс динамического масси"
ва ksDynamicArray углов касательных типа
DOUBLE_ARR.

Возвращаемое значение:

" угол нормали.

ksIntersectArcArc  Получить координаты точек 
пересечения двух дуг окружностей
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectArcArc.
Синтаксис Automation:
BOOL ksIntersectArcArc (double xac, 
3882



double yac, 
double rada, 
double fa1, 
double fa2,
short directa, 
double xbc, 
double ybc, 
double radb, 
double fb1,
double fb2, 
short directb, 
LPDISPATCH param);
Входные параметры:

xac, yac " координаты центра первой дуги,
rada " радиус первой дуги,
fa1, fa2 " углы начальной и конечной точек первой дуги,
directa " направление первой дуги:

 1 " против часовой стрелки,
 "1 – по часовой стрелке,

xbc, ybc " координаты центра второй дуги,
radb " радиус второй дуги,
fb1, fb2 " углы начальной и конечной точек второй дуги,
directb " направление второй дуги:

 1 " против часовой стрелки,
 "1 – по часовой стрелке.

Выходной параметр:

param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam
3883



ksIntersectArcLin  Получить координаты точек 
пересечения дуги окружности и прямой
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectArcLine.
Синтаксис Automation:
BOOL ksIntersectArcLin (double xc, 
double yc, 
double rad, 
double f1, 
double f2,
long n, 
double x, 
double y, 
double ang, 
LPDISPATCH param);
Входные параметры:

xc, yc " координаты центра окружности,
rad " радиус окружности,
f1, f2 " углы начальной и конечной точек дуги,
n " направление дуги: 

 1 " против часовой стрелки, 
 "1 " по часовой стрелке,

x, y " координаты точки на прямой,
ang " угол наклона прямой.

Выходной параметр:

 param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectCirArc  Получить координаты точек 
пересечения окружности и дуги
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectCirArc.
3884



Синтаксис Automation:
BOOL ksIntersectCirArc (double xcc, 
double ycc, 
double radc, 
double xac, 
double yac,
double rada, 
double fa1, 
double fa2, 
short directa, 
LPDISPATCH param);
Входные параметры:

xcс, ycс " координаты центра окружности,
radc " радиус окружности,
xac, yac " координаты центра дуги,
rada " радиус дуги,
fa1, fa2 " углы начальной и конечной точек дуги,
directa " направление дуги:

  1 " против часовой стрелки,
 "1 " по часовой стрелке.

Выходной параметр:

param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectCirCir  Получить координаты точек 
пересечения двух окружностей
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectCirCir.
Синтаксис Automation:
BOOL ksIntersectCirCir (double xc1, 
3885



ива
RR
double yc1, 
double radius1, 
double xc2, 
double yc2,
double radius2, 
LPDISPATCH param);
Входные параметры:

xc1, yc1 " координаты центра первой окружности,
radius1 " радиус первой окружности,
xc2, yc2 " координаты центра второй окружности,
radius2 " радиус второй окружности,

Выходной параметр:

param " указатель на интерфейс динамического масс
параметров математической точки типа POINT_A
ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectCirLin  Получить координаты точек 
пересечения окружности и прямой
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectCirLin.
Синтаксис Automation:
BOOL ksIntersectCirLin (double xc, 
double yc, 
double rad, 
double xl, 
double yl,
double angle, 
LPDISPATCH param);
Входные параметры:

xc, yc " координаты центра окружности,
rad " радиус окружности,
3886



ива
RR
x1, y1 " координаты точки на прямой,
angle " угол наклона прямой.

Выходной параметр:

param " указатель на интерфейс динамического массива параметров 
математической точки типа POINT_ARR ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectCurvCurv  Получить координаты точек 
пересечения двух кривых
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksIntersectCurvCurv.
Синтаксис Automation:
long ksIntersectCurvCurv (long p1, 
long p2, 
LPDISPATCH param);
Входные параметры:

p1 " указатель на первую кривую,
p2 " указатель на вторую кривую.

Выходной параметр:

param " указатель на интерфейс динамического масс
параметров математической точки типа POINT_A
ksDynamicArray.

Возвращаемое значение:

 1 " пересечение данных объектов обнаружено,
 0 " пересечение не обнаружено (кривые не пересекаются

или совпадают),
"1 " первый объект не существует,
"2 " второй объект не существует,
"3 " кривые расположены в разных видах,
"4 " один (или оба) из указанных объектов " не геометриче"

ский (не отрезок, не окружность, а, например, линия"вы"
носка),
3887



"5 " первый объект не является кривой,
"6 " второй объект не является кривой,
"7 " ошибка: массив типа POINT_ARR предварительно не со"

здан.
Смотрите также: ksMathPointParam

ksIntersectLinLin  Получить координаты точки 
пересечения двух прямых
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectLinLin.
Синтаксис Automation:
BOOL ksIntersectLinLin (double x1, 
double y1, 
double angle1, 
double x2, 
double y2,
double angle2, 
LPDISPATCH param);
Входные параметры:

x1, y1 " координаты точки на первой прямой,
angle1 " угол наклона первой прямой,
x2, y2 " координаты точки на второй прямой,
angle2 " угол наклона второй прямой,

Выходной параметр:

param " указатель на интерфейс динамического массива параметров 
математической точки типа POINT_ARR ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectLinSArc  Получить координаты точек 
пересечения отрезка и дуги
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectLinSArc.
Синтаксис Automation:
3888



BOOL ksIntersectLinSArc (double x1,
double y1, 
double x2, 
double y2, 
double xc,
double yc, 
double rad, 
double f1, 
double f2, 
short direct,
LPDISPATCH param);
Входные параметры:

x1, y1 " координаты начальной точки отрезка,
x2, y2 " координаты конечной точки отрезка,
xc, yc " координаты центра дуги,
rad " радиус дуги,
f1, f2 " углы начальной и конечной точек дуги,
direct " направление дуги:

 1 " против часовой стрелки,
 "1 " по часовой стрелке.

Выходной параметр:

param " указатель на интерфейс динамического массива параметров 
математической точки типа POINT_ARR ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectLinSCir  Получить координаты точек 
пересечения отрезка и окружности
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectLinSCir.
Синтаксис Automation:
BOOL ksIntersectLinSCir (double x1, 
double y1, 
double x2, 
3889



double y2, 
double xc,
double yc, 
double rad, 
LPDISPATCH param);
Входные параметры:

x1, y1 " координаты начальной точки отрезка,
x2, y2 " координаты конечной точки отрезка,
xc, yc " координаты центра окружности,
rad " радиус окружности.

Выходной параметр:

param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectLinSLine  Получить координаты точки 
пересечения отрезка и прямой
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectLinSLine.
Синтаксис Automation:
BOOL ksIntersectLinSLine (double x1, 
double y1, 
double x2, 
double y2, 
double x,
double y, 
double ang, 
LPDISPATCH param);
Входные параметры:

x1, y1 " координаты начальной точки отрезка,
3890



x2, y2 " координаты конечной точки отрезка,
x, y " координаты точки на прямой,
ang " угол наклона прямой.

Выходной параметр:

param " указатель на интерфейс динамического массива параметров 
математической точки типа POINT_ARR ksDynamicArray.

Возвращаемое значение:

TRUE " пересечение данных объектов обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksIntersectLinSLinS Получить координаты точки 
пересечения двух отрезков
Интерфейс...
Аналог данного метода при использовании API экспортных функций " IntersectLinSLinS.
Синтаксис Automation:
BOOL ksIntersectLinSLinS (double x11, 
double y11, 
double x12, 
double y12, 
double x21,
double y21, 
double x22, 
double y22, 
LPDISPATCH param);
Входные параметры:

x11, y11 " координаты начальной точки первого отрезка,
x12, y12 " координаты конечной точки первого отрезка,
x21, y21 " координаты начальной точки второго отрезка,
x22, y22 " координаты конечной точки второго отрезка.

Выходной параметр:
 

param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:
3891



TRUE " пересечение данных отрезков обнаружено,
FALSE " пересечение не обнаружено.

Смотрите также: ksMathPointParam

ksMovePointOnCurve  Получить координаты точки, 
находящейся на указанном вдоль кривой расстоянии от 
указанной точки
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksMovePointOnCurve.
Синтаксис Automation:
long ksMovePointOnCurve (long curve, 
double* x, 
double* y, 
double len, 
long dir);
Входные параметры:

curve " указатель на кривую,
len " расстояние, на которое нужно сместить точку,
dir " направление продвижения точки:

 1 " в направлении построения кривой,
 "1 " в обратном направлении.

Выходные параметры:

x, y " координаты точки.

Возвращаемое значение:

1 " в случае удачного завершения,
0 " в случае неудачи.

Примечание:
Если точка не находится на кривой, она проецируется на кривую.
3892



ksPerpendicular  Получить координаты точки 
пересечения отрезка и перпендикуляра к нему, 
проходящего через заданную точку
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Perpendicular.
Синтаксис Automation:
BOOL ksPerpendicular (double x, 
double y, 
double x1, 
double y1, 
double x2, 
double y2, 
double* xp, 
double* yp);
Входные параметры:

x, y " координаты произвольной точки,
x1, y1 " координаты начальной точки отрезка,
x2, y2 " координаты конечной точки отрезка.

Выходные параметры:

xp, yp " координаты точки пересечения отрезка и перпен"
дикуляра к нему, проходящего через заданную точ"
ку.

Возвращаемое значение:

TRUE " в случае удачного завершения.

ksPointsOnCurve  Получить указатель на интерфейс 
динамического массива точек, равномерно 
расположенных на кривой
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksPointsOnCurve.
Синтаксис Automation:
LPDISPATCH ksPointsOnCurve (long curve, 
long count);
Входные параметры:
3893



curve " указатель на кривую,
count " количество точек.

Возвращаемое значение:

" указатель на интерфейс динамического масси"
ва параметров математической точки типа
POINT_ARR ksDynamicArray.

Смотрите также: ksMathPointParam

ksPointsOnCurveByStep  Получить массив точек, 
расположенных на кривой с заданным шагом
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksPointsOnCurveByStep.
Синтаксис Automation:
LPDISPATCH ksPointsOnCurveByStep (long curve,
double step); 
Входные параметры:

curve " указатель на кривую,
step " шаг точек вдоль кривой.

Возвращаемое значение:

" указатель на динамический массив математи"
ческих точек ksDynamicArray типа POINT_ARR.

ksRotate  Повернуть точку относительно центра
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Rotate.
Синтаксис Automation:
BOOL ksRotate (double x, 
double y, 
double xc, 
double yc, 
double ang, 
double* xr, 
3894



double* yr);
Входные параметры:

x, y " координаты базовой точки,
xс, yс " координаты центра поворота,
ang " угол поворота.

Выходные параметры:

xr, yr " координаты точки после поворота.

Возвращаемое значение:

TRUE " в случае удачного завершения.

ksSinD  Получить синус аргумента
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/74_8_1_3_Vvod_znachenij_v_polja.htm
Аналог данного метода при использовании API экспортных функций " SinD.
Синтаксис Automation:
double ksSinD (double x);
Входной параметр:

x " угол в градусах.

Возвращаемое значение:

" синус аргумента.

ksSymmetry  Получить координаты точки, 
симметричной относительно заданной оси
Интерфейс...
Аналог данного метода при использовании API экспортных функций " Symmetry.
Синтаксис Automation:
BOOL ksSymmetry (double x,
double y,
double x1, 
double y1, 
3895



double x2, 
double y2,
double* xc, 
double* yc);
Входные параметры:

x, y " координаты базовой точки,
x1, y1 " координаты первой точки на оси симметрии,
x2, y2 " координаты второй точки на оси симметрии.

Выходные параметры:

xc, yc " координаты симметричной точки.

Возвращаемое значение:

TRUE " в случае удачного завершения.

ksTanD  Получить тангенс аргумента
Интерфейс...

Справка системы КОМПАС...
KOMPAS.chm::/74_8_1_3_Vvod_znachenij_v_polja.htm
Аналог данного метода при использовании API экспортных функций " TanD.
Синтаксис Automation:
double ksTanD (double x);
Входной параметр:

x " угол в градусах.

Возвращаемое значение:

" тангенс аргумента.

ksTanCircleCircle  Получить координаты точек касания 
прямых к двум окружностям
Интерфейс...
Аналог данного метода при использовании API экспортных функций " TanCircleCircle.
Синтаксис Automation:
3896



BOOL ksTanCircleCircle (double xc1, 
double yc1, 
double radius1, 
double xc2, 
double yc2,
double radius2, 
LPDISPATCH param);
Входные параметры:

xc1, yc1 " координаты центра первой окружности,
radius1 " радиус первой окружности,
xc2, yc2 " координаты центра второй окружности,
radius2 " радиус второй окружности.

Выходной параметр:

param " указатель на интерфейс массива координат точек
касания ksTAN.

Возвращаемое значение:

TRUE " точки касания обнаружены,
FALSE " точки касания не обнаружены.

ksTanCurvCurv  Получить координаты точек касания 
прямых к двум кривым
Интерфейс...
Аналог данного метода при использовании API экспортных функций " ksTanCurvCurv.
Синтаксис Automation:
long  ksTanCurvCurv (long p1,
long p2,
LPDISPATCH pointArr1,
LPDISPATCH pointArr2);
Входные параметры:

p1 " указатель на первую кривую,
p2 " указатель на вторую кривую.

Выходные параметры:

pointArr1 " динамический массив ksDynamicArray матема"
тических точек POINT_ARR на кривой p1,
3897



pointArr2 " динамический массив математических точек
ksDynamicArray POINT_ARR на кривой p2.

Возвращаемое значение:

1 " успешное завершение,
0 " построить касательную нельзя (кривые совпадают или одна

кривая вложена в другую),
"1 " первый объект не существует,
"2 " второй объект не существует,
"3 " кривые расположены в разных видах,
"4 " не совпадают СК определения кривых (геометрическая и ан"

нотационная),
"5 " первый объект не является кривой,
"6 " второй объект не является кривой,
"7 " ошибка.

ksTanLineAngCircle  Получить точки касания окружности 
и прямой, проходящей под заданным углом
Интерфейс...
Аналог данного метода при использовании API экспортных функций " TanLineAngCircle.
Синтаксис Automation:
BOOL ksTanLineAngCircle (double xc, 
double yc, 
double rad, 
double ang, 
LPDISPATCH param);
Входные параметры:

xc, yc " координаты центра окружности,
rad " радиус окружности,
ang " угол касательной прямой.

Выходной параметр:

param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:

TRUE " точки касания данных объектов обнаружены,
FALSE " точки касания не обнаружены.
3898



Смотрите также: ksMathPointParam

ksTanLinePointCircle  Получить точки касания 
окружности и прямой, проходящей через заданную 
точку
Интерфейс...
Аналог данного метода при использовании API экспортных функций " TanLinePointCircle.
Синтаксис Automation:
BOOL ksTanLinePointCircle (double x, 
double y, 
double xc, 
double yc, 
double rad, 
LPDISPATCH param);
Входные параметры:

x, y " координаты точки,
xc, yc " координаты центра окружности,
rad " радиус окружности.

Выходной параметр:

param " указатель на интерфейс динамического массива
параметров математической точки типа POINT_ARR
ksDynamicArray.

Возвращаемое значение:

TRUE " точки касания данных объектов обнаружены,
FALSE " точки касания не обнаружены.

Смотрите также: ksMathPointParam

ksTanLinePointCurve  Получить точки касания кривой и 
прямой, проведенной через заданную точку
Интерфейс...
Аналог данного метода при использовании API экспортных функций "
ksTanLinePointCurve.
Синтаксис Automation:
BOOL ksTanLinePointCurve (double x,
3899



double y,
long pCur,
LPDISPATCH param);
Входные параметры:

pCur " указатель на кривую,
x, y  " координаты точки.

Выходной параметр:

param " указатель на интерфейс динамического массива
ksDynamicArray параметров математической точки
типа POINT_ARR.

Возвращаемое значение:

TRUE " точки касания обнаружены,
FALSE " точки касания не обнаружены.

Смотрите также: ksMathPointParam

Интерфейсы параметров формата и компоновки 
чертежа
Интерфейс параметров ассоциативного вида 
(Интерфейс ksAssociationViewParam)
Справка системы КОМПАС...
KOMPAS.chm::/CM_CREATE_ARBITRARY_VIEW.htm
Интерфейс параметров ассоциативного вида.
Аналог данного интерфейса при использовании API экспортных функций "
AssociationViewParam.
Примечание:

1. Указатель на интерфейс должен быть получен с помощью метода
KompasObject::GetParamStruct с параметром ko_AssociationViewParam.

2. Параметры могут быть получены с помощью метода ksDocument2D::ksGetObjParam с па"
раметром ASSOCIATION_VIEW_PARAM.

ksAssociationViewParam  свойства

disassembly  Разнесение объекта
Интерфейс...
3900



Тип данных:BOOL.
Значения свойства:

TRUE " включено,
FALSE " выключено.

Синтаксис Automation:

disassembly = iAssViewParam.disassembly Получить свойство (* )
iAssViewParam.disassembly = disassembly Установить свойство (* )
disassembly = iAssViewParam.GetDisassembly() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetDisassembly(disassembly)

fileName  Имя файла документа трехмерного объекта
Интерфейс...
Тип данных:BSTR.
Синтаксис Automation:

fileName = iAssViewParam.fileName Получить свойство (* )
iAssViewParam.fileName = fileName Установить свойство (* )
fileName = iAssViewParam.GetFileName() Получить свойство (**)
iAssViewParam.SetFileName(fileName) Установить свойство (**)

hiddenLinesShow  Признак отрисовки невидимых линий
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " отрисовка включена,
FALSE " отрисовка выключена.

Синтаксис Automation:

hiddenLinesShow = iAssViewParam.hiddenLinesShow Получить свойство (* )
iAssViewParam.hiddenLinesShow = hiddenLinesShow Установить свойство (* )
hiddenLinesShow = iAssViewParam.GetHiddenLinesShow() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetHiddenLinesShow(hiddenLinesShow)
3901



hiddenLinesStyle  Номер стиля отрисовки невидимых линий
Интерфейс...
Тип данных:long.
Значения свойства:

номер стиля
0 " умолчательный стиль.

Синтаксис Automation:

visibleLinesStyle = iAssViewParam.visibleLinesStyle Получить свойство (* )
iAssViewParam.visibleLinesStyle = visibleLinesStyle Установить свойство (* )
visibleLinesStyle = iAssViewParam.GetVisibleLinesStyle() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetVisibleLinesStyle(visibleLinesStyle)

projectionName  Имя проекции (из списка проекций в 
документеисточнике)
Интерфейс...
Тип данных:BSTR.
Синтаксис Automation:

projectionName = iAssViewParam.projectionName Получить свойство (* )
iAssViewParam.projectionName = projectionName Установить свойство (* )
projectionName = iAssViewParam.GetProjectionName() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetProjectionName(projectionName)

projectionLink  Состояние проекционной связи
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " включена,
FALSE " выключена.

Синтаксис Automation:

projectionLink = iAssViewParam.projectionLink Получить свойство (* )
iAssViewParam.projectionLink = projectionLink Установить свойство (* )
projectionLink = iAssViewParam.GetProjectionLink() Получить свойство (**)
3902



iAssViewParam. Установить свойство (**)
SetProjectionLink(projectionLink)

projBodies  Проецировать ли тела
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " проецирование включено,
FALSE " проецирование выключено.

Синтаксис Automation:

projBodies = iAssViewParam.projBodies Получить свойство (* )
iAssViewParam.projBodies = projBodies Установить свойство (* )
projBodies = iAssViewParam.GetProjBodies() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetProjBodies(projBodies)

projSurfaces  Проецировать ли поверхности
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " проецирование включено,
FALSE " проецирование выключено.

Синтаксис Automation:

projSurfaces = iAssViewParam.projSurfaces Получить свойство (* )
iAssViewParam.projSurfaces = projSurfaces Установить свойство (* )
projSurfaces = iAssViewParam.GetProjSurfaces() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetProjSurfaces(projSurfaces)

projThreads  Проецировать ли резьбы
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " проецирование включено,
FALSE " проецирование выключено.

Синтаксис Automation:
3903



projThreads = iAssViewParam.projThreads Получить свойство (* )
iAssViewParam.projThreads = projThreads Установить свойство (* )
projThreads = Получить свойство (**)
iAssViewParam.GetProjThreads()
iAssViewParam. Установить свойство (**)
SetProjThreads(projThreads)

sameHatch  Признак одинаковой штриховки всех деталей 
сборки
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " штриховка одинаковая,
FALSE " штриховка разная.

Синтаксис Automation:

sameHatch = iAssViewParam.sameHatch Получить свойство (* )
iAssViewParam.sameHatch = sameHatch Установить свойство (* )
iAssViewParam.GetSameHatch() Получить свойство (**)
iAssViewParam. Установить свойство (**)
SetSameHatch(sameHatch)

Примечание:
Свойство используется только для видов типа разрез или сечение.

section  Признак разрез/сечение
Интерфейс...
Тип данных:BOOL.
Значения свойства:

TRUE " сечение,
FALSE " разрез.

Синтаксис Automation:

section = iAssViewParam.section Получить свойство (* )
iAssViewParam.section = section Установить свойство (* )
section = iAssViewParam.GetSection() Получить свойство (**)
iAssViewParam.SetSection(section) Установить свойство (**)
