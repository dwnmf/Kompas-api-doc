Тип данных: из перечисления ksAngleDimTypeEnum
Синтаксис Automation:

DimensionType = Получить свойство (* )
Object.DimensionType
Object.DimensionType = Установить свойство (* )
DimensionType
DimensionType = Получить свойство (**)
Object.GetDimensionType()
Object.SetDimensionType( Установить свойство (**)
DimensionType )

Синтаксис COM:

Object.get_Dimension Получить свойство (* )
Type(
&DimensionType )
Object.put_Dimension Установить свойство (* )
Type( DimensionType )
1845



Length  Длина выносной линии
Интерфейс...
Тип данных: double
Синтаксис Automation:

Length = Object.Length Получить свойство (* )
Object.Length = Length Установить свойство (* )
Object.Length = Length Получить свойство (**)
Object.SetLength( Установить свойство (**)
Length )

Синтаксис COM:

Object.get_Length( &Length ) Получить свойство (* )
Object.put_Length(  Length ) Установить свойство (* )

Object1  Первый объект
Интерфейс...

Справка системы КОМПАС: угловой размер
kompas.chm::/CM_ANGLE_DIMENSION_3D.htm
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

Object1 = Object.Object1 Получить свойство (* )
Object.Object1 = Object1 Установить свойство (* )
Object1 = Object.GetObject1() Получить свойство (**)
Object.SetObject1( Object1 ) Установить свойство (**)

Синтаксис COM:

Object.get_Object1( Получить свойство (* )
&Object1 )
Object.put_Object1( Установить свойство (* )
Object1 )

Примечание:
При создании углового размера используются прямолинейные и плоские объекты, кото"
рые являются сторонами угла.
Прямолинейные объекты:

▼  отрезок в эскизе,
▼  сегмент ломаной,
▼  вспомогательная ось,
1846



▼  ребро тела или поверхности.
Плоские объекты:

▼  координатная плоскость,
▼  вспомогательная плоскость,
▼  грань тела или поверхности.

Object2  Второй объект
Интерфейс...

Справка системы КОМПАС: угловой размер,
kompas.chm::/CM_ANGLE_DIMENSION_3D.htm
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

Object2 = Object.Object2 Получить свойство (* )
Object.Object2 = Object2 Установить свойство (* )
Object2 = Object.GetObject2() Получить свойство (**)
Object.SetObject2( Object2 ) Установить свойство (**)

Синтаксис COM:

Object.get_Object2( &Object2 ) Получить свойство (* )
Object.put_Object2(  Object2 ) Установить свойство (* )

Примечание:
При создании углового размера используются прямолинейные и плоские объекты, кото"
рые являются сторонами угла.
Прямолинейные объекты:

▼  отрезок в эскизе,
▼  сегмент ломаной,
▼  вспомогательная ось,
▼  ребро тела или поверхности.

Плоские объекты:
▼  координатная плоскость,
▼  вспомогательная плоскость,
▼  грань тела или поверхности.

IAngleDimension3D  методы

GetCenterPoint  Получить координаты центра
Интерфейс...
Синтаксис Automation:
1847



BOOL GetCenterPoint( double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetCenterPoint( double * X,
double * Y,
double * Z,
BOOL * Result );
Выходные параметры:

X, Y, Z " координаты точки на оси поверхности 
или центр окружности или дуги.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Inverse  Изменить направление размерных линий
Интерфейс...
Синтаксис Automation:
BOOL Inverse( );
Синтаксис COM:
HRESULT Inverse( BOOL * Result );
Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Функция позволяет изменять направление размерных линий на противоположное, со"
храняя их длину.

SetCenterPoint  Установить координаты центра
Интерфейс...
Синтаксис Automation:
BOOL SetCenterPoint( double X,
double Y,
double Z );
Синтаксис COM:
HRESULT SetCenterPoint( double X,
double Y,
1848



double Z,
BOOL * Result );
Входные параметры:

X, Y, Z " координаты точки на оси поверхности 
или центр окружности или дуги.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Функция позволяет задавать новое положение размера на оси поверхности.
Изменение положения размера доступно для незафиксированного размера, у которого
измеряемым объектом является цилиндрическая, коническая или тороидальная повер"
хность. Заданная точка будет спроецирована на ось поверхности.

Интерфейс IBaseLineDimension3D
Справка системы КОМПАС: Команда Линейный размер от отрезка до точки (документ"модель)
kompas.chm::/CM_LINE_DIMENSION_3D.htm
Интерфейс параметров линейного размера от отрезка до точки 3D.
Иерархия:
IKompasAPIObject

IModelObject
IBaseLineDimension3D

IDimensionText
IDimensionParams
Описание:
Интерфейс позволяет получить и задать свойства линейного размера от отрезка до точ"
ки в 3D документе.
Интерфейс можно получить у коллекции линейных размеров в 3D документе, используя
свойство ILineDimensions3D::LineDimension3D или метод ILineDimensions3D::Add.
После задания параметров размера требуется вызвать метод IModelObject::Update.
Интерфейсы IDimensionText и IDimensionParams являются дополнительными. Их можно
получить с помощью метода IUnknown::QueryInterface.
Примечание:

1.  Интерфейс позволяет проставить линейный размер между прямолинейным и точечным
объектами. При простановке линейного размера расстояния от ребра до точки в качестве
первого объекта можно использовать только прямолинейные объекты, в качестве второ"
1849



го объекта можно использовать только точечные объекты. При простановке линейного
размера на плоскости можно использовать и прямолинейные и точечные объекты.
Прямолинейные объекты:

▼  отрезок в эскизе,
▼  сегмент ломаной,
▼  координатная ось,
▼  вспомогательная ось,
▼  ребро тела или поверхности.

Точечные объекты:
▼ точка в эскизе,
▼ пространственная точка,
▼ начало координат,
▼ вершина пространственной кривой,
▼ вершина тела или поверхности.
2.  Свойство IDimensionText::NominalValue возвращает расстояние.

IBaseLineDimension3D  свойства

Length  Длина выносной линии
Интерфейс...
Тип данных: double
Синтаксис COM:

Object.get_Length( &Length ) Получить свойство (* )
Object.put_Length(Length ) Установить свойство (* )

Синтаксис Automation:

Length = Object.Length Получить свойство (* )
Object.Length = Length Установить свойство (* )
Length = Object.GetLength() Получить свойство (**)
Object.SetLength( Length ) Установить свойство (**)

Object1  Первый объект
Интерфейс...
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

Object1 = Object.Object1 Получить свойство (* )
Object.Object1 = Object1 Установить свойство (* )
Object1 = Object.GetObject1() Получить свойство (**)
1850



Object.SetObject1( Object1 ) Установить свойство (**)
Синтаксис COM:

Object.get_Object1( &Object1 ) Получить свойство (* )
Object.put_Object1(  Object1 ) Установить свойство (* )

Примечание:
При создании линейного размера через по ребру и точке в качестве первого объекта
можно использовать только прямолинейные объекты. При создании линейного размера
на плоскости можно использовать и прямолинейные и точечные объекты.

Object2  Второй объект
Интерфейс...
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

Object2 = Object.Object2 Получить свойство (* )
Object.Object2 = Object2 Установить свойство (* )
Object2 = Object.GetObject2() Получить свойство (**)
Object.SetObject2( Object2 ) Установить свойство (**)

Синтаксис COM:

Object.get_Object2( &Object2 ) Получить свойство (* )
Object.put_Object2(  Object2 ) Установить свойство (* )

Примечание:
При создании линейного размера через по ребру и точке в качестве первого объекта
можно использовать только прямолинейные объекты. При создании линейного размера
на плоскости можно использовать и прямолинейные и точечные объекты.

Интерфейс ILineDimension3D
Справка системы КОМПАС: Команда Линейный размер (документ"модель)
kompas.chm::/CM_LINE_DIMENSION_3D_PLANE.htm
Интерфейс параметров линейного размера на плоскости 3D.
Иерархия:
IKompasAPIObject

IModelObject
ILineDimension3D

IDimensionText
IDimensionParams
Описание:
1851



Интерфейс позволяет получить и задать свойства линейного размера в 3D документе.
Интерфейс можно получить у коллекции линейных размеров в 3D документе, используя
свойство ILineDimensions3D::LineDimension3D или метод ILineDimensions3D::Add.
После задания парамеров размера требуется вызвать метод IModelObject::Update.
Интерфейсы IDimensionText и IDimensionParams являются дополнительными. Их можно
получить с помощью метода IUnknown::QueryInterface.
Примечание:
В качестве направляющей плоскости можно использовать:

▼ координатную плоскость,
▼ вспомогательную плоскость,
▼ грань тела или поверхности.

ILineDimension3D  свойства

Plane  Базовая плоскость
Интерфейс...
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

Plane = Object.Plane Получить свойство (* )
Plane = Object.Plane Установить свойство (* )
Plane = Object.GetPlane() Получить свойство (**)
Object.SetPlane( Plane ) Установить свойство (**)

Синтаксис COM:

Object.get_Plane( &Plane ) Получить свойство (* )
Object.put_Plane(  Plane ) Установить свойство (* )

Примечание:
В качестве направляющей плоскости можно использовать:

▼ координатную плоскость,
▼ вспомогательную плоскость,
▼ грань тела или поверхности.

Интерфейс IDiametralDimension3D
Справка системы КОМПАС: Команда Диаметральный размер (документ"модель)
kompas.chm::/CM_DIAMETR_DIMENSION_3D.htm
Интерфейс параметров диаметрального размера 3D.
Иерархия:
IKompasAPIObject
1852



IModelObject
IDiametralDimension3D

IDimensionText
IDimensionParams
Описание:
Интерфейс позволяет получить и задать свойства диаметрального размера в 3D доку"
менте.
Интерфейс можно получить у коллекции диаметральных размеров, используя свойство
IDiametralDimensions3D::DiametralDimension3D или метод IDiametralDimensions3D::Add.
После задания параметров размера требуется вызвать метод IModelObject::Update.
Интерфейсы IDimensionText и IDimensionParams являются дополнительными. Их можно
получить с помощью метода IUnknown::QueryInterface.
Примечание:

1.  При создании радиального и диаметрального размеров используются следующие объ"
екты:

▼ окружность (дуга окружности) в эскизе,
▼ ребро тела или поверхности, имеющее форму окружности (дуги окружности),
▼ грань тела или поверхности, имеющая цилиндрическую, коническую, сферическую или

тороидальную форму.
При выборе в качестве базового объекта окружности в эскизе размер проставляется в
плоскости эскиза.
При выборе в качестве базового объекта ребра тела или поверхности размер проставля"
ется в плоскости, в которой находится выбранное ребро.
Положение размера можно задавать произвольно или фиксировать.
Способы задания произвольного положения размера:

▼ установите координаты центра с помощью функции SetCenterPoint. Координаты будут
спроецированы на ось грани.

▼ укажите точку на поверхности или ребре с помощью функции SetSurfacePoint.
Для фиксации положения размера укажите точечный объект или плоский объект, парал"
лельный плоскости простановки размера. Размер будет проставлен в плоскости, прохо"
дящей через объект фиксации. Между размером и объектом фиксации формируется ас"
социативная связь. Благодаря этой связи размер следует за объектом фиксации при
изменении положения последнего.

2.  Свойство IDimensionText::NominalValue возвращает диаметр.

IDiametralDimension3D  свойства

Angle  Угол наклона размерной линии
Интерфейс...
Тип данных: double
1853



Синтаксис Automation:

Angle = Object.Angle Получить свойство (* )
Object.Angle = Angle Установить свойство (* )
Angle = Object.GetAngle() Получить свойство (**)
Object.SetAngle( Angle ) Установить свойство (**)

Синтаксис COM:

Object.get_Angle( &Angle ) Получить свойство (* )
Object.put_Angle(  Angle ) Установить свойство (* )

Примечание:
Свойство позволяет задавать угол наклона размерной линии в плоскости размера.

DimensionType  Тип диаметрального размера (Полная 
размерная линия\Размерная линия с обрывом) 
Интерфейс...
Тип данных: BOOL
Синтаксис Automation:

DimensionType = Object.DimensionType Получить свойство (* )
Object.DimensionType = DimensionType Установить свойство (* )
DimensionType = Получить свойство (**)
Object.GetDimensionType()
Object.SetDimensionType( Установить свойство (**)
DimensionType )

Синтаксис COM:

Object.get_DimensionType( Получить свойство (* )
&DimensionType )
Object.put_DimensionType( Установить свойство (* )
DimensionType )

Object1  Измеряемый объект
Интерфейс...

Справка системы КОМПАС: выбор базового объекта
kompas.chm::/192_24_1_2_Ukazanie_obwekta_dlj.htm
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:
1854



Object1 = Object.Object1 Получить свойство (* )
Object.Object1 = Object1 Установить свойство (* )
Object1 = Object.GetObject1() Получить свойство (**)
Object.SetObject1( Object1 ) Установить свойство (**)

Синтаксис COM:

Object.get_Object1( &Object1 ) Получить свойство (* )
Object.put_Object1(  Object1 ) Установить свойство (* )

Примечание:
При создании радиального и диаметрального размеров используются следующие объ"
екты:

▼ окружность (дуга окружности) в эскизе,
▼ ребро тела или поверхности, имеющее форму окружности (дуги окружности),
▼ грань тела или поверхности, имеющая цилиндрическую, коническую, сферическую или

тороидальную форму.
При выборе в качестве базового объекта окружности в эскизе размер проставляется в
плоскости эскиза.
При выборе в качестве базового объекта ребра тела или поверхности размер проставля"
ется в плоскости, в которой находится выбранное ребро.

PlaneObject  Фиксирующий объект
Интерфейс...

Справка системы КОМПАС: выбор базового объекта
kompas.chm::/192_24_1_2_Ukazanie_obwekta_dlj.htm
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

PlaneObject = Object.PlaneObject Получить свойство (* )
Object.PlaneObject = PlaneObject Установить свойство (* )
PlaneObject = Object.GetPlaneObject() Получить свойство (**)
Object.SetPlaneObject( PlaneObject ) Установить свойство (**)

Синтаксис COM:

Object.get_PlaneObject( Получить свойство (* )
&PlaneObject )
Object.put_PlaneObject(  PlaneObject Установить свойство (* )
)

Примечание:
Положение размера можно зафиксировать. Для фиксации положения размера укажите
точечный объект или плоский объект, параллельный плоскости простановки размера.
1855



Размер будет проставлен в плоскости, проходящей через объект фиксации. Между раз"
мером и объектом фиксации формируется ассоциативная связь. Благодаря этой связи
размер следует за объектом фиксации при изменении положения последнего.
Для снятия фиксации установите значение свойства == NULL.

IDiametralDimension3D  методы

GetCenterPoint  Получить координаты центра
Интерфейс...
Синтаксис Automation:
BOOL GetCenterPoint( double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetCenterPoint( double * X,
double * Y,
double * Z,
BOOL * Result );
Выходные параметры:

X, Y, Z " координаты точки на оси поверхности 
или центр окружности или дуги.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

GetSurfacePoint  Получить точку пересечения размера с 
поверхностью или ребром
Интерфейс...
Синтаксис Automation:
BOOL GetSurfacePoint( double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetSurfacePoint( double * X,
double * Y,
double * Z,
BOOL * Result );
Выходные параметры:
1856



X, Y, Z " координаты точки.

Возвращаемое значение:

TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.

SetCenterPoint  Установить координаты центра
Интерфейс...
Синтаксис Automation:
BOOL SetCenterPoint( double X,
double Y,
double Z );
Синтаксис COM:
HRESULT SetCenterPoint( double X,
double Y,
double Z,
BOOL * Result );
Входные параметры:

X, Y, Z " координаты точки на оси поверхности 
или центр окружности или дуги.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Функция позволяет задавать новое положение размера на оси поверхности.
Изменение положения размера доступно для незафиксированного размера, у которого
измеряемым объектом является цилиндрическая, коническая или тороидальная повер"
хность. Заданная точка будет спроецирована на ось поверхности.

SetSurfacePoint  Установить точку пересечения размера 
с поверхностью или ребром
Интерфейс...
1857



Справка системы КОМПАС: особенности простановки размера
kompas.chm::/ploskost_razmera.htm
Синтаксис Automation:
BOOL SetSurfacePoint( double X,
double Y,
double Z );
Синтаксис COM:
HRESULT SetSurfacePoint( double X,
double Y,
double Z,
BOOL * Result );
Входные параметры:

X, Y, Z " координаты точки.

Возвращаемое значение:

TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.

Примечание:
Функция позволяет задавать новое положение размера относительно грани или ребра.
При указании точки на поверхности точка центра пересчитается.

Интерфейс IRadialDimension3D
Справка системы КОМПАС: Команда Радиальный размер (документ"модель)
kompas.chm::/CM_RADIUS_DIMENSION_3D.htm
Интерфейс параметров радиального размера 3D.
Иерархия:
IKompasAPIObject

IModelObject
IRadialDimension3D

IDimensionText
IDimensionParams
Описание:
Интерфейс позволяет получить и задать свойства радиального размера в 3D документе.
Интерфейс можно получить у коллекции радиальных размеров, используя свойство
IRadialDimensions3D::RadialDimension3D или метод IRadialDimensions3D::Add.
После задания параметров размера требуется вызвать метод IModelObject::Update.
1858



Интерфейсы IDimensionText и IDimensionParams являются дополнительными. Их можно
получить с помощью метода IUnknown::QueryInterface.
Примечание:

1.  При создании радиального и диаметрального размеров используются следующие объ"
екты:

▼ окружность (дуга окружности) в эскизе,
▼ ребро тела или поверхности, имеющее форму окружности (дуги окружности),
▼ грань тела или поверхности, имеющая цилиндрическую, коническую, сферическую или

тороидальную форму.
При выборе в качестве базового объекта окружности в эскизе размер проставляется в
плоскости эскиза.
При выборе в качестве базового объекта ребра тела или поверхности размер проставля"
ется в плоскости, в которой находится выбранное ребро.
Положение размера можно задавать произвольно или фиксировать.
Способы задания произвольного положения размера:

▼ установите координаты центра с помощью функции SetCenterPoint. Координаты будут
спроецированы на ось грани.

▼ укажите точку на поверхности или ребре с помощью функции SetSurfacePoint.
Для фиксации положения размера укажите точечный объект или плоский объект, парал"
лельный плоскости простановки размера. Размер будет проставлен в плоскости, прохо"
дящей через объект фиксации. Между размером и объектом фиксации формируется ас"
социативная связь. Благодаря этой связи, размер следует за объектом фиксации при
изменении положения последнего.

2.  Свойство IDimensionText::NominalValue возвращает радиус.

IRadialDimension3D  свойства

Angle  Угол наклона размерной линии
Интерфейс...
Тип данных: double
Синтаксис Automation:

Angle = Object.Angle Получить свойство (* )
Object.Angle = Angle Установить свойство (* )
Angle = Object.GetAngle() Получить свойство (**)
Object.SetAngle( Angle ) Установить свойство (**)

Синтаксис COM:

Object.get_Angle( &Angle ) Получить свойство (* )
Object.put_Angle(  Angle ) Установить свойство (* )

Примечание:
1859



Свойство позволяет задавать угол наклона размерной линии в плоскости размера.

DimensionType  Тип радиального размера (От 
центра\не от центра)
Интерфейс...
Тип данных: BOOL
Синтаксис Automation:

DimensionType = Получить свойство (* )
Object.DimensionType
Object.DimensionType = Установить свойство (* )
DimensionType
DimensionType = Получить свойство (**)
Object.GetDimensionType()
Object.SetDimensionType( Установить свойство (**)
DimensionType )

Синтаксис COM:

Object.get_DimensionType( Получить свойство (* )
&DimensionType )
Object.put_DimensionType(  DimensionType Установить свойство (* )
)

Object1  Измеряемый объект
Интерфейс...

Справка системы КОМПАС: выбор базового объекта
kompas.chm::/192_24_1_2_Ukazanie_obwekta_dlj.htm
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

Object1 = Object.Object1 Получить свойство (* )
Object.Object1 = Object1 Установить свойство (* )
Object1 = Object.GetObject1() Получить свойство (**)
Object.SetObject1( Object1 ) Установить свойство (**)

Синтаксис COM:

Object.get_Object1( &Object1 ) Получить свойство (* )
Object.put_Object1(  Object1 ) Установить свойство (* )

Примечание:
1860



При создании радиального и диаметрального размеров используются следующие объ"
екты:

▼ окружность (дуга окружности) в эскизе,
▼ ребро тела или поверхности, имеющее форму окружности (дуги окружности),
▼ грань тела или поверхности, имеющая цилиндрическую, коническую, сферическую или

тороидальную форму.
При выборе в качестве базового объекта окружности в эскизе размер проставляется в
плоскости эскиза.
При выборе в качестве базового объекта ребра тела или поверхности размер проставля"
ется в плоскости, в которой находится выбранное ребро.

PlaneObject  Фиксирующий объект
Интерфейс...

Справка системы КОМПАС: выбор базового объекта
kompas.chm::/192_24_1_2_Ukazanie_obwekta_dlj.htm
Тип данных: указатель на интерфейс модельного объекта IModelObject
Синтаксис Automation:

PlaneObject = Object.PlaneObject Получить свойство (* )
Object.PlaneObject = PlaneObject Установить свойство (* )
PlaneObject = Object.GetPlaneObject() Получить свойство (**)
Object.SetPlaneObject( PlaneObject ) Установить свойство (**)

Синтаксис COM:

Object.get_PlaneObjec Получить свойство (* )
t( &PlaneObject )
Object.put_PlaneObjec Установить свойство (* )
t(  PlaneObject )

Примечание:
Положение размера можно зафиксировать. Для фиксации положения размера укажите
точечный объект или плоский объект, параллельный плоскости простановки размера.
Размер будет проставлен в плоскости, проходящей через объект фиксации. Между раз"
мером и объектом фиксации формируется ассоциативная связь. Благодаря этой связи
размер следует за объектом фиксации при изменении положения последнего.
Для снятия фиксации установите значение свойства == NULL.

IRadialDimension3D  методы

GetCenterPoint  Получить координаты центра
Интерфейс...
Синтаксис Automation:
1861



BOOL GetCenterPoint( double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetCenterPoint( double * X,
double * Y,
double * Z,
BOOL * Result );
Выходные параметры:

X, Y, Z " координаты точки на оси поверхности 
или центр окружности или дуги.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

GetSurfacePoint  Получить точку пересечения размера с 
поверхностью или ребром
Интерфейс...
Синтаксис Automation:
BOOL GetSurfacePoint( double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetSurfacePoint( double * X,
double * Y,
double * Z,
BOOL * Result );
Выходные параметры:

X, Y, Z " координаты точки.

Возвращаемое значение:

TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.
1862



SetCenterPoint  Установить координаты центра 
Интерфейс...
Синтаксис Automation:
BOOL SetCenterPoint( double X,
double Y,
double Z );
Синтаксис COM:
HRESULT SetCenterPoint( double X,
double Y,
double Z,
BOOL * Result );
Входные параметры:

X, Y, Z " координаты точки на оси поверхности 
или центр окружности или дуги.

Возвращаемое значение:

TRUE " в случае успешного завершения,
FALSE " в случае неудачи.

Примечание:
Функция позволяет задавать новое положение размера на оси поверхности.
Изменение положения размера доступно для незафиксированного размера, у которого
измеряемым объектом является цилиндрическая, коническая или тороидальная повер"
хность. Заданная точка будет спроецирована на ось поверхности.

SetSurfacePoint  Установить точку пересечения размера 
с поверхностью или ребром
Интерфейс...
Синтаксис Automation:
BOOL SetSurfacePoint( double X,
double Y,
double Z );
Синтаксис COM:
HRESULT SetSurfacePoint( double X,
double Y,
double Z,
BOOL * Result );
Входные параметры:

X, Y, Z " координаты точки.
1863



Возвращаемое значение:

TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.

Примечание:
Функция позволяет задавать новое положение размера относительно грани или ребра.
При указании точки на поверхности точка центра пересчитается.

Обозначения
Интерфейс IBases3D
Справка системы КОМПАС: Команда База (документ"модель)
kompas.chm::/CM_BASE_3D.htm
Интерфейс коллекции обозначений базы 3D.
Иерархия:
IKompasAPIObject

IKompasCollection
IModelObjects

IBases3D
Описание:
Интерфейс позволяет получить обозначение базы 3D.
Примечание:
Получить интерфейс коллекции можно используя свойство контейнера условных обо"
значений ISymbols3DContainer::Bases3D.

IBases3D  свойства

Base3D  Обозначение базы, заданное по индексу
Интерфейс...
Тип данных: указатель на интерфейс IBase3D
Синтаксис Automation:

Base3D = iObject.Base3D( Index ); Получить свойство (* )
Base3D = iObject.GetBase3D( Index ); Получить свойство (**)

Синтаксис COM:
1864



iObject">get_Base3D( Index, Получить свойство
&Base3D )

Входные параметры:

Index VT_BSTR " имя объекта,
VT_I4 " индекс объекта.

Примечание:

1.  В качестве индекса может использоваться индекс в коллекции и reference объекта.
2.  Свойство доступно только для чтения.

IBases3D  методы

Add  Создать новый элемент и добавить его в 
коллекцию
Интерфейс...
Синтаксис Automation:
LPDISPATCH Add;
Синтаксис COM:
HRESULT Add( IBase3D ** Result);
Возвращаемое значение:

" Указатель на интерфейс базы 3D IBase3D.

Интерфейс ILeaders3D
Справка системы КОМПАС...
KOMPAS.chm::/CM_LEADER_3D.htm
Интерфейс коллекции линийвыносок 3D.
Иерархия:
IDispatch

IKompasAPIObject
IKompasCollection

IModelObjects
ILeaders3D

Примечание:
Получить интерфейс коллекции можно, используя свойство контейнера условных обо"
значений 3D ISymbols3DContainer::Leaders3D.
1865



ILeaders3D  свойства

Leader3D  Указатель на элемент, заданный по индексу
Интерфейс...
Тип данных: указатель на интерфейс IBaseLeader3D
Синтаксис Automation:

Leader3D = Object.Leader3D( Index ) Получить свойство (* )
Leader3D = Object.GetLeader3D( Index ) Получить свойство (**)

Синтаксис COM:

Object.get_Leader3D( Index, Получить свойство
&Leader3D )

Входные параметры:

Index " индекс объекта.

Примечание:

1.  Свойство доступно только для чтения.
2.  В качестве индекса может использоваться индекс в коллекции и reference объекта.

ILeaders3D  методы

Add  Создать новый элемент и добавить его в 
коллекцию
Интерфейс...
Синтаксис Automation:
LPDISPATCH Add( ksObj3dTypeEnum DimType );
Синтаксис COM:
HRESULT Add( ksObj3dTypeEnum DimType, IBaseLeader3D ** Result );
Входные параметры:

Dim " тип линии"выноски.
Typ
e

Типы линий"выносок:

o3d_leader3D 86 Линия"выноска 3D,
1866



o3d_markLeader3 87 Знак маркировки 3D,
D
o3d_positionLeade 89 Обозначение позиции 3D,
r3D
o3d_brandLeader3 90 Знак клеймения 3D.
D

Возвращаемое значение:

" Указатель на интерфейс линии выноски
IBaseLeader3D.

Возвращаемое значение:

" Указатель на интерфейс присоединительной
точки IConjunctivePoint.

Примечание:

1.  Метод позволяет создать новый интерфейс присоединительной точки.
2.  После получения нового интерфейса нужно задать параметры и вызвать метод

IModelObject::Update.

Интерфейс IRoughs3D
Справка системы КОМПАС: Команда Шероховатость (документ"модель)
kompas.chm::/CM_ROUGH_3D.htm
Интерфейс коллекции обозначений шероховатости 3D.
Иерархия:
IKompasAPIObject

IKompasCollection
IModelObjects

IRoughs3D
Описание:
Позволяет получать и создавать обозначение 3D шероховатости.
Примечание:
Получить интерфейс коллекции можно, используя свойство контейнера условных обо"
значений ISymbols3DContainer::Roughs3D.

IRoughs3D  свойства

Rough3D  Обозначение шероховатости 3D, заданное по 
индексу
Интерфейс...
1867



Тип данных: указатель на интерфейс IRough3D
Синтаксис Automation:

Rough3D = iObject.Rough3D( Index ); Получить свойство (* )
Rough3D = iObject.GetRough3D( Index ); Получить свойство (**)

Синтаксис COM:

iObject">get_Rough3D( Index, Получить свойство
&Rough3D )

Входные параметры:

Index VT_BSTR " имя объекта,
VT_I4 " индекс объекта.

Примечание:

1.  В качестве индекса может использоваться индекс в коллекции и reference объекта.
2.  Свойство доступно только для чтения.

IRoughs3D  методы

Add  Создать новый элемент и добавить его в 
коллекцию
Интерфейс...
Синтаксис Automation:
LPDISPATCH Add;
Синтаксис COM:
HRESULT Add( IRough3D ** Result);
Возвращаемое значение:

" Указатель на интерфейс шероховатости 3D IRough3D.

Интерфейс ITolerances3D
Справка системы КОМПАС: Команда Допуск формы (документ " модель)
kompas.chm::/CM_TOLERANCE_3D.htm
Интерфейс коллекции допусков формы 3D.
Иерархия:
IKompasAPIObject

IKompasCollection
1868



IModelObjects
ITolerances3D

Описание:
Позволяет получать и создавать обозначения допуска формы 3D.
Примечание:
Получить интерфейс коллекции можно используя свойство контейнера условных обо"
значений ISymbols3DContainer::Tolerances3D.

ITolerances3D  свойства

Tolerance3D  Указатель на допуск формы 3D, заданный 
по индексу
Интерфейс...
Тип данных: указатель на интерфейс ITolerance
Синтаксис Automation:

Tolerance = iObject.Tolerance( Получить свойство (* )
Index );
Tolerance = Получить свойство (**)
iObject.GetTolerance( Index );

Синтаксис COM:

iObject">get_Tolerance( Index, Получить свойство
&Tolerance )

Входные параметры:

Index " VT_BSTR " имя объекта,
VT_I4 " индекс объекта.

Примечание:

1.  В качестве индекса может использоваться индекс в коллекции и reference объекта.
2.  Свойство доступно только для чтения.

ITolerances3D  методы

Add  Создать новый элемент и добавить его в 
коллекцию
Интерфейс...
Синтаксис Automation:
LPDISPATCH Add();
1869



Синтаксис COM:
HRESULT Add( ITolerance3D ** Result);
Возвращаемое значение:

" Указатель на интерфейс допуска формы
Itolerance3D.

Интерфейс IBase3D
Справка системы КОМПАС: Команда База (документ"модель)
kompas.chm::/CM_BASE_3D.htm
Интерфейс обозначения базы 3D.
Иерархия:
IKompasAPIObject

IModelObject
IBase3D

Примечание:
Интерфейс можно получить у коллекции обозначений базы 3D, используя свойство
IBases3D::Base3D или метод IBases3D::Add.

IBase3D  свойства

AutoSorted  Автосортировка
Интерфейс...
Тип данных: BOOL
Значения свойства:

TRUE " включить оп"
цию,

FALSE " отключить оп"
цию.

Синтаксис Automation:

AutoSorted = Получить свойство (* )
Object.AutoSorted
Object.AutoSorted = Установить свойство (* )
AutoSorted
AutoSorted = Получить свойство (**)
Object.GetAutoSorted()
Object.SetAutoSorted( Установить свойство (**)
AutoSorted )
1870



Синтаксис COM:

Object.get_AutoSorted( Получить свойство
&AutoSorted )
Object.put_AutoSorted(  Установить свойство
AutoSorted )

Примечание.

1.  По умолчанию значение свойства равно TRUE.
2.  При отключенной опции доступно редактирование текста 3D базы с помощью свойства

IBase3D::Text.

BasePlane  Базовая плоскость
Интерфейс...
Тип данных: из перечисления ksObj3dTypeEnum
Синтаксис Automation:

BasePlane = Получить свойство (* )
Object.BasePlane
Object.BasePlane = Установить свойство (* )
BasePlane
BasePlane = Получить свойство (**)
Object.GetBasePlane()
Object.SetBasePlane( Установить свойство (**)
BasePlane )

Синтаксис COM:

Object.get_BasePlane( Получить свойство
&BasePlane )
Object.put_BasePlane(  Установить свойство
BasePlane )

Примечание.
Свойство позволяет устанавливать и получать тип плоскости, в которой располагается
объект, из перечисления ksObj3dTypeEnum.

BaseObject  Опорный объект
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:
1871



BaseObject = Получить свойство (* )
Object.BaseObject
BaseObject = Получить свойство (**)
Object.GetBaseObject()

Синтаксис COM:

Object.get_BaseObject( Получить свойство
&BaseObject )

Примечание.
Свойство доступно только для чтения.

DrawType  Способ отрисовки обозначения базы
Интерфейс...
Тип данных: BOOL
Значения свойства:

TRUE " перпендикулярно к 
объекту,

FALSE " произвольное 
расположение.

Синтаксис Automation:

DrawType = Object.DrawType Получить свойство (* )
Object.DrawType = DrawType Установить свойство (* )
DrawType = Object.GetDrawType() Получить свойство (**)
Object.SetDrawType( DrawType ) Установить свойство (**)

Синтаксис COM:

Object.get_DrawType( &DrawType ) Получить свойство
Object.put_DrawType(  DrawType ) Установить свойство

Примечание.
По умолчанию значение свойства равно TRUE.

PositionObject  Положение плоскости обозначения
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:

PositionObject = Object.PositionObject Получить свойство (* )
1872



Object.PositionObject = PositionObject Установить свойство (* )
PositionObject = Object.GetPositionObject() Получить свойство (**)
Object.SetPositionObject( PositionObject ) Установить свойство (**)

Синтаксис COM:

Object.get_PositionObject( Получить свойство
&PositionObject )
Object.put_PositionObject( Установить свойство
PositionObject )

Примечание.
Свойство позволяет устанавливать и получать объект, на котором будет располагаться
плоскость.

Text  Текст базы
Интерфейс...
Синтаксис Automation:

Text = Object.Text Получить свойство (* )
Text = Object.GetText() Получить свойство (**)

Синтаксис COM:

Object.get_Text( &Text ) Получить свойство

Примечание.

1.  Свойство доступно только для чтения.
2.  Свойство позволяет получить указатель на интерфейс текста IText для редактирования

текста 3D базы. Указатель на интерфейс IText вернётся только в случае отключенной оп"
ции "Автосортировка". Если автосортировка текста включена, свойство вернёт NULL.

IBase3D  методы

GetPosition  Получить точку, задающую положение 
плоскости объекта
Интерфейс...
Синтаксис Automation:
BOOL GetPosition ( double * x,
double * x,
double * z );
Синтаксис COM:
1873



HRESULT GetPosition( double * x,
double * y
double * z
BOOL* Result);
Выходные параметры:

x, y, z " координаты точки, 
задающей положения 
объекта.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

GetBranchBeginPoint  Получить точку, привязки 
обозначения базы на поверхности
Интерфейс...
Синтаксис Automation:
BOOL GetBranchBeginPoint( double * x,
double * x,
double * z );
Синтаксис COM:
HRESULT GetBranchBeginPoint( double * x,
double * y,
double * z,
BOOL   * Result);
Выходные параметры:

x, y, z " координаты точки 
привязки 
обозначения базы на 
поверхности.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.
1874



GetBranchEndPoint  Получить точку положения надписи 
обозначения базы
Интерфейс...
Синтаксис Automation:
BOOL GetBranchEndPoint( double * x,
double * x,
double * z );
Синтаксис COM:
HRESULT GetBranchEndPoint( double * x,
double * y,
double * z,
BOOL   * Result);
Выходные параметры:

x, y, z " координаты точки положения 
надписи обозначения базы.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetBranchBeginPoint  Установить точку привязки 
обозначения базы на поверхности
Интерфейс...
Синтаксис Automation:
BOOL SetBranchBeginPoint( double x,
double x,
double z );
Синтаксис COM:
HRESULT SetBranchBeginPoint( double x,
double y,
double z,
IModelObject * Object,
BOOL * Result);
Входные параметры:

x, y, z " координаты точки привязки 
обозначения базы на поверхности.
1875



Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetBranchEndPoint  Установить точку положения 
надписи обозначения базы
Интерфейс...
Синтаксис Automation:
BOOL SetBranchEndPoint( double x,
double x,
double z );
Синтаксис COM:
HRESULT SetBranchEndPoint( double x,
double y,
double z,
BOOL * Result );
Входные параметры:

x, y, z " координаты точки положения 
надписи обозначения базы.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetPosition  Получить точку, задающую положение 
плоскости объекта
Интерфейс...
Синтаксис Automation:
BOOL SetPosition ( double x,
double x,
double z );
Синтаксис COM:
HRESULT SetPosition( double x,
double   y
double   z
BOOL   * Result);
Входные параметры:
1876



x, y, z " координаты точки, 
задающей положения 
объекта;

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

Интерфейс IBaseLeader3D
Справка системы КОМПАС: команда Линия"выноска (документ"модель)
KOMPAS.chm::/CM_LEADER_3D.htm
Интерфейс обозначения линиивыноски 3D.
Иерархия:
IDispatch

IKompasAPIObject
IModelObject

IBaseLeader3D
ILeader
IPositionLeader
IBrandLeader
IMarkLeader
IBranchs3D
IChangeLeader
Примечание:

1. Интерфейс можно получить у коллекции линий выносок 3D, используя свойство
ILeaders3D::Leader3D или метод ILeaders3D::Add.

2.  Посредством вызова метода IUnknown::QueryInterface (const GUID far& iid, void** pif) ин"
терфейс позволяет получить следующие дополнительные интерфейсы:

Тип линии"выноски ksObj3dTypeEnum Интерфейс,
Простая линия"выно" o3d_leader3D ILeader,
ска
Линия"выноска для o3d_positionLeader3 IPositionLeader,
обозначения позиции D
Линия"выноска для o3d_brandLeader3D IBrandLeader,
для обозначения
клеймения
1877



Линия"выноска для o3d_markLeader3D IMarkLeader,
обозначения марки"
рования
Знак изменения IChangeLeader,
Ответвления IBranchs3D.

3.  После задания параметров обозначения требуется вызвать метод IModelObject::Update.

IBaseLeader3D  свойства

ArrowType  Тип стрелки линиивыноски
Интерфейс...
Тип данных: из перечисления ksArrowEnum
Синтаксис Automation:

ArrowType = Получить свойство (* )
Object.ArrowType
Object.ArrowType = Установить свойство (* )
ArrowType
ArrowType = Получить свойство (**)
Object.GetArrowType()
Object.SetArrowType( Установить свойство (**)
ArrowType )

Синтаксис COM:

Object.get_ArrowType( Получить свойство
&ArrowType )
Object.put_ArrowType(  Установить свойство
ArrowType )

Входные параметры:

Inde " индекс ответвле"
x ния ( long ).

Примечание.
Свойство позволяет устанавливать и получать тип стрелки ответвления.

BasePlane  Базовая плоскость
Интерфейс...
Тип данных: из перечисления ksObj3dTypeEnum
Значения свойства:
1878



o3d_unkno 0 Неизвестный
wn
o3d_plane 1 Плоскость XOY
XOY
o3d_plane 2 Плоскость XOZ
XOZ
o3d_planeY 3 Плоскость YOZ
OZ

Синтаксис Automation:

BasePlane = Получить свойство (* )
Object.BasePla
ne
Object.BasePla Установить свойство (* )
ne = BasePlane
BasePlane = Получить свойство (**)
Object.GetBase
Plane()
Object.SetBase Установить свойство (**)
Plane(
BasePlane )

Синтаксис COM:

Object.get_BasePlane( Получить свойство
&BasePlane )
Object.put_BasePlane(  Установить свойство
BasePlane )

Примечание.
Свойство позволяет устанавливать и получать тип плоскости из перечисления
ksObj3dTypeEnum, в которой располагается объект.

PositionObject  Объект, задающий положение плоскости 
обозначения
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:

PositionObject = Получить свойство (* )
Object.PositionObject
Object.PositionObject = Установить свойство (* )
PositionObject
1879



PositionObject = Получить свойство (**)
Object.GetPositionObject()
Object.SetPositionObject( Установить свойство (**)
PositionObject )

Синтаксис COM:

Object.get_PositionObject( Получить свойство
&PositionObject )
Object.put_PositionObject( Установить свойство
PositionObject )

Примечание.
Свойство позволяет устанавливать и получать объект, на котором будет располагаться
плоскость объекта.

IBaseLeader3D  методы

GetPosition  Получить точку, задающую положение 
объекта
Интерфейс...
Синтаксис Automation:
BOOL GetPosition ( double * x,
double * y,
double * z );
Синтаксис COM:
HRESULT GetPosition( double * x,
double * y
double * z
BOOL   * Result);
Выходные параметры:

x, y, z " координаты точки, задающей 
положение объекта.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetPosition  Установить точку, задающую положение 
объекта
Интерфейс...
1880



Синтаксис Automation:
BOOL SetPosition ( double x,
double y,
double z );
Синтаксис COM:
HRESULT SetPosition(  double x,
double y
double z
BOOL * Result);
Входные параметры:

x, y, z " координаты точки, задающей 
положение объекта.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

Интерфейс IRough3D
Справка системы КОМПАС: Команда Шероховатость (документ"модель)
kompas.chm::/CM_ROUGH_3D.htm
Интерфейс обозначения шероховатости 3D.
Иерархия:
IDispatch

IKompasAPIObject
IModelObject

IRough3D
IRoughParams
Примечание:

1.  Интерфейс можно получить у коллекции обозначений шероховатости 3D, используя
свойство IRoughs3D::Rough3D или метод IRoughs3D::Add.

2.  После задания параметров объекта требуется вызвать метод IModelObject_Update.
3.  Интерфейс IRoughParams является дополнительным, его можно получить с помощью

метода IUnknown::QueryInterface.

IRough3D  свойства

BasePlane  Базовая плоскость
Интерфейс...
1881



Тип данных: из перечисления ksObj3dTypeEnum
Синтаксис Automation:

BasePlane = Получить свойство (* )
Object.BasePlane
Object.BasePlane = Установить свойство (* )
BasePlane
BasePlane = Получить свойство (**)
Object.GetBasePlane()
Object.SetBasePlane( Установить свойство (**)
BasePlane )

Синтаксис COM:

Object.get_BasePlane( Получить свойство
&BasePlane )
Object.put_BasePlane(  Установить свойство
BasePlane )

Примечание.
Свойство позволяет устанавливать и получать тип плоскости, в которой располагается
объект, из перечисления ksObj3dTypeEnum.

PositionObject  Положение плоскости обозначения
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:

PositionObject = Получить свойство (* )
Object.PositionObject
Object.PositionObject = Установить свойство (* )
PositionObject
PositionObject = Получить свойство (**)
Object.GetPositionObject()
Object.SetPositionObject( Установить свойство (**)
PositionObject )

Синтаксис COM:

Object.get_PositionObject( Получить свойство
&PositionObject )
Object.put_PositionObject( Установить свойство
PositionObject )

Примечание.
1882



Свойство позволяет устанавливать и получать объект, на котором будет располагаться
плоскость объекта.

IRough3D  методы

BaseObject  Опорный объект
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:

BaseObject = Получить свойство (* )
Object.BaseObject
BaseObject = Получить свойство (**)
Object.GetBaseObject()

Синтаксис COM:

Object.get_BaseObject( Получить свойство
&BaseObject )

Примечание.
Свойство доступно только для чтения.

BasePosition  Установить точку начала выносной линии 
или привязки знака
Интерфейс...
Синтаксис Automation:
BOOL SetBasePosition( double * x,
double * x,
double * z );
Синтаксис COM:
HRESULT SetBasePosition( double * x,
double * y,
double * z,
IModelObject * Object,
BOOL   * Result);
Входные параметры:

x, y, z " координаты точки 
начала выносной 
линии или привязки 
знака.
1883



Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

GetBasePosition  Получить точку начала выносной 
линии или привязки знака
Интерфейс...
Синтаксис Automation:
BOOL GetBasePosition( double * x,
double * x,
double * z );
Синтаксис COM:
HRESULT GetBasePosition( double * x,
double * y,
double * z,
BOOL   * Result);
Выходные параметры:

x, y, z " координаты точки 
начала выносной 
линии или привязки 
знака.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

GetPosition  Получить точку, задающую положение 
плоскости объекта
Интерфейс...
Синтаксис Automation:
BOOL GetPosition ( double * x,
double * x,
double * z );
Синтаксис COM:
HRESULT GetPosition(  double * x,
double * y
1884



double * z
BOOL   * Result);
Выходные параметры:

x, y, z " координаты точки, 
задающей положения 
объекта.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

GetShelfPosition  Получить точку начала полки
Интерфейс...
Синтаксис Automation:
BOOL GetShelfPosition( double * x,
double * x,
double * z );
Синтаксис COM:
HRESULT GetShelfPosition( double * x,
double * y,
double * z,
BOOL * Result);
Выходные параметры:

x, y, z " координаты точки 
начала полки.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetPosition  Установить точку, задающую положение 
плоскости объекта
Интерфейс...
Синтаксис Automation:
1885



BOOL SetPosition ( double x,
double x,
double z );
Синтаксис COM:
HRESULT SetPosition(  double * x,
double * y
double * z
BOOL   * Result);
Входные параметры:

x, y, z " координаты точки, 
задающей положения 
объекта.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetShelfPosition  Установить точку начала полки
Интерфейс...
Синтаксис Automation:
BOOL SetShelfPosition( double x,
double x,
double z );
Синтаксис COM:
HRESULT SetShelfPosition( double x,
double   y,
double   z,
BOOL   * Result );
Выходные параметры:

x, y, z " координаты точки 
начала полки.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.
1886



Интерфейс ITolerance3D
Справка системы КОМПАС: Команда Допуск формы (документ " модель)
kompas.chm::/CM_TOLERANCE_3D.htm
Интерфейс обозначения допуска формы 3D.
Иерархия:
IDispatch

IKompasAPIObject
IModelObject

ITolerance3D
IToleranceParam
IBranchs3D
ITable
Примечание:

1.  Интерфейс можно получить у коллекции обозначений допуска формы 3D, используя
свойство ITolerances3D::Tolerance3D или метод ITolerances3D::Add.

2.  Посредством вызова метода IUnknown::QueryInterface (const GUID far& iid, void** pif) ин"
терфейс позволяет получить следующие дополнительные интерфейсы:

▼ IToleranceParam " интерфейс параметров допуска формы,
▼ IBranchs3D " интерфейс для работы с ответвлениями в 3D,
▼ ITable " интерфейс таблицы.
3.  После задания параметров обозначения требуется вызвать метод IModelObject::Update.

ITolerance3D  свойства

BranchPos  Положение ножки
Интерфейс...
Тип данных: из перечисления ksTablePointEnum
Синтаксис Automation:

BranchPos = Object.BranchPos( Index ) Получить свойство (* )
Object.BranchPos( Index ) = BranchPos Установить свойство (* )
BranchPos = Object.GetBranchPos( Index ) Получить свойство (**)
Object.SetBranchPos( Index, BranchPos ) Установить свойство (**)

Синтаксис COM:

Object.get_BranchPos( Index, &BranchPos ) Получить свойство
Object.put_BranchPos( Index, BranchPos ) Установить свойство

Входные параметры:
1887



long Index " индекс ответвления.

ArrowType  Тип стрелки ответвления
Интерфейс...
Тип данных: BOOL
Значения свойства:

TRUE " стрелка,
FALSE " треугольник.

Синтаксис Automation:

ArrowType = Получить свойство (* )
Object.ArrowType( Index )
Object.ArrowType( Index ) Установить свойство (* )
= ArrowType
ArrowType = Получить свойство (**)
Object.GetArrowType( 
Index )
Object.SetArrowType( Установить свойство (**)
Index, ArrowType )

Синтаксис COM:

Object.get_Arro Получить
wType( Index, свойство
&ArrowType )
Object.put_Arr Установить
owType( Index, свойство
ArrowType )

Входные параметры:

Index " индекс ответвления ( long ).

Примечание.
Свойство позволяет устанавливать и получать тип стрелки ответвления.

BasePlane  Базовая плоскость
Интерфейс...
1888



Тип данных: из перечисления ksObj3dTypeEnum
Значения свойства:

o3d_unkno 0 Неизвест"
wn ный
o3d_plane 1 Плоскость
XOY XOY
o3d_plane 2 Плоскость
XOZ XOZ
o3d_planeY 3 Плоскость
OZ YOZ

Синтаксис Automation:

BasePlane = Object.BasePlane Получить свойство (* )
Object.BasePlane = BasePlane Установить свойство (* )
BasePlane = Получить свойство (**)
Object.GetBasePlane()
Object.SetBasePlane( BasePlane ) Установить свойство (**)

Синтаксис COM:

Object.get_BasePlane( Получить свойство
&BasePlane )
Object.put_BasePlane(  Установить свойство
BasePlane )

Примечание.
Свойство позволяет устанавливать и получать тип плоскости из перечисления
ksObj3dTypeEnum, в которой располагается объект.

PositionObject  Положение плоскости обозначения
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:

PositionObject = Получить свойство (* )
Object.PositionObject
Object.PositionObject = Установить свойство (* )
PositionObject
PositionObject = Получить свойство (**)
Object.GetPositionObject()
Object.SetPositionObject( Установить свойство (**)
PositionObject )

Синтаксис COM:
1889



Object.get_PositionObject( Получить
&PositionObject ) свойство
Object.put_PositionObject( Установить
PositionObject ) свойство

Примечание.
Свойство позволяет устанавливать и получать объект, на котором будет располагаться
плоскость объекта.

ToleranceArrowType  Тип стрелки ответвления
Интерфейс...
Тип данных: из перечисления ksToleranceArrowType
Синтаксис Automation:

ToleranceArrowType = Получить свойство (* )
Object.ToleranceArrowTyp
e( Index )
Object.ToleranceArrowTyp Установить свойство (* )
e( Index ) = 
ToleranceArrowType
ToleranceArrowType = Получить свойство (**)
Object.GetToleranceArrow
Type( Index )
Object.SetToleranceArrow Установить свойство (**)
Type( Index, 
ToleranceArrowType )

Синтаксис COM:

Object.get_ToleranceArro Получить свойство
wType( Index, 
&ToleranceArrowType ) 
Object.put_ToleranceArro Установить свойство
wType(  Index, 
ToleranceArrowType )

Входные параметры:

Index " индекс ответвления.
1890



ITolerance3D  методы

GetPosition  Получить точку, задающую положение 
объекта
Интерфейс...
Синтаксис Automation:
BOOL GetPosition ( double * x,
double * y,
double * z );
Синтаксис COM:
HRESULT GetPosition( double * x,
double * y
double * z
BOOL   * Result);
Выходные параметры:

x, y, z " координаты точки, задающей 
положение объекта.

Возвращаемое значение:

TRUE " в случае удачного 
завершения,

FALSE " в случае неудачи.

SetPosition  Установить точку, задающую положение 
объекта
Интерфейс...
Синтаксис Automation:
BOOL SetPosition ( double x,
double y,
double z );
Синтаксис COM:
HRESULT SetPosition(  double x,
double y
double z
BOOL * Result);
Входные параметры:

x, y, z " координаты точки, задающей 
положение объекта.
1891



Возвращаемое значение:

TRUE " в случае удач"
ного заверше"
ния,

FALSE " в случае неу"
дачи.

Интерфейс IBranchs3D
Справка системы КОМПАС...
KOMPAS.chm::/1024_113_2_2_Dobavlenie_i_udalenie_otv.htm
Интерфейс для работы с ответвлениями.
Иерархия:
IDispatch

IBranchs3D
Примечание:
Интерфейс можно получить посредством вызова метода IUnknown::QueryInterface у ин"
терфейсов IBaseLeader3D, ITolerance3D, IMarkLeader, IPositionLeader, IChangeLeader,
IBrandLeader.

IBranchs3D  свойства

BranchCount  Число ответвлений
Интерфейс...
Тип данных: long
Синтаксис Automation:

BranchCount = Получить свойство (* )
Object.BranchCount
BranchCount = Получить свойство (**)
Object.GetBranchCount()

Синтаксис COM:

Object.get_BranchCount( Получить свойство
&BranchCount )

Примечание:
Свойство доступно только для чтения.
1892



BranchEndPoints  Массив SAFEARRAY координат точек 
целеуказания
Интерфейс...
Тип данных: VARIANT типа VT_ARRAY | VT_R8
Синтаксис Automation:

BranchEndPoints = Получить свойство (* )
Object.BranchEndPoints
BranchEndPoints = Получить свойство (**)
Object.GetBranchEndPoints()

Синтаксис COM:

Object.get_BranchEndPoints( Получить свойство
&BranchEndPoints )

Свойство позволяет получить массив координат конечных точек ответвлений.
Примечание:

1.  Свойство доступно только для чтения.
2.  Координаты точек в массиве лежат в следующей последовательности: x0, y0, z0, x1, y1,

z1,...xi, yi, zi.

BranchObject  Объект, на который указывает «ножка»
Интерфейс...
Тип данных: указатель на интерфейс IModelObject
Синтаксис Automation:

BranchObject = Получить свойство (* )
Object.BranchObject( Index )
BranchObject = Получить свойство (**)
Object.GetBranchObject( Index )

Синтаксис COM:

Object.get_BranchObject( Index, Получить свойство
&BranchObject )

Входные параметры

long Index " номер ответвления.

Примечание:
Свойство доступно только для чтения.
1893



BranchObjects  Массив SAFEARRAY объектов, на 
которые указывают «ножки»
Интерфейс...
Тип данных: VARIANT типа VT_ARRAY | VT_DISPATCH
Синтаксис Automation:

BranchObjects = Получить свойство (* )
Object.BranchObjects
BranchObjects = Получить свойство (**)
Object.GetBranchObjects()

Синтаксис COM:

Object.get_BranchObjects( Получить свойство
&BranchObjects )

Примечание:

1.  Если возвращается один объект, то тип VARIANT"а будет VT_DISPATCH, если возвраща"
ется несколько объектов, то тип VARIANT"а будет VT_ARRAY | VT_DISPATCH.

2.  Свойство доступно только для чтения.

BranchPoints  Массив SAFEARRAY координат точек 
ответвления
Интерфейс...
Тип данных: VARIANT типа VT_ARRAY | VT_R8
Синтаксис Automation:

BranchPoints = Получить свойство (* )
Object.BranchPoints( Index )
Object.BranchPoints( Index ) = Установить свойство (* )
BranchPoints
BranchPoints = Получить свойство (**)
Object.GetBranchPoints( Index )
Object.SetBranchPoints( Index, Установить свойство (**)
BranchPoints )

Синтаксис COM:

Object.get_BranchPoints( Index, Получить свойство
&BranchPoints )
Object.put_BranchPoints( Index, Установить свойство
BranchPoints )
1894



Входные параметры

long Index " номер ответвления.

Свойство позволяет получить массив координат точек ответвления, заданного по номе"
ру.
Примечание:

1.  Координаты точек в массиве лежат в следующей последовательности: x0, y0, z0, x1, y1,
z1,...xi, yi, zi.

2.  При задании точек координаты будут спроецированы на плоскость объекта.

BranchPointsCount  Число точек в ответвлении
Интерфейс...
Тип данных: long
Синтаксис Automation:

BranchPointsCount = Получить свойство (* )
Object.BranchPointsCount
BranchPointsCount = Получить свойство (**)
Object.GetBranchPointsCount()

Синтаксис COM:

Object.get_BranchPointsCount( Получить свойство
&BranchPointsCount )

Входные параметры

long Index " номер ответвления.

Примечание:
Свойство доступно только для чтения.

IBranchs3D  методы

AddBranch  Добавить ответвление
Интерфейс...
Синтаксис Automation:
BOOL AddBranch( VARIANT Points,
LPDISPATCH Object );
Синтаксис COM:
1895



HRESULT AddBranch( VARIANT Points,
IModelObject * Object,
BOOL * Result );
Входные параметры:

Object " объект, на который 
указывает ответвление,

Points " массив SafeArray типа 
VT_ARRAY | VT_R8 
координат точек.

Возвращаемое значение:

TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.

Примечание:

1.  Координаты точек в массиве лежат в следующей последовательности: x0, y0, z0, x1, y1,
z1 ...xi, yi, zi.

2.  При задании точек координаты будут спроецированы на плоскость объекта.

AddBranchByPoint  Добавить прямолинейное 
ответвление
Интерфейс...
Синтаксис Automation:
BOOL AddBranchByPoint( double X,
double Y,
double Z,
IModelObject * Object);
Синтаксис COM:
HRESULT AddBranchByPoint( double X,
double Y,
double Z,
IModelObject * Object,
BOOL * Result );
Входные параметры:

Object " объект целеуказания,
x, y, z " координаты точки 

целеуказания.

Возвращаемое значение:
1896



TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.

DeleteBranch  Удалить ответвление
Интерфейс...
Синтаксис Automation:
BOOL DeleteBranch( long Index );
Синтаксис COM:
HRESULT DeleteBranch( long Index, BOOL * Result );
Входные параметры:

Index " индекс ответвления.

Возвращаемое значение:

TRUE " в случае успешного 
завершения,

FALSE " в случае неудачи.

GetBranchBeginPoint  Получить координаты начала 
полки или точки привязки
Интерфейс...
Синтаксис Automation:
BOOL GetBranchBeginPoint( double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetBranchBeginPoint( double * X,
double * Y,
double * Z,
BOOL * Result );
Выходные параметры:

x, y, z " координаты точки.

Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.
1897



Метод позволяет получить координаты начала полки.

GetBranchEndPoint  Получить координаты конечной 
точки ответвления
Интерфейс...
Синтаксис Automation:
BOOL GetBranchBeginPoint( long Index,
double * X,
double * Y,
double * Z );
Синтаксис COM:
HRESULT GetBranchBeginPoint( long Index,
double * X,
double * Y,
double * Z,
BOOL * Result );
Входные параметры:

Index " индекс ответвления.

Выходные параметры:

x, y, z " координаты точки.
Возвращаемое значение:

TRUE " в случае успеха,
FALSE " в случае неудачи.

Метод позволяет получить координаты конечной точки ответвления.

SetBranchBeginPoint  Установить координаты начала 
полки или точки привязки
Интерфейс...
Синтаксис Automation:
BOOL SetBranchBeginPoint( double X,
double Y,
double Z );
Синтаксис COM:
HRESULT SetBranchBeginPoint( double X,
double Y,
1898



double Z,
BOOL * Result );
